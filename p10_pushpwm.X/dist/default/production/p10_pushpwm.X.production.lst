

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Jun 21 18:59:17 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           ; Version 1.42
    41                           ; Generated 13/04/2017 GMT
    42                           ; 
    43                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  000800                     __psmallconst:
    77                           	opt stack 0
    78  000800  00                 	db	0
    79  000801                     exp@coeff:
    80                           	opt stack 0
    81  000801  00                 	db	0
    82  000802  80                 	db	128
    83  000803  3F                 	db	63
    84  000804  72                 	db	114
    85  000805  31                 	db	49
    86  000806  3F                 	db	63
    87  000807  FE                 	db	254
    88  000808  75                 	db	117
    89  000809  3E                 	db	62
    90  00080A  58                 	db	88
    91  00080B  63                 	db	99
    92  00080C  3D                 	db	61
    93  00080D  95                 	db	149
    94  00080E  1D                 	db	29
    95  00080F  3C                 	db	60
    96  000810  C5                 	db	197
    97  000811  AE                 	db	174
    98  000812  3A                 	db	58
    99  000813  79                 	db	121
   100  000814  21                 	db	33
   101  000815  39                 	db	57
   102  000816  94                 	db	148
   103  000817  80                 	db	128
   104  000818  37                 	db	55
   105  000819  93                 	db	147
   106  00081A  A7                 	db	167
   107  00081B  35                 	db	53
   108  00081C  56                 	db	86
   109  00081D  15                 	db	21
   110  00081E  34                 	db	52
   111  00081F                     __end_ofexp@coeff:
   112                           	opt stack 0
   113  00081F                     log@coeff:
   114                           	opt stack 0
   115  00081F  00                 	db	0
   116  000820  00                 	db	0
   117  000821  00                 	db	0
   118  000822  00                 	db	0
   119  000823  80                 	db	128
   120  000824  3F                 	db	63
   121  000825  F0                 	db	240
   122  000826  FF                 	db	255
   123  000827  BE                 	db	190
   124  000828  E2                 	db	226
   125  000829  A9                 	db	169
   126  00082A  3E                 	db	62
   127  00082B  83                 	db	131
   128  00082C  76                 	db	118
   129  00082D  BE                 	db	190
   130  00082E  AE                 	db	174
   131  00082F  2B                 	db	43
   132  000830  3E                 	db	62
   133  000831  3C                 	db	60
   134  000832  C3                 	db	195
   135  000833  BD                 	db	189
   136  000834  D2                 	db	210
   137  000835  13                 	db	19
   138  000836  3D                 	db	61
   139  000837  78                 	db	120
   140  000838  D3                 	db	211
   141  000839  BB                 	db	187
   142  00083A                     __end_oflog@coeff:
   143                           	opt stack 0
   144  0000                     _INTCON2bits	set	4081
   145  0000                     _ADCON1	set	4033
   146  0000                     _LATBbits	set	3978
   147  0000                     _TRISBbits	set	3987
   148  0000                     _T2CON	set	4042
   149  0000                     _CCP2CON	set	4026
   150  0000                     _CCPR2L	set	4027
   151  0000                     _PR2	set	4043
   152  0000                     _PEIE	set	32662
   153  0000                     _GIE	set	32663
   154  0000                     _INT0IF	set	32657
   155  0000                     _INT0IE	set	32660
   156                           
   157                           ; #config settings
   158  00083A  00                 	db	0	; dummy byte at the end
   159  0000                     
   160                           	psect	cinit
   161  001AC4                     __pcinit:
   162                           	opt stack 0
   163  001AC4                     start_initialization:
   164                           	opt stack 0
   165  001AC4                     __initialization:
   166                           	opt stack 0
   167                           
   168                           ; Clear objects allocated to BANK0 (28 bytes)
   169  001AC4  EE00  F081         	lfsr	0,__pbssBANK0
   170  001AC8  0E1C               	movlw	28
   171  001ACA                     clear_0:
   172  001ACA  6AEE               	clrf	postinc0,c
   173  001ACC  06E8               	decf	wreg,f,c
   174  001ACE  E1FD               	bnz	clear_0
   175  001AD0                     end_of_initialization:
   176                           	opt stack 0
   177  001AD0                     __end_of__initialization:
   178                           	opt stack 0
   179  001AD0  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  001AD2  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  001AD4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   182  001AD6  6EF8               	movwf	tblptru,c
   183  001AD8  0E08               	movlw	high __Lsmallconst
   184  001ADA  6EF7               	movwf	tblptrh,c
   185  001ADC  0100               	movlb	0
   186  001ADE  EF71  F00D         	goto	_main	;jump to C main() function
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssBANK0
   193  000081                     __pbssBANK0:
   194                           	opt stack 0
   195  000081                     _modulo:
   196                           	opt stack 0
   197  000081                     	ds	20
   198  000095                     _errno:
   199                           	opt stack 0
   200  000095                     	ds	2
   201  000097                     _lsb:
   202                           	opt stack 0
   203  000097                     	ds	2
   204  000099                     _msb:
   205                           	opt stack 0
   206  000099                     	ds	2
   207  00009B                     _incremento:
   208                           	opt stack 0
   209  00009B                     	ds	2
   210                           tblptru	equ	0xFF8
   211                           tblptrh	equ	0xFF7
   212                           postinc0	equ	0xFEE
   213                           wreg	equ	0xFE8
   214                           
   215                           	psect	cstackBANK0
   216  000060                     __pcstackBANK0:
   217                           	opt stack 0
   218  000060                     _pow$846:
   219                           	opt stack 0
   220                           
   221                           ; 3 bytes @ 0x0
   222  000060                     	ds	3
   223  000063                     _pow$847:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0x3
   227  000063                     	ds	3
   228  000066                     pow@sign:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x6
   232  000066                     	ds	1
   233  000067                     pow@yi:
   234                           	opt stack 0
   235                           
   236                           ; 4 bytes @ 0x7
   237  000067                     	ds	4
   238  00006B                     _dectobin$844:
   239                           	opt stack 0
   240                           
   241                           ; 3 bytes @ 0xB
   242  00006B                     	ds	3
   243  00006E                     _dectobin$845:
   244                           	opt stack 0
   245                           
   246                           ; 3 bytes @ 0xE
   247  00006E                     	ds	3
   248  000071                     dectobin@i:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x11
   252  000071                     	ds	2
   253  000073                     ??_high_isr:
   254                           
   255                           ; 1 bytes @ 0x13
   256  000073                     	ds	14
   257  000081                     tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           
   262                           ; 1 bytes @ 0x21
   263                           
   264                           	psect	cstackCOMRAM
   265  000001                     __pcstackCOMRAM:
   266                           	opt stack 0
   267  000001                     ?___wmul:
   268                           	opt stack 0
   269  000001                     ?___awdiv:
   270                           	opt stack 0
   271  000001                     ?___ftpack:
   272                           	opt stack 0
   273  000001                     ?_frexp:
   274                           	opt stack 0
   275  000001                     ?___ftneg:
   276                           	opt stack 0
   277  000001                     ___wmul@multiplier:
   278                           	opt stack 0
   279  000001                     ___awdiv@dividend:
   280                           	opt stack 0
   281  000001                     ___ftpack@arg:
   282                           	opt stack 0
   283  000001                     ___ftge@ff1:
   284                           	opt stack 0
   285  000001                     ___ftneg@f1:
   286                           	opt stack 0
   287  000001                     frexp@value:
   288                           	opt stack 0
   289                           
   290                           ; 3 bytes @ 0x0
   291  000001                     	ds	2
   292  000003                     ___wmul@multiplicand:
   293                           	opt stack 0
   294  000003                     ___awdiv@divisor:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x2
   298  000003                     	ds	1
   299  000004                     ___ftpack@exp:
   300                           	opt stack 0
   301  000004                     frexp@eptr:
   302                           	opt stack 0
   303  000004                     ___ftge@ff2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0x3
   307  000004                     	ds	1
   308  000005                     ___awdiv@counter:
   309                           	opt stack 0
   310  000005                     ___ftpack@sign:
   311                           	opt stack 0
   312  000005                     ___wmul@product:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x4
   316  000005                     	ds	1
   317  000006                     ??___ftpack:
   318  000006                     ??_frexp:
   319  000006                     ___awdiv@sign:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x5
   323  000006                     	ds	1
   324  000007                     ??___ftge:
   325  000007                     ___awdiv@quotient:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x6
   329  000007                     	ds	2
   330  000009                     ?___ftdiv:
   331                           	opt stack 0
   332  000009                     ?___awtoft:
   333                           	opt stack 0
   334  000009                     ?___lltoft:
   335                           	opt stack 0
   336  000009                     ___awtoft@c:
   337                           	opt stack 0
   338  000009                     ___ftdiv@f1:
   339                           	opt stack 0
   340  000009                     ___lltoft@c:
   341                           	opt stack 0
   342                           
   343                           ; 4 bytes @ 0x8
   344  000009                     	ds	3
   345  00000C                     ___awtoft@sign:
   346                           	opt stack 0
   347  00000C                     ___ftdiv@f2:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0xB
   351  00000C                     	ds	1
   352  00000D                     ??___lltoft:
   353  00000D                     ?___ftmul:
   354                           	opt stack 0
   355  00000D                     ___ftmul@f1:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0xC
   359  00000D                     	ds	2
   360  00000F                     ??___ftdiv:
   361                           
   362                           ; 1 bytes @ 0xE
   363  00000F                     	ds	1
   364  000010                     ___ftmul@f2:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0xF
   368  000010                     	ds	1
   369  000011                     ___lltoft@exp:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x10
   373  000011                     	ds	1
   374  000012                     ___ftdiv@cntr:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x11
   378  000012                     	ds	1
   379  000013                     ??___ftmul:
   380  000013                     ___ftdiv@f3:
   381                           	opt stack 0
   382                           
   383                           ; 3 bytes @ 0x12
   384  000013                     	ds	3
   385  000016                     ___ftdiv@exp:
   386                           	opt stack 0
   387  000016                     ___ftmul@exp:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x15
   391  000016                     	ds	1
   392  000017                     ___ftdiv@sign:
   393                           	opt stack 0
   394  000017                     ___ftmul@f3_as_product:
   395                           	opt stack 0
   396                           
   397                           ; 3 bytes @ 0x16
   398  000017                     	ds	3
   399  00001A                     ___ftmul@cntr:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x19
   403  00001A                     	ds	1
   404  00001B                     ___ftmul@sign:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x1A
   408  00001B                     	ds	1
   409  00001C                     ?___ftadd:
   410                           	opt stack 0
   411  00001C                     ___ftadd@f1:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x1B
   415  00001C                     	ds	3
   416  00001F                     ___ftadd@f2:
   417                           	opt stack 0
   418                           
   419                           ; 3 bytes @ 0x1E
   420  00001F                     	ds	3
   421  000022                     ??___ftadd:
   422                           
   423                           ; 1 bytes @ 0x21
   424  000022                     	ds	3
   425  000025                     ___ftadd@sign:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x24
   429  000025                     	ds	1
   430  000026                     ___ftadd@exp2:
   431                           	opt stack 0
   432                           
   433                           ; 1 bytes @ 0x25
   434  000026                     	ds	1
   435  000027                     ___ftadd@exp1:
   436                           	opt stack 0
   437                           
   438                           ; 1 bytes @ 0x26
   439  000027                     	ds	1
   440  000028                     ?___ftsub:
   441                           	opt stack 0
   442  000028                     ?_eval_poly:
   443                           	opt stack 0
   444  000028                     ?___fttol:
   445                           	opt stack 0
   446  000028                     ___ftsub@f1:
   447                           	opt stack 0
   448  000028                     ___fttol@f1:
   449                           	opt stack 0
   450  000028                     eval_poly@x:
   451                           	opt stack 0
   452                           
   453                           ; 3 bytes @ 0x27
   454  000028                     	ds	3
   455  00002B                     eval_poly@d:
   456                           	opt stack 0
   457  00002B                     ___ftsub@f2:
   458                           	opt stack 0
   459                           
   460                           ; 3 bytes @ 0x2A
   461  00002B                     	ds	1
   462  00002C                     ??___fttol:
   463                           
   464                           ; 1 bytes @ 0x2B
   465  00002C                     	ds	1
   466  00002D                     eval_poly@n:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x2C
   470  00002D                     	ds	1
   471  00002E                     
   472                           ; 1 bytes @ 0x2D
   473  00002E                     	ds	1
   474  00002F                     ??_eval_poly:
   475                           
   476                           ; 1 bytes @ 0x2E
   477  00002F                     	ds	2
   478  000031                     ___fttol@sign1:
   479                           	opt stack 0
   480  000031                     eval_poly@res:
   481                           	opt stack 0
   482                           
   483                           ; 3 bytes @ 0x30
   484  000031                     	ds	1
   485  000032                     ___fttol@lval:
   486                           	opt stack 0
   487                           
   488                           ; 4 bytes @ 0x31
   489  000032                     	ds	2
   490  000034                     ?_log:
   491                           	opt stack 0
   492  000034                     ?_ldexp:
   493                           	opt stack 0
   494  000034                     ldexp@value:
   495                           	opt stack 0
   496  000034                     log@x:
   497                           	opt stack 0
   498                           
   499                           ; 3 bytes @ 0x33
   500  000034                     	ds	2
   501  000036                     ___fttol@exp1:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x35
   505  000036                     	ds	1
   506  000037                     ?___altoft:
   507                           	opt stack 0
   508  000037                     ldexp@newexp:
   509                           	opt stack 0
   510  000037                     log@exponent:
   511                           	opt stack 0
   512  000037                     ___altoft@c:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x36
   516  000037                     	ds	2
   517  000039                     ??_ldexp:
   518                           
   519                           ; 1 bytes @ 0x38
   520  000039                     	ds	2
   521  00003B                     ??___altoft:
   522                           
   523                           ; 1 bytes @ 0x3A
   524  00003B                     	ds	4
   525  00003F                     ___altoft@exp:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x3E
   529  00003F                     	ds	1
   530  000040                     ___altoft@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x3F
   534  000040                     	ds	1
   535  000041                     ?_floor:
   536                           	opt stack 0
   537  000041                     floor@x:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x40
   541  000041                     	ds	3
   542  000044                     floor@i:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x43
   546  000044                     	ds	3
   547  000047                     floor@expon:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x46
   551  000047                     	ds	2
   552  000049                     ?_exp:
   553                           	opt stack 0
   554  000049                     exp@x:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x48
   558  000049                     	ds	3
   559  00004C                     _exp$848:
   560                           	opt stack 0
   561                           
   562                           ; 3 bytes @ 0x4B
   563  00004C                     	ds	3
   564  00004F                     exp@exponent:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x4E
   568  00004F                     	ds	2
   569  000051                     exp@sign:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x50
   573  000051                     	ds	1
   574  000052                     ?_pow:
   575                           	opt stack 0
   576  000052                     pow@x:
   577                           	opt stack 0
   578                           
   579                           ; 3 bytes @ 0x51
   580  000052                     	ds	3
   581  000055                     pow@y:
   582                           	opt stack 0
   583                           
   584                           ; 3 bytes @ 0x54
   585  000055                     	ds	3
   586  000058                     dectobin@numero:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x57
   590  000058                     	ds	2
   591  00005A                     ??_dectobin:
   592                           
   593                           ; 1 bytes @ 0x59
   594  00005A                     	ds	2
   595  00005C                     ??_boton:
   596                           
   597                           ; 1 bytes @ 0x5B
   598  00005C                     	ds	2
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           
   604 ;;
   605 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   606 ;;
   607 ;; *************** function _main *****************
   608 ;; Defined at:
   609 ;;		line 165 in file "p10_pushpwm.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   623 ;;      Params:         0       0       0       0       0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0
   626 ;;      Totals:         0       0       0       0       0       0       0       0       0
   627 ;;Total ram usage:        0 bytes
   628 ;; Hardware stack levels required when called:    9
   629 ;; This function calls:
   630 ;;		_ConfigInit
   631 ;; This function is called by:
   632 ;;		Startup code after reset
   633 ;; This function uses a non-reentrant model
   634 ;;
   635                           
   636                           	psect	text0
   637  001AE2                     __ptext0:
   638                           	opt stack 0
   639  001AE2                     _main:
   640                           	opt stack 22
   641                           
   642                           ;p10_pushpwm.c: 166: ConfigInit();
   643                           
   644                           ;incstack = 0
   645  001AE2  EC27  F00D         	call	_ConfigInit	;wreg free
   646  001AE6                     l57:
   647  001AE6  D7FF               	goto	l57
   648  001AE8                     __end_of_main:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           
   655 ;; *************** function _ConfigInit *****************
   656 ;; Defined at:
   657 ;;		line 88 in file "p10_pushpwm.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   671 ;;      Params:         0       0       0       0       0       0       0       0       0
   672 ;;      Locals:         0       0       0       0       0       0       0       0       0
   673 ;;      Temps:          0       0       0       0       0       0       0       0       0
   674 ;;      Totals:         0       0       0       0       0       0       0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    8
   678 ;; This function calls:
   679 ;;		Nothing
   680 ;; This function is called by:
   681 ;;		_main
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text1
   686  001A4E                     __ptext1:
   687                           	opt stack 0
   688  001A4E                     _ConfigInit:
   689                           	opt stack 22
   690                           
   691                           ;p10_pushpwm.c: 94: PR2 = 0xF9;
   692                           
   693                           ;incstack = 0
   694  001A4E  0EF9               	movlw	249
   695  001A50  6ECB               	movwf	4043,c	;volatile
   696                           
   697                           ;p10_pushpwm.c: 101: CCPR2L = 0;
   698  001A52  0E00               	movlw	0
   699  001A54  6EBB               	movwf	4027,c	;volatile
   700                           
   701                           ;p10_pushpwm.c: 102: CCP2CON = 0b00001100;
   702  001A56  0E0C               	movlw	12
   703  001A58  6EBA               	movwf	4026,c	;volatile
   704                           
   705                           ;p10_pushpwm.c: 106: T2CON = 0b00000111;
   706  001A5A  0E07               	movlw	7
   707  001A5C  6ECA               	movwf	4042,c	;volatile
   708                           
   709                           ;p10_pushpwm.c: 112: TRISBbits.RB3 = 0;
   710  001A5E  9693               	bcf	3987,3,c	;volatile
   711                           
   712                           ;p10_pushpwm.c: 113: LATBbits.LB3 = 0;
   713  001A60  968A               	bcf	3978,3,c	;volatile
   714                           
   715                           ;p10_pushpwm.c: 115: TRISBbits.RB1 = 0;
   716  001A62  9293               	bcf	3987,1,c	;volatile
   717                           
   718                           ;p10_pushpwm.c: 116: LATBbits.LB1 = 0;
   719  001A64  928A               	bcf	3978,1,c	;volatile
   720                           
   721                           ;p10_pushpwm.c: 118: TRISBbits.RB0 = 1;
   722  001A66  8093               	bsf	3987,0,c	;volatile
   723                           
   724                           ;p10_pushpwm.c: 119: LATBbits.LB0 = 0;
   725  001A68  908A               	bcf	3978,0,c	;volatile
   726                           
   727                           ;p10_pushpwm.c: 124: ADCON1 |= 0x0F;
   728  001A6A  0E0F               	movlw	15
   729  001A6C  12C1               	iorwf	4033,f,c	;volatile
   730                           
   731                           ;p10_pushpwm.c: 130: INT0IE = 1;
   732  001A6E  88F2               	bsf	intcon,4,c	;volatile
   733                           
   734                           ;p10_pushpwm.c: 132: INT0IF = 0;
   735  001A70  92F2               	bcf	intcon,1,c	;volatile
   736                           
   737                           ;p10_pushpwm.c: 134: GIE = 1;
   738  001A72  8EF2               	bsf	intcon,7,c	;volatile
   739                           
   740                           ;p10_pushpwm.c: 136: PEIE = 1;
   741  001A74  8CF2               	bsf	intcon,6,c	;volatile
   742                           
   743                           ;p10_pushpwm.c: 138: INTCON2bits.INTEDG0 = 1;
   744  001A76  8CF1               	bsf	intcon2,6,c	;volatile
   745  001A78  0012               	return		;funcret
   746  001A7A                     __end_of_ConfigInit:
   747                           	opt stack 0
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           intcon	equ	0xFF2
   751                           intcon2	equ	0xFF1
   752                           postinc0	equ	0xFEE
   753                           wreg	equ	0xFE8
   754                           
   755 ;; *************** function _high_isr *****************
   756 ;; Defined at:
   757 ;;		line 162 in file "p10_pushpwm.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   771 ;;      Params:         0       0       0       0       0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0       0       0       0       0
   773 ;;      Temps:          0      14       0       0       0       0       0       0       0
   774 ;;      Totals:         0      14       0       0       0       0       0       0       0
   775 ;;Total ram usage:       14 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    7
   778 ;; This function calls:
   779 ;;		_boton
   780 ;; This function is called by:
   781 ;;		Interrupt level 2
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	intcode
   786  000008                     __pintcode:
   787                           	opt stack 0
   788  000008                     _high_isr:
   789                           	opt stack 22
   790                           
   791                           ;incstack = 0
   792  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   793  00000A  ED0C  F00C         	call	int_func,f	;refresh shadow registers
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           intcon	equ	0xFF2
   797                           intcon2	equ	0xFF1
   798                           postinc0	equ	0xFEE
   799                           wreg	equ	0xFE8
   800                           
   801                           	psect	intcode_body
   802  001818                     __pintcode_body:
   803                           	opt stack 22
   804  001818                     int_func:
   805                           	opt stack 22
   806  001818  0006               	pop		; remove dummy address from shadow register refresh
   807  00181A  CFFA F073          	movff	pclath,??_high_isr
   808  00181E  CFFB F074          	movff	pclatu,??_high_isr+1
   809  001822  CFE9 F075          	movff	fsr0l,??_high_isr+2
   810  001826  CFEA F076          	movff	fsr0h,??_high_isr+3
   811  00182A  CFE1 F077          	movff	fsr1l,??_high_isr+4
   812  00182E  CFE2 F078          	movff	fsr1h,??_high_isr+5
   813  001832  CFD9 F079          	movff	fsr2l,??_high_isr+6
   814  001836  CFDA F07A          	movff	fsr2h,??_high_isr+7
   815  00183A  CFF3 F07B          	movff	prodl,??_high_isr+8
   816  00183E  CFF4 F07C          	movff	prodh,??_high_isr+9
   817  001842  CFF6 F07D          	movff	tblptrl,??_high_isr+10
   818  001846  CFF7 F07E          	movff	tblptrh,??_high_isr+11
   819  00184A  CFF8 F07F          	movff	tblptru,??_high_isr+12
   820  00184E  CFF5 F080          	movff	tablat,??_high_isr+13
   821                           
   822                           ;p10_pushpwm.c: 163: if(INT0IF) boton();
   823  001852  B2F2               	btfsc	intcon,1,c	;volatile
   824  001854  EC86  F00C         	call	_boton	;wreg free
   825  001858  C080  FFF5         	movff	??_high_isr+13,tablat
   826  00185C  C07F  FFF8         	movff	??_high_isr+12,tblptru
   827  001860  C07E  FFF7         	movff	??_high_isr+11,tblptrh
   828  001864  C07D  FFF6         	movff	??_high_isr+10,tblptrl
   829  001868  C07C  FFF4         	movff	??_high_isr+9,prodh
   830  00186C  C07B  FFF3         	movff	??_high_isr+8,prodl
   831  001870  C07A  FFDA         	movff	??_high_isr+7,fsr2h
   832  001874  C079  FFD9         	movff	??_high_isr+6,fsr2l
   833  001878  C078  FFE2         	movff	??_high_isr+5,fsr1h
   834  00187C  C077  FFE1         	movff	??_high_isr+4,fsr1l
   835  001880  C076  FFEA         	movff	??_high_isr+3,fsr0h
   836  001884  C075  FFE9         	movff	??_high_isr+2,fsr0l
   837  001888  C074  FFFB         	movff	??_high_isr+1,pclatu
   838  00188C  C073  FFFA         	movff	??_high_isr,pclath
   839  001890  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   840  001892  0011               	retfie		f
   841  001894                     __end_of_high_isr:
   842                           	opt stack 0
   843                           pclatu	equ	0xFFB
   844                           pclath	equ	0xFFA
   845                           tblptru	equ	0xFF8
   846                           tblptrh	equ	0xFF7
   847                           tblptrl	equ	0xFF6
   848                           tablat	equ	0xFF5
   849                           prodh	equ	0xFF4
   850                           prodl	equ	0xFF3
   851                           intcon	equ	0xFF2
   852                           intcon2	equ	0xFF1
   853                           postinc0	equ	0xFEE
   854                           fsr0h	equ	0xFEA
   855                           fsr0l	equ	0xFE9
   856                           wreg	equ	0xFE8
   857                           fsr1h	equ	0xFE2
   858                           fsr1l	equ	0xFE1
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           
   862 ;; *************** function _boton *****************
   863 ;; Defined at:
   864 ;;		line 142 in file "p10_pushpwm.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0
   880 ;;      Temps:          2       0       0       0       0       0       0       0       0
   881 ;;      Totals:         2       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        2 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    6
   885 ;; This function calls:
   886 ;;		_dectobin
   887 ;; This function is called by:
   888 ;;		_high_isr
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893  00190C                     __ptext3:
   894                           	opt stack 0
   895  00190C                     _boton:
   896                           	opt stack 22
   897                           
   898                           ;p10_pushpwm.c: 146: if(incremento <= 1000){
   899                           
   900                           ;incstack = 0
   901  00190C  0100               	movlb	0	; () banked
   902  00190E  BF9C               	btfsc	(_incremento+1)& (0+255),7,b
   903  001910  D008               	goto	i2l2046
   904  001912  0EE9               	movlw	233
   905  001914  0100               	movlb	0	; () banked
   906  001916  5D9B               	subwf	_incremento& (0+255),w,b
   907  001918  0E03               	movlw	3
   908  00191A  0100               	movlb	0	; () banked
   909  00191C  599C               	subwfb	(_incremento+1)& (0+255),w,b
   910  00191E  B0D8               	btfsc	status,0,c
   911  001920  D00E               	goto	i2l2052
   912  001922                     i2l2046:
   913                           
   914                           ; BSR set to: 0
   915                           ;p10_pushpwm.c: 147: incremento +=10;
   916  001922  0E0A               	movlw	10
   917  001924  0100               	movlb	0	; () banked
   918  001926  279B               	addwf	_incremento& (0+255),f,b
   919  001928  0E00               	movlw	0
   920  00192A  239C               	addwfc	(_incremento+1)& (0+255),f,b
   921                           
   922                           ; BSR set to: 0
   923                           ;p10_pushpwm.c: 148: dectobin(incremento);
   924  00192C  C09B  F058         	movff	_incremento,dectobin@numero
   925  001930  C09C  F059         	movff	_incremento+1,dectobin@numero+1
   926  001934  EC1E  F004         	call	_dectobin	;wreg free
   927                           
   928                           ;p10_pushpwm.c: 150: CCPR2L = incremento;
   929  001938  C09B  FFBB         	movff	_incremento,4027	;volatile
   930                           
   931                           ;p10_pushpwm.c: 152: }
   932  00193C  D005               	goto	i2l2054
   933  00193E                     i2l2052:
   934                           
   935                           ;p10_pushpwm.c: 153: else{
   936                           ;p10_pushpwm.c: 154: incremento = 0;
   937  00193E  0E00               	movlw	0
   938  001940  0100               	movlb	0	; () banked
   939  001942  6F9C               	movwf	(_incremento+1)& (0+255),b
   940  001944  0E00               	movlw	0
   941  001946  6F9B               	movwf	_incremento& (0+255),b
   942  001948                     i2l2054:
   943                           
   944                           ;p10_pushpwm.c: 155: }
   945                           ;p10_pushpwm.c: 157: LATBbits.LB1 =! LATBbits.LB1;
   946  001948  B28A               	btfsc	3978,1,c	;volatile
   947  00194A  D003               	goto	i2u194_40
   948  00194C  6A5C               	clrf	??_boton& (0+255),c
   949  00194E  2A5C               	incf	??_boton& (0+255),f,c
   950  001950  D001               	goto	i2u195_48
   951  001952                     i2u194_40:
   952  001952  6A5C               	clrf	??_boton& (0+255),c
   953  001954                     i2u195_48:
   954  001954  465C               	rlncf	??_boton,f,c
   955  001956  508A               	movf	3978,w,c	;volatile
   956  001958  185C               	xorwf	??_boton,w,c
   957  00195A  0BFD               	andlw	-3
   958  00195C  185C               	xorwf	??_boton,w,c
   959  00195E  6E8A               	movwf	3978,c	;volatile
   960                           
   961                           ;p10_pushpwm.c: 158: _delay((unsigned long)((250)*(48000000/4000.0)));
   962  001960  0E10               	movlw	16
   963  001962  6E5D               	movwf	(??_boton+1)& (0+255),c
   964  001964  0E39               	movlw	57
   965  001966  6E5C               	movwf	??_boton& (0+255),c
   966  001968  0E0E               	movlw	14
   967  00196A                     i2u197_47:
   968  00196A  2EE8               	decfsz	wreg,f,c
   969  00196C  D7FE               	bra	i2u197_47
   970  00196E  2E5C               	decfsz	??_boton& (0+255),f,c
   971  001970  D7FC               	bra	i2u197_47
   972  001972  2E5D               	decfsz	(??_boton+1)& (0+255),f,c
   973  001974  D7FA               	bra	i2u197_47
   974                           
   975                           ;p10_pushpwm.c: 159: INT0IF = 0;
   976  001976  92F2               	bcf	intcon,1,c	;volatile
   977  001978  0012               	return		;funcret
   978  00197A                     __end_of_boton:
   979                           	opt stack 0
   980                           pclatu	equ	0xFFB
   981                           pclath	equ	0xFFA
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           prodh	equ	0xFF4
   987                           prodl	equ	0xFF3
   988                           intcon	equ	0xFF2
   989                           intcon2	equ	0xFF1
   990                           postinc0	equ	0xFEE
   991                           fsr0h	equ	0xFEA
   992                           fsr0l	equ	0xFE9
   993                           wreg	equ	0xFE8
   994                           fsr1h	equ	0xFE2
   995                           fsr1l	equ	0xFE1
   996                           fsr2h	equ	0xFDA
   997                           fsr2l	equ	0xFD9
   998                           status	equ	0xFD8
   999                           
  1000 ;; *************** function _dectobin *****************
  1001 ;; Defined at:
  1002 ;;		line 174 in file "p10_pushpwm.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  numero          2   87[COMRAM] int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  i               2   17[BANK0 ] int 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1016 ;;      Params:         2       0       0       0       0       0       0       0       0
  1017 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1018 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1019 ;;      Totals:         4       8       0       0       0       0       0       0       0
  1020 ;;Total ram usage:       12 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    5
  1023 ;; This function calls:
  1024 ;;		___awdiv
  1025 ;;		___awtoft
  1026 ;;		___ftadd
  1027 ;;		___ftmul
  1028 ;;		___fttol
  1029 ;;		_pow
  1030 ;; This function is called by:
  1031 ;;		_boton
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text4
  1036  00083C                     __ptext4:
  1037                           	opt stack 0
  1038  00083C                     _dectobin:
  1039                           	opt stack 22
  1040                           
  1041                           ;p10_pushpwm.c: 179: for(int i = 0; i <= 9; i++){
  1042                           
  1043                           ;incstack = 0
  1044  00083C  0E00               	movlw	0
  1045  00083E  0100               	movlb	0	; () banked
  1046  000840  6F72               	movwf	(dectobin@i+1)& (0+255),b
  1047  000842  0E00               	movlw	0
  1048  000844  6F71               	movwf	dectobin@i& (0+255),b
  1049                           
  1050                           ; BSR set to: 0
  1051  000846  0100               	movlb	0	; () banked
  1052  000848  BF72               	btfsc	(dectobin@i+1)& (0+255),7,b
  1053  00084A  D00A               	goto	i2l1996
  1054  00084C  0100               	movlb	0	; () banked
  1055  00084E  5172               	movf	(dectobin@i+1)& (0+255),w,b
  1056  000850  E106               	bnz	i2u190_40
  1057  000852  0E0A               	movlw	10
  1058  000854  0100               	movlb	0	; () banked
  1059  000856  5D71               	subwf	dectobin@i& (0+255),w,b
  1060  000858  B0D8               	btfsc	status,0,c
  1061  00085A  0012               	return	
  1062  00085C  D001               	goto	i2l1996
  1063  00085E                     i2u190_40:
  1064                           
  1065                           ; BSR set to: 0
  1066  00085E  0012               	return	
  1067  000860                     i2l1996:
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;p10_pushpwm.c: 180: modulo[i] = numero % 2;
  1071  000860  0E01               	movlw	1
  1072  000862  1458               	andwf	dectobin@numero,w,c
  1073  000864  6E5A               	movwf	??_dectobin& (0+255),c
  1074  000866  0E00               	movlw	0
  1075  000868  1459               	andwf	dectobin@numero+1,w,c
  1076  00086A  6E5B               	movwf	(??_dectobin+1)& (0+255),c
  1077  00086C  90D8               	bcf	status,0,c
  1078  00086E  0100               	movlb	0	; () banked
  1079  000870  3571               	rlcf	dectobin@i& (0+255),w,b
  1080  000872  6ED9               	movwf	fsr2l,c
  1081  000874  0100               	movlb	0	; () banked
  1082  000876  3572               	rlcf	(dectobin@i+1)& (0+255),w,b
  1083  000878  6EDA               	movwf	fsr2h,c
  1084  00087A  0E81               	movlw	low _modulo
  1085  00087C  26D9               	addwf	fsr2l,f,c
  1086  00087E  0E00               	movlw	high _modulo
  1087  000880  22DA               	addwfc	fsr2h,f,c
  1088  000882  C05A  FFDE         	movff	??_dectobin,postinc2
  1089  000886  C05B  FFDD         	movff	??_dectobin+1,postdec2
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;p10_pushpwm.c: 181: numero = numero / 2;
  1093  00088A  C058  F001         	movff	dectobin@numero,___awdiv@dividend
  1094  00088E  C059  F002         	movff	dectobin@numero+1,___awdiv@dividend+1
  1095  000892  0E00               	movlw	0
  1096  000894  6E04               	movwf	___awdiv@divisor+1,c
  1097  000896  0E02               	movlw	2
  1098  000898  6E03               	movwf	___awdiv@divisor,c
  1099  00089A  ECCA  F00B         	call	___awdiv	;wreg free
  1100  00089E  C001  F058         	movff	?___awdiv,dectobin@numero
  1101  0008A2  C002  F059         	movff	?___awdiv+1,dectobin@numero+1
  1102                           
  1103                           ;p10_pushpwm.c: 182: if(i <= 2){
  1104  0008A6  0100               	movlb	0	; () banked
  1105  0008A8  BF72               	btfsc	(dectobin@i+1)& (0+255),7,b
  1106  0008AA  D008               	goto	i2l2002
  1107  0008AC  0100               	movlb	0	; () banked
  1108  0008AE  5172               	movf	(dectobin@i+1)& (0+255),w,b
  1109  0008B0  E165               	bnz	i2l2008
  1110  0008B2  0E03               	movlw	3
  1111  0008B4  0100               	movlb	0	; () banked
  1112  0008B6  5D71               	subwf	dectobin@i& (0+255),w,b
  1113  0008B8  B0D8               	btfsc	status,0,c
  1114  0008BA  D060               	goto	i2l2008
  1115  0008BC                     i2l2002:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;p10_pushpwm.c: 183: lsb += pow(2,i) * modulo[i];
  1119  0008BC  C071  F009         	movff	dectobin@i,___awtoft@c
  1120  0008C0  C072  F00A         	movff	dectobin@i+1,___awtoft@c+1
  1121  0008C4  EC0B  F00D         	call	___awtoft	;wreg free
  1122  0008C8  C009  F06B         	movff	?___awtoft,_dectobin$844
  1123  0008CC  C00A  F06C         	movff	?___awtoft+1,_dectobin$844+1
  1124  0008D0  C00B  F06D         	movff	?___awtoft+2,_dectobin$844+2
  1125                           
  1126                           ;p10_pushpwm.c: 183: lsb += pow(2,i) * modulo[i];
  1127  0008D4  C06B  F055         	movff	_dectobin$844,pow@y
  1128  0008D8  C06C  F056         	movff	_dectobin$844+1,pow@y+1
  1129  0008DC  C06D  F057         	movff	_dectobin$844+2,pow@y+2
  1130  0008E0  0E00               	movlw	0
  1131  0008E2  6E52               	movwf	pow@x,c
  1132  0008E4  0E00               	movlw	0
  1133  0008E6  6E53               	movwf	pow@x+1,c
  1134  0008E8  0E40               	movlw	64
  1135  0008EA  6E54               	movwf	pow@x+2,c
  1136  0008EC  ECF2  F006         	call	_pow	;wreg free
  1137  0008F0  C052  F06E         	movff	?_pow,_dectobin$845
  1138  0008F4  C053  F06F         	movff	?_pow+1,_dectobin$845+1
  1139  0008F8  C054  F070         	movff	?_pow+2,_dectobin$845+2
  1140                           
  1141                           ;p10_pushpwm.c: 183: lsb += pow(2,i) * modulo[i];
  1142  0008FC  90D8               	bcf	status,0,c
  1143  0008FE  0100               	movlb	0	; () banked
  1144  000900  3571               	rlcf	dectobin@i& (0+255),w,b
  1145  000902  6ED9               	movwf	fsr2l,c
  1146  000904  0100               	movlb	0	; () banked
  1147  000906  3572               	rlcf	(dectobin@i+1)& (0+255),w,b
  1148  000908  6EDA               	movwf	fsr2h,c
  1149  00090A  0E81               	movlw	low _modulo
  1150  00090C  26D9               	addwf	fsr2l,f,c
  1151  00090E  0E00               	movlw	high _modulo
  1152  000910  22DA               	addwfc	fsr2h,f,c
  1153  000912  CFDE F009          	movff	postinc2,___awtoft@c
  1154  000916  CFDD F00A          	movff	postdec2,___awtoft@c+1
  1155  00091A  EC0B  F00D         	call	___awtoft	;wreg free
  1156  00091E  C009  F010         	movff	?___awtoft,___ftmul@f2
  1157  000922  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  1158  000926  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  1159  00092A  C06E  F00D         	movff	_dectobin$845,___ftmul@f1
  1160  00092E  C06F  F00E         	movff	_dectobin$845+1,___ftmul@f1+1
  1161  000932  C070  F00F         	movff	_dectobin$845+2,___ftmul@f1+2
  1162  000936  ECBB  F008         	call	___ftmul	;wreg free
  1163  00093A  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  1164  00093E  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  1165  000942  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  1166  000946  C097  F009         	movff	_lsb,___awtoft@c
  1167  00094A  C098  F00A         	movff	_lsb+1,___awtoft@c+1
  1168  00094E  EC0B  F00D         	call	___awtoft	;wreg free
  1169  000952  C009  F01C         	movff	?___awtoft,___ftadd@f1
  1170  000956  C00A  F01D         	movff	?___awtoft+1,___ftadd@f1+1
  1171  00095A  C00B  F01E         	movff	?___awtoft+2,___ftadd@f1+2
  1172  00095E  EC1C  F006         	call	___ftadd	;wreg free
  1173  000962  C01C  F028         	movff	?___ftadd,___fttol@f1
  1174  000966  C01D  F029         	movff	?___ftadd+1,___fttol@f1+1
  1175  00096A  C01E  F02A         	movff	?___ftadd+2,___fttol@f1+2
  1176  00096E  EC41  F008         	call	___fttol	;wreg free
  1177  000972  C028  F097         	movff	?___fttol,_lsb
  1178  000976  C029  F098         	movff	?___fttol+1,_lsb+1
  1179                           
  1180                           ;p10_pushpwm.c: 184: }
  1181  00097A  D05F               	goto	i2l2014
  1182  00097C                     i2l2008:
  1183                           
  1184                           ;p10_pushpwm.c: 185: else{
  1185                           ;p10_pushpwm.c: 186: msb += pow(2,i) * modulo[i];
  1186  00097C  C071  F009         	movff	dectobin@i,___awtoft@c
  1187  000980  C072  F00A         	movff	dectobin@i+1,___awtoft@c+1
  1188  000984  EC0B  F00D         	call	___awtoft	;wreg free
  1189  000988  C009  F06B         	movff	?___awtoft,_dectobin$844
  1190  00098C  C00A  F06C         	movff	?___awtoft+1,_dectobin$844+1
  1191  000990  C00B  F06D         	movff	?___awtoft+2,_dectobin$844+2
  1192                           
  1193                           ;p10_pushpwm.c: 185: else{
  1194                           ;p10_pushpwm.c: 186: msb += pow(2,i) * modulo[i];
  1195  000994  C06B  F055         	movff	_dectobin$844,pow@y
  1196  000998  C06C  F056         	movff	_dectobin$844+1,pow@y+1
  1197  00099C  C06D  F057         	movff	_dectobin$844+2,pow@y+2
  1198  0009A0  0E00               	movlw	0
  1199  0009A2  6E52               	movwf	pow@x,c
  1200  0009A4  0E00               	movlw	0
  1201  0009A6  6E53               	movwf	pow@x+1,c
  1202  0009A8  0E40               	movlw	64
  1203  0009AA  6E54               	movwf	pow@x+2,c
  1204  0009AC  ECF2  F006         	call	_pow	;wreg free
  1205  0009B0  C052  F06E         	movff	?_pow,_dectobin$845
  1206  0009B4  C053  F06F         	movff	?_pow+1,_dectobin$845+1
  1207  0009B8  C054  F070         	movff	?_pow+2,_dectobin$845+2
  1208                           
  1209                           ;p10_pushpwm.c: 185: else{
  1210                           ;p10_pushpwm.c: 186: msb += pow(2,i) * modulo[i];
  1211  0009BC  90D8               	bcf	status,0,c
  1212  0009BE  0100               	movlb	0	; () banked
  1213  0009C0  3571               	rlcf	dectobin@i& (0+255),w,b
  1214  0009C2  6ED9               	movwf	fsr2l,c
  1215  0009C4  0100               	movlb	0	; () banked
  1216  0009C6  3572               	rlcf	(dectobin@i+1)& (0+255),w,b
  1217  0009C8  6EDA               	movwf	fsr2h,c
  1218  0009CA  0E81               	movlw	low _modulo
  1219  0009CC  26D9               	addwf	fsr2l,f,c
  1220  0009CE  0E00               	movlw	high _modulo
  1221  0009D0  22DA               	addwfc	fsr2h,f,c
  1222  0009D2  CFDE F009          	movff	postinc2,___awtoft@c
  1223  0009D6  CFDD F00A          	movff	postdec2,___awtoft@c+1
  1224  0009DA  EC0B  F00D         	call	___awtoft	;wreg free
  1225  0009DE  C009  F010         	movff	?___awtoft,___ftmul@f2
  1226  0009E2  C00A  F011         	movff	?___awtoft+1,___ftmul@f2+1
  1227  0009E6  C00B  F012         	movff	?___awtoft+2,___ftmul@f2+2
  1228  0009EA  C06E  F00D         	movff	_dectobin$845,___ftmul@f1
  1229  0009EE  C06F  F00E         	movff	_dectobin$845+1,___ftmul@f1+1
  1230  0009F2  C070  F00F         	movff	_dectobin$845+2,___ftmul@f1+2
  1231  0009F6  ECBB  F008         	call	___ftmul	;wreg free
  1232  0009FA  C00D  F01F         	movff	?___ftmul,___ftadd@f2
  1233  0009FE  C00E  F020         	movff	?___ftmul+1,___ftadd@f2+1
  1234  000A02  C00F  F021         	movff	?___ftmul+2,___ftadd@f2+2
  1235  000A06  C099  F009         	movff	_msb,___awtoft@c
  1236  000A0A  C09A  F00A         	movff	_msb+1,___awtoft@c+1
  1237  000A0E  EC0B  F00D         	call	___awtoft	;wreg free
  1238  000A12  C009  F01C         	movff	?___awtoft,___ftadd@f1
  1239  000A16  C00A  F01D         	movff	?___awtoft+1,___ftadd@f1+1
  1240  000A1A  C00B  F01E         	movff	?___awtoft+2,___ftadd@f1+2
  1241  000A1E  EC1C  F006         	call	___ftadd	;wreg free
  1242  000A22  C01C  F028         	movff	?___ftadd,___fttol@f1
  1243  000A26  C01D  F029         	movff	?___ftadd+1,___fttol@f1+1
  1244  000A2A  C01E  F02A         	movff	?___ftadd+2,___fttol@f1+2
  1245  000A2E  EC41  F008         	call	___fttol	;wreg free
  1246  000A32  C028  F099         	movff	?___fttol,_msb
  1247  000A36  C029  F09A         	movff	?___fttol+1,_msb+1
  1248  000A3A                     i2l2014:
  1249  000A3A  0100               	movlb	0	; () banked
  1250  000A3C  4B71               	infsnz	dectobin@i& (0+255),f,b
  1251  000A3E  2B72               	incf	(dectobin@i+1)& (0+255),f,b
  1252                           
  1253                           ; BSR set to: 0
  1254  000A40  0100               	movlb	0	; () banked
  1255  000A42  BF72               	btfsc	(dectobin@i+1)& (0+255),7,b
  1256  000A44  D70D               	goto	i2l1996
  1257  000A46  0100               	movlb	0	; () banked
  1258  000A48  5172               	movf	(dectobin@i+1)& (0+255),w,b
  1259  000A4A  E101               	bnz	i2l67
  1260  000A4C  D702               	goto	L1
  1261  000A4E                     i2l67:
  1262                           
  1263                           ; BSR set to: 0
  1264  000A4E  0012               	return		;funcret
  1265  000A50                     __end_of_dectobin:
  1266                           	opt stack 0
  1267                           pclatu	equ	0xFFB
  1268                           pclath	equ	0xFFA
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           prodh	equ	0xFF4
  1274                           prodl	equ	0xFF3
  1275                           intcon	equ	0xFF2
  1276                           intcon2	equ	0xFF1
  1277                           postinc0	equ	0xFEE
  1278                           fsr0h	equ	0xFEA
  1279                           fsr0l	equ	0xFE9
  1280                           wreg	equ	0xFE8
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           postinc2	equ	0xFDE
  1284                           postdec2	equ	0xFDD
  1285                           fsr2h	equ	0xFDA
  1286                           fsr2l	equ	0xFD9
  1287                           status	equ	0xFD8
  1288                           
  1289 ;; *************** function _pow *****************
  1290 ;; Defined at:
  1291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\pow.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;  x               3   81[COMRAM] void 
  1294 ;;  y               3   84[COMRAM] void 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  yi              4    7[BANK0 ] unsigned long 
  1297 ;;  sign            1    6[BANK0 ] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  3   81[COMRAM] unsigned char 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1307 ;;      Params:         6       0       0       0       0       0       0       0       0
  1308 ;;      Locals:         0      11       0       0       0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1310 ;;      Totals:         6      11       0       0       0       0       0       0       0
  1311 ;;Total ram usage:       17 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    4
  1314 ;; This function calls:
  1315 ;;		___ftge
  1316 ;;		___ftmul
  1317 ;;		___ftneg
  1318 ;;		___fttol
  1319 ;;		___lltoft
  1320 ;;		_exp
  1321 ;;		_log
  1322 ;; This function is called by:
  1323 ;;		_dectobin
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text5
  1328  000DE4                     __ptext5:
  1329                           	opt stack 0
  1330  000DE4                     _pow:
  1331                           	opt stack 22
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;incstack = 0
  1335  000DE4  0E00               	movlw	0
  1336  000DE6  0100               	movlb	0	; () banked
  1337  000DE8  6F66               	movwf	pow@sign& (0+255),b
  1338                           
  1339                           ; BSR set to: 0
  1340  000DEA  5052               	movf	pow@x,w,c
  1341  000DEC  1053               	iorwf	pow@x+1,w,c
  1342  000DEE  1054               	iorwf	pow@x+2,w,c
  1343  000DF0  A4D8               	btfss	status,2,c
  1344  000DF2  D01C               	goto	i2l1916
  1345                           
  1346                           ; BSR set to: 0
  1347  000DF4  0E00               	movlw	0
  1348  000DF6  6E01               	movwf	___ftge@ff1,c
  1349  000DF8  0E00               	movlw	0
  1350  000DFA  6E02               	movwf	___ftge@ff1+1,c
  1351  000DFC  0E00               	movlw	0
  1352  000DFE  6E03               	movwf	___ftge@ff1+2,c
  1353  000E00  C055  F004         	movff	pow@y,___ftge@ff2
  1354  000E04  C056  F005         	movff	pow@y+1,___ftge@ff2+1
  1355  000E08  C057  F006         	movff	pow@y+2,___ftge@ff2+2
  1356  000E0C  EC82  F00B         	call	___ftge	;wreg free
  1357  000E10  A0D8               	btfss	status,0,c
  1358  000E12  D005               	goto	i2l502
  1359  000E14  0E00               	movlw	0
  1360  000E16  0100               	movlb	0	; () banked
  1361  000E18  6F96               	movwf	(_errno+1)& (0+255),b
  1362  000E1A  0E21               	movlw	33
  1363  000E1C  6F95               	movwf	_errno& (0+255),b
  1364  000E1E                     i2l502:
  1365  000E1E  0E00               	movlw	0
  1366  000E20  6E52               	movwf	?_pow,c
  1367  000E22  0E00               	movlw	0
  1368  000E24  6E53               	movwf	?_pow+1,c
  1369  000E26  0E00               	movlw	0
  1370  000E28  6E54               	movwf	?_pow+2,c
  1371  000E2A  0012               	return	
  1372  000E2C                     i2l1916:
  1373  000E2C  5055               	movf	pow@y,w,c
  1374  000E2E  1056               	iorwf	pow@y+1,w,c
  1375  000E30  1057               	iorwf	pow@y+2,w,c
  1376  000E32  A4D8               	btfss	status,2,c
  1377  000E34  D007               	goto	i2l1922
  1378  000E36  0E00               	movlw	0
  1379  000E38  6E52               	movwf	?_pow,c
  1380  000E3A  0E80               	movlw	128
  1381  000E3C  6E53               	movwf	?_pow+1,c
  1382  000E3E  0E3F               	movlw	63
  1383  000E40  6E54               	movwf	?_pow+2,c
  1384  000E42  0012               	return	
  1385  000E44                     i2l1922:
  1386  000E44  AE54               	btfss	pow@x+2,7,c
  1387  000E46  D043               	goto	i2l1934
  1388  000E48  C055  F028         	movff	pow@y,___fttol@f1
  1389  000E4C  C056  F029         	movff	pow@y+1,___fttol@f1+1
  1390  000E50  C057  F02A         	movff	pow@y+2,___fttol@f1+2
  1391  000E54  EC41  F008         	call	___fttol	;wreg free
  1392  000E58  C028  F067         	movff	?___fttol,pow@yi
  1393  000E5C  C029  F068         	movff	?___fttol+1,pow@yi+1
  1394  000E60  C02A  F069         	movff	?___fttol+2,pow@yi+2
  1395  000E64  C02B  F06A         	movff	?___fttol+3,pow@yi+3
  1396  000E68  C067  F009         	movff	pow@yi,___lltoft@c
  1397  000E6C  C068  F00A         	movff	pow@yi+1,___lltoft@c+1
  1398  000E70  C069  F00B         	movff	pow@yi+2,___lltoft@c+2
  1399  000E74  C06A  F00C         	movff	pow@yi+3,___lltoft@c+3
  1400  000E78  ECBD  F00C         	call	___lltoft	;wreg free
  1401  000E7C  5055               	movf	pow@y,w,c
  1402  000E7E  1809               	xorwf	?___lltoft,w,c
  1403  000E80  E107               	bnz	i2u182_40
  1404  000E82  5056               	movf	pow@y+1,w,c
  1405  000E84  180A               	xorwf	?___lltoft+1,w,c
  1406  000E86  E104               	bnz	i2u182_40
  1407  000E88  5057               	movf	pow@y+2,w,c
  1408  000E8A  180B               	xorwf	?___lltoft+2,w,c
  1409  000E8C  B4D8               	btfsc	status,2,c
  1410  000E8E  D00C               	goto	i2l1930
  1411  000E90                     i2u182_40:
  1412  000E90  0E00               	movlw	0
  1413  000E92  0100               	movlb	0	; () banked
  1414  000E94  6F96               	movwf	(_errno+1)& (0+255),b
  1415  000E96  0E21               	movlw	33
  1416  000E98  6F95               	movwf	_errno& (0+255),b
  1417  000E9A  0E00               	movlw	0
  1418  000E9C  6E52               	movwf	?_pow,c
  1419  000E9E  0E00               	movlw	0
  1420  000EA0  6E53               	movwf	?_pow+1,c
  1421  000EA2  0E00               	movlw	0
  1422  000EA4  6E54               	movwf	?_pow+2,c
  1423                           
  1424                           ; BSR set to: 0
  1425  000EA6  0012               	return	
  1426  000EA8                     i2l1930:
  1427  000EA8  0100               	movlb	0	; () banked
  1428  000EAA  5167               	movf	pow@yi& (0+255),w,b
  1429  000EAC  0B01               	andlw	1
  1430  000EAE  0100               	movlb	0	; () banked
  1431  000EB0  6F66               	movwf	pow@sign& (0+255),b
  1432                           
  1433                           ; BSR set to: 0
  1434  000EB2  C052  F001         	movff	pow@x,___ftneg@f1
  1435  000EB6  C053  F002         	movff	pow@x+1,___ftneg@f1+1
  1436  000EBA  C054  F003         	movff	pow@x+2,___ftneg@f1+2
  1437  000EBE  EC50  F00D         	call	___ftneg	;wreg free
  1438  000EC2  C001  F052         	movff	?___ftneg,pow@x
  1439  000EC6  C002  F053         	movff	?___ftneg+1,pow@x+1
  1440  000ECA  C003  F054         	movff	?___ftneg+2,pow@x+2
  1441  000ECE                     i2l1934:
  1442  000ECE  C052  F034         	movff	pow@x,log@x
  1443  000ED2  C053  F035         	movff	pow@x+1,log@x+1
  1444  000ED6  C054  F036         	movff	pow@x+2,log@x+2
  1445  000EDA  ECB2  F007         	call	_log	;wreg free
  1446  000EDE  C034  F060         	movff	?_log,_pow$846
  1447  000EE2  C035  F061         	movff	?_log+1,_pow$846+1
  1448  000EE6  C036  F062         	movff	?_log+2,_pow$846+2
  1449  000EEA  C060  F00D         	movff	_pow$846,___ftmul@f1
  1450  000EEE  C061  F00E         	movff	_pow$846+1,___ftmul@f1+1
  1451  000EF2  C062  F00F         	movff	_pow$846+2,___ftmul@f1+2
  1452  000EF6  C055  F010         	movff	pow@y,___ftmul@f2
  1453  000EFA  C056  F011         	movff	pow@y+1,___ftmul@f2+1
  1454  000EFE  C057  F012         	movff	pow@y+2,___ftmul@f2+2
  1455  000F02  ECBB  F008         	call	___ftmul	;wreg free
  1456  000F06  C00D  F063         	movff	?___ftmul,_pow$847
  1457  000F0A  C00E  F064         	movff	?___ftmul+1,_pow$847+1
  1458  000F0E  C00F  F065         	movff	?___ftmul+2,_pow$847+2
  1459  000F12  C063  F049         	movff	_pow$847,exp@x
  1460  000F16  C064  F04A         	movff	_pow$847+1,exp@x+1
  1461  000F1A  C065  F04B         	movff	_pow$847+2,exp@x+2
  1462  000F1E  EC28  F005         	call	_exp	;wreg free
  1463  000F22  C049  F052         	movff	?_exp,pow@x
  1464  000F26  C04A  F053         	movff	?_exp+1,pow@x+1
  1465  000F2A  C04B  F054         	movff	?_exp+2,pow@x+2
  1466  000F2E  0100               	movlb	0	; () banked
  1467  000F30  5166               	movf	pow@sign& (0+255),w,b
  1468  000F32  0100               	movlb	0	; () banked
  1469  000F34  B4D8               	btfsc	status,2,c
  1470  000F36  D00F               	goto	i2l507
  1471                           
  1472                           ; BSR set to: 0
  1473  000F38  C052  F001         	movff	pow@x,___ftneg@f1
  1474  000F3C  C053  F002         	movff	pow@x+1,___ftneg@f1+1
  1475  000F40  C054  F003         	movff	pow@x+2,___ftneg@f1+2
  1476  000F44  EC50  F00D         	call	___ftneg	;wreg free
  1477  000F48  C001  F052         	movff	?___ftneg,?_pow
  1478  000F4C  C002  F053         	movff	?___ftneg+1,?_pow+1
  1479  000F50  C003  F054         	movff	?___ftneg+2,?_pow+2
  1480  000F54  0012               	return	
  1481  000F56                     i2l507:
  1482                           
  1483                           ; BSR set to: 0
  1484  000F56  C052  F052         	movff	pow@x,?_pow
  1485  000F5A  C053  F053         	movff	pow@x+1,?_pow+1
  1486  000F5E  C054  F054         	movff	pow@x+2,?_pow+2
  1487  000F62  0012               	return		;funcret
  1488  000F64                     __end_of_pow:
  1489                           	opt stack 0
  1490                           pclatu	equ	0xFFB
  1491                           pclath	equ	0xFFA
  1492                           tblptru	equ	0xFF8
  1493                           tblptrh	equ	0xFF7
  1494                           tblptrl	equ	0xFF6
  1495                           tablat	equ	0xFF5
  1496                           prodh	equ	0xFF4
  1497                           prodl	equ	0xFF3
  1498                           intcon	equ	0xFF2
  1499                           intcon2	equ	0xFF1
  1500                           postinc0	equ	0xFEE
  1501                           fsr0h	equ	0xFEA
  1502                           fsr0l	equ	0xFE9
  1503                           wreg	equ	0xFE8
  1504                           fsr1h	equ	0xFE2
  1505                           fsr1l	equ	0xFE1
  1506                           postinc2	equ	0xFDE
  1507                           postdec2	equ	0xFDD
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _log *****************
  1513 ;; Defined at:
  1514 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\log.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  x               3   51[COMRAM] unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  exponent        2   54[COMRAM] int 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  3   51[COMRAM] int 
  1521 ;; Registers used:
  1522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         3       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1531 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:        5 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		___awtoft
  1537 ;;		___ftadd
  1538 ;;		___ftmul
  1539 ;;		_eval_poly
  1540 ;;		_frexp
  1541 ;; This function is called by:
  1542 ;;		_pow
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text6
  1547  000F64                     __ptext6:
  1548                           	opt stack 0
  1549  000F64                     _log:
  1550                           	opt stack 22
  1551                           
  1552                           ;incstack = 0
  1553  000F64  AE36               	btfss	log@x+2,7,c
  1554  000F66  D00C               	goto	i2l1846
  1555  000F68  0E00               	movlw	0
  1556  000F6A  0100               	movlb	0	; () banked
  1557  000F6C  6F96               	movwf	(_errno+1)& (0+255),b
  1558  000F6E  0E21               	movlw	33
  1559  000F70  6F95               	movwf	_errno& (0+255),b
  1560  000F72  0E00               	movlw	0
  1561  000F74  6E34               	movwf	?_log,c
  1562  000F76  0E00               	movlw	0
  1563  000F78  6E35               	movwf	?_log+1,c
  1564  000F7A  0E00               	movlw	0
  1565  000F7C  6E36               	movwf	?_log+2,c
  1566                           
  1567                           ; BSR set to: 0
  1568  000F7E  0012               	return	
  1569  000F80                     i2l1846:
  1570  000F80  5034               	movf	log@x,w,c
  1571  000F82  1035               	iorwf	log@x+1,w,c
  1572  000F84  1036               	iorwf	log@x+2,w,c
  1573  000F86  A4D8               	btfss	status,2,c
  1574  000F88  D00C               	goto	i2l1852
  1575  000F8A  0E00               	movlw	0
  1576  000F8C  0100               	movlb	0	; () banked
  1577  000F8E  6F96               	movwf	(_errno+1)& (0+255),b
  1578  000F90  0E22               	movlw	34
  1579  000F92  6F95               	movwf	_errno& (0+255),b
  1580  000F94  0E00               	movlw	0
  1581  000F96  6E34               	movwf	?_log,c
  1582  000F98  0E00               	movlw	0
  1583  000F9A  6E35               	movwf	?_log+1,c
  1584  000F9C  0E00               	movlw	0
  1585  000F9E  6E36               	movwf	?_log+2,c
  1586                           
  1587                           ; BSR set to: 0
  1588  000FA0  0012               	return	
  1589  000FA2                     i2l1852:
  1590  000FA2  0E00               	movlw	0
  1591  000FA4  6E10               	movwf	___ftmul@f2,c
  1592  000FA6  0E00               	movlw	0
  1593  000FA8  6E11               	movwf	___ftmul@f2+1,c
  1594  000FAA  0E40               	movlw	64
  1595  000FAC  6E12               	movwf	___ftmul@f2+2,c
  1596  000FAE  0E37               	movlw	low log@exponent
  1597  000FB0  6E04               	movwf	frexp@eptr,c
  1598  000FB2  0E00               	movlw	high log@exponent
  1599  000FB4  6E05               	movwf	frexp@eptr+1,c
  1600  000FB6  C034  F001         	movff	log@x,frexp@value
  1601  000FBA  C035  F002         	movff	log@x+1,frexp@value+1
  1602  000FBE  C036  F003         	movff	log@x+2,frexp@value+2
  1603  000FC2  EC3A  F00B         	call	_frexp	;wreg free
  1604  000FC6  C001  F00D         	movff	?_frexp,___ftmul@f1
  1605  000FCA  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  1606  000FCE  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  1607  000FD2  ECBB  F008         	call	___ftmul	;wreg free
  1608  000FD6  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1609  000FDA  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1610  000FDE  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1611  000FE2  0E00               	movlw	0
  1612  000FE4  6E1F               	movwf	___ftadd@f2,c
  1613  000FE6  0E80               	movlw	128
  1614  000FE8  6E20               	movwf	___ftadd@f2+1,c
  1615  000FEA  0EBF               	movlw	191
  1616  000FEC  6E21               	movwf	___ftadd@f2+2,c
  1617  000FEE  EC1C  F006         	call	___ftadd	;wreg free
  1618  000FF2  C01C  F034         	movff	?___ftadd,log@x
  1619  000FF6  C01D  F035         	movff	?___ftadd+1,log@x+1
  1620  000FFA  C01E  F036         	movff	?___ftadd+2,log@x+2
  1621  000FFE  0637               	decf	log@exponent,f,c
  1622  001000  A0D8               	btfss	status,0,c
  1623  001002  0638               	decf	log@exponent+1,f,c
  1624  001004  C034  F028         	movff	log@x,eval_poly@x
  1625  001008  C035  F029         	movff	log@x+1,eval_poly@x+1
  1626  00100C  C036  F02A         	movff	log@x+2,eval_poly@x+2
  1627  001010  0E1F               	movlw	low log@coeff
  1628  001012  6E2B               	movwf	eval_poly@d,c
  1629  001014  0E08               	movlw	high log@coeff
  1630  001016  6E2C               	movwf	eval_poly@d+1,c
  1631  001018  0E00               	movlw	0
  1632  00101A  6E2E               	movwf	eval_poly@n+1,c
  1633  00101C  0E08               	movlw	8
  1634  00101E  6E2D               	movwf	eval_poly@n,c
  1635  001020  EC17  F00A         	call	_eval_poly	;wreg free
  1636  001024  C028  F034         	movff	?_eval_poly,log@x
  1637  001028  C029  F035         	movff	?_eval_poly+1,log@x+1
  1638  00102C  C02A  F036         	movff	?_eval_poly+2,log@x+2
  1639  001030  0E72               	movlw	114
  1640  001032  6E10               	movwf	___ftmul@f2,c
  1641  001034  0E31               	movlw	49
  1642  001036  6E11               	movwf	___ftmul@f2+1,c
  1643  001038  0E3F               	movlw	63
  1644  00103A  6E12               	movwf	___ftmul@f2+2,c
  1645  00103C  C037  F009         	movff	log@exponent,___awtoft@c
  1646  001040  C038  F00A         	movff	log@exponent+1,___awtoft@c+1
  1647  001044  EC0B  F00D         	call	___awtoft	;wreg free
  1648  001048  C009  F00D         	movff	?___awtoft,___ftmul@f1
  1649  00104C  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  1650  001050  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  1651  001054  ECBB  F008         	call	___ftmul	;wreg free
  1652  001058  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  1653  00105C  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  1654  001060  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  1655  001064  C034  F01F         	movff	log@x,___ftadd@f2
  1656  001068  C035  F020         	movff	log@x+1,___ftadd@f2+1
  1657  00106C  C036  F021         	movff	log@x+2,___ftadd@f2+2
  1658  001070  EC1C  F006         	call	___ftadd	;wreg free
  1659  001074  C01C  F034         	movff	?___ftadd,?_log
  1660  001078  C01D  F035         	movff	?___ftadd+1,?_log+1
  1661  00107C  C01E  F036         	movff	?___ftadd+2,?_log+2
  1662  001080  0012               	return	
  1663  001082                     __end_of_log:
  1664                           	opt stack 0
  1665                           pclatu	equ	0xFFB
  1666                           pclath	equ	0xFFA
  1667                           tblptru	equ	0xFF8
  1668                           tblptrh	equ	0xFF7
  1669                           tblptrl	equ	0xFF6
  1670                           tablat	equ	0xFF5
  1671                           prodh	equ	0xFF4
  1672                           prodl	equ	0xFF3
  1673                           intcon	equ	0xFF2
  1674                           intcon2	equ	0xFF1
  1675                           postinc0	equ	0xFEE
  1676                           fsr0h	equ	0xFEA
  1677                           fsr0l	equ	0xFE9
  1678                           wreg	equ	0xFE8
  1679                           fsr1h	equ	0xFE2
  1680                           fsr1l	equ	0xFE1
  1681                           postinc2	equ	0xFDE
  1682                           postdec2	equ	0xFDD
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function _exp *****************
  1688 ;; Defined at:
  1689 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\exp.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  x               3   72[COMRAM] int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  exponent        2   78[COMRAM] int 
  1694 ;;  sign            1   80[COMRAM] unsigned char 
  1695 ;; Return value:  Size  Location     Type
  1696 ;;                  3   72[COMRAM] unsigned char 
  1697 ;; Registers used:
  1698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1699 ;; Tracked objects:
  1700 ;;		On entry : 0/0
  1701 ;;		On exit  : 0/0
  1702 ;;		Unchanged: 0/0
  1703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1704 ;;      Params:         3       0       0       0       0       0       0       0       0
  1705 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1706 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1707 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1708 ;;Total ram usage:        9 bytes
  1709 ;; Hardware stack levels used:    1
  1710 ;; Hardware stack levels required when called:    3
  1711 ;; This function calls:
  1712 ;;		___awtoft
  1713 ;;		___ftdiv
  1714 ;;		___ftge
  1715 ;;		___ftmul
  1716 ;;		___ftneg
  1717 ;;		___ftsub
  1718 ;;		___fttol
  1719 ;;		_eval_poly
  1720 ;;		_floor
  1721 ;;		_ldexp
  1722 ;; This function is called by:
  1723 ;;		_pow
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text7
  1728  000A50                     __ptext7:
  1729                           	opt stack 0
  1730  000A50                     _exp:
  1731                           	opt stack 22
  1732                           
  1733                           ;incstack = 0
  1734  000A50  5049               	movf	exp@x,w,c
  1735  000A52  104A               	iorwf	exp@x+1,w,c
  1736  000A54  104B               	iorwf	exp@x+2,w,c
  1737  000A56  A4D8               	btfss	status,2,c
  1738  000A58  D007               	goto	i2l1868
  1739  000A5A  0E00               	movlw	0
  1740  000A5C  6E49               	movwf	?_exp,c
  1741  000A5E  0E80               	movlw	128
  1742  000A60  6E4A               	movwf	?_exp+1,c
  1743  000A62  0E3F               	movlw	63
  1744  000A64  6E4B               	movwf	?_exp+2,c
  1745  000A66  0012               	return	
  1746  000A68                     i2l1868:
  1747  000A68  0E72               	movlw	114
  1748  000A6A  6E01               	movwf	___ftge@ff1,c
  1749  000A6C  0E31               	movlw	49
  1750  000A6E  6E02               	movwf	___ftge@ff1+1,c
  1751  000A70  0E44               	movlw	68
  1752  000A72  6E03               	movwf	___ftge@ff1+2,c
  1753  000A74  C049  F004         	movff	exp@x,___ftge@ff2
  1754  000A78  C04A  F005         	movff	exp@x+1,___ftge@ff2+1
  1755  000A7C  C04B  F006         	movff	exp@x+2,___ftge@ff2+2
  1756  000A80  EC82  F00B         	call	___ftge	;wreg free
  1757  000A84  B0D8               	btfsc	status,0,c
  1758  000A86  D00C               	goto	i2l1874
  1759  000A88  0E00               	movlw	0
  1760  000A8A  0100               	movlb	0	; () banked
  1761  000A8C  6F96               	movwf	(_errno+1)& (0+255),b
  1762  000A8E  0E22               	movlw	34
  1763  000A90  6F95               	movwf	_errno& (0+255),b
  1764  000A92  0EFF               	movlw	255
  1765  000A94  6E49               	movwf	?_exp,c
  1766  000A96  0E7F               	movlw	127
  1767  000A98  6E4A               	movwf	?_exp+1,c
  1768  000A9A  0E7F               	movlw	127
  1769  000A9C  6E4B               	movwf	?_exp+2,c
  1770                           
  1771                           ; BSR set to: 0
  1772  000A9E  0012               	return	
  1773  000AA0                     i2l1874:
  1774  000AA0  C049  F001         	movff	exp@x,___ftge@ff1
  1775  000AA4  C04A  F002         	movff	exp@x+1,___ftge@ff1+1
  1776  000AA8  C04B  F003         	movff	exp@x+2,___ftge@ff1+2
  1777  000AAC  0E49               	movlw	73
  1778  000AAE  6E04               	movwf	___ftge@ff2,c
  1779  000AB0  0E3A               	movlw	58
  1780  000AB2  6E05               	movwf	___ftge@ff2+1,c
  1781  000AB4  0EC4               	movlw	196
  1782  000AB6  6E06               	movwf	___ftge@ff2+2,c
  1783  000AB8  EC82  F00B         	call	___ftge	;wreg free
  1784  000ABC  B0D8               	btfsc	status,0,c
  1785  000ABE  D00C               	goto	i2l1880
  1786  000AC0  0E00               	movlw	0
  1787  000AC2  0100               	movlb	0	; () banked
  1788  000AC4  6F96               	movwf	(_errno+1)& (0+255),b
  1789  000AC6  0E22               	movlw	34
  1790  000AC8  6F95               	movwf	_errno& (0+255),b
  1791  000ACA  0E00               	movlw	0
  1792  000ACC  6E49               	movwf	?_exp,c
  1793  000ACE  0E00               	movlw	0
  1794  000AD0  6E4A               	movwf	?_exp+1,c
  1795  000AD2  0E00               	movlw	0
  1796  000AD4  6E4B               	movwf	?_exp+2,c
  1797                           
  1798                           ; BSR set to: 0
  1799  000AD6  0012               	return	
  1800  000AD8                     i2l1880:
  1801  000AD8  AE4B               	btfss	exp@x+2,7,c
  1802  000ADA  D002               	goto	i2u173_40
  1803  000ADC  0E01               	movlw	1
  1804  000ADE  D001               	goto	i2u174_40
  1805  000AE0                     i2u173_40:
  1806  000AE0  0E00               	movlw	0
  1807  000AE2                     i2u174_40:
  1808  000AE2  6E51               	movwf	exp@sign,c
  1809  000AE4  5051               	movf	exp@sign,w,c
  1810  000AE6  B4D8               	btfsc	status,2,c
  1811  000AE8  D00E               	goto	i2l665
  1812  000AEA  C049  F001         	movff	exp@x,___ftneg@f1
  1813  000AEE  C04A  F002         	movff	exp@x+1,___ftneg@f1+1
  1814  000AF2  C04B  F003         	movff	exp@x+2,___ftneg@f1+2
  1815  000AF6  EC50  F00D         	call	___ftneg	;wreg free
  1816  000AFA  C001  F049         	movff	?___ftneg,exp@x
  1817  000AFE  C002  F04A         	movff	?___ftneg+1,exp@x+1
  1818  000B02  C003  F04B         	movff	?___ftneg+2,exp@x+2
  1819  000B06                     i2l665:
  1820  000B06  C049  F00D         	movff	exp@x,___ftmul@f1
  1821  000B0A  C04A  F00E         	movff	exp@x+1,___ftmul@f1+1
  1822  000B0E  C04B  F00F         	movff	exp@x+2,___ftmul@f1+2
  1823  000B12  0EAA               	movlw	170
  1824  000B14  6E10               	movwf	___ftmul@f2,c
  1825  000B16  0EB8               	movlw	184
  1826  000B18  6E11               	movwf	___ftmul@f2+1,c
  1827  000B1A  0E3F               	movlw	63
  1828  000B1C  6E12               	movwf	___ftmul@f2+2,c
  1829  000B1E  ECBB  F008         	call	___ftmul	;wreg free
  1830  000B22  C00D  F049         	movff	?___ftmul,exp@x
  1831  000B26  C00E  F04A         	movff	?___ftmul+1,exp@x+1
  1832  000B2A  C00F  F04B         	movff	?___ftmul+2,exp@x+2
  1833  000B2E  C049  F041         	movff	exp@x,floor@x
  1834  000B32  C04A  F042         	movff	exp@x+1,floor@x+1
  1835  000B36  C04B  F043         	movff	exp@x+2,floor@x+2
  1836  000B3A  ECA8  F009         	call	_floor	;wreg free
  1837  000B3E  C041  F04C         	movff	?_floor,_exp$848
  1838  000B42  C042  F04D         	movff	?_floor+1,_exp$848+1
  1839  000B46  C043  F04E         	movff	?_floor+2,_exp$848+2
  1840  000B4A  C04C  F028         	movff	_exp$848,___fttol@f1
  1841  000B4E  C04D  F029         	movff	_exp$848+1,___fttol@f1+1
  1842  000B52  C04E  F02A         	movff	_exp$848+2,___fttol@f1+2
  1843  000B56  EC41  F008         	call	___fttol	;wreg free
  1844  000B5A  C028  F04F         	movff	?___fttol,exp@exponent
  1845  000B5E  C029  F050         	movff	?___fttol+1,exp@exponent+1
  1846  000B62  C049  F028         	movff	exp@x,___ftsub@f1
  1847  000B66  C04A  F029         	movff	exp@x+1,___ftsub@f1+1
  1848  000B6A  C04B  F02A         	movff	exp@x+2,___ftsub@f1+2
  1849  000B6E  C04F  F009         	movff	exp@exponent,___awtoft@c
  1850  000B72  C050  F00A         	movff	exp@exponent+1,___awtoft@c+1
  1851  000B76  EC0B  F00D         	call	___awtoft	;wreg free
  1852  000B7A  C009  F02B         	movff	?___awtoft,___ftsub@f2
  1853  000B7E  C00A  F02C         	movff	?___awtoft+1,___ftsub@f2+1
  1854  000B82  C00B  F02D         	movff	?___awtoft+2,___ftsub@f2+2
  1855  000B86  ECEB  F00C         	call	___ftsub	;wreg free
  1856  000B8A  C028  F049         	movff	?___ftsub,exp@x
  1857  000B8E  C029  F04A         	movff	?___ftsub+1,exp@x+1
  1858  000B92  C02A  F04B         	movff	?___ftsub+2,exp@x+2
  1859  000B96  C049  F028         	movff	exp@x,eval_poly@x
  1860  000B9A  C04A  F029         	movff	exp@x+1,eval_poly@x+1
  1861  000B9E  C04B  F02A         	movff	exp@x+2,eval_poly@x+2
  1862  000BA2  0E01               	movlw	low exp@coeff
  1863  000BA4  6E2B               	movwf	eval_poly@d,c
  1864  000BA6  0E08               	movlw	high exp@coeff
  1865  000BA8  6E2C               	movwf	eval_poly@d+1,c
  1866  000BAA  0E00               	movlw	0
  1867  000BAC  6E2E               	movwf	eval_poly@n+1,c
  1868  000BAE  0E09               	movlw	9
  1869  000BB0  6E2D               	movwf	eval_poly@n,c
  1870  000BB2  EC17  F00A         	call	_eval_poly	;wreg free
  1871  000BB6  C028  F034         	movff	?_eval_poly,ldexp@value
  1872  000BBA  C029  F035         	movff	?_eval_poly+1,ldexp@value+1
  1873  000BBE  C02A  F036         	movff	?_eval_poly+2,ldexp@value+2
  1874  000BC2  C04F  F037         	movff	exp@exponent,ldexp@newexp
  1875  000BC6  C050  F038         	movff	exp@exponent+1,ldexp@newexp+1
  1876  000BCA  EC80  F00A         	call	_ldexp	;wreg free
  1877  000BCE  C034  F049         	movff	?_ldexp,exp@x
  1878  000BD2  C035  F04A         	movff	?_ldexp+1,exp@x+1
  1879  000BD6  C036  F04B         	movff	?_ldexp+2,exp@x+2
  1880  000BDA  5051               	movf	exp@sign,w,c
  1881  000BDC  B4D8               	btfsc	status,2,c
  1882  000BDE  D025               	goto	i2l666
  1883  000BE0  2849               	incf	exp@x,w,c
  1884  000BE2  E10E               	bnz	i2l1902
  1885  000BE4  0E7F               	movlw	127
  1886  000BE6  184A               	xorwf	exp@x+1,w,c
  1887  000BE8  E10B               	bnz	i2l1902
  1888  000BEA  0E7F               	movlw	127
  1889  000BEC  184B               	xorwf	exp@x+2,w,c
  1890  000BEE  A4D8               	btfss	status,2,c
  1891  000BF0  D007               	goto	i2l1902
  1892  000BF2  0E00               	movlw	0
  1893  000BF4  6E49               	movwf	?_exp,c
  1894  000BF6  0E00               	movlw	0
  1895  000BF8  6E4A               	movwf	?_exp+1,c
  1896  000BFA  0E00               	movlw	0
  1897  000BFC  6E4B               	movwf	?_exp+2,c
  1898  000BFE  0012               	return	
  1899  000C00                     i2l1902:
  1900  000C00  0E00               	movlw	0
  1901  000C02  6E09               	movwf	___ftdiv@f1,c
  1902  000C04  0E80               	movlw	128
  1903  000C06  6E0A               	movwf	___ftdiv@f1+1,c
  1904  000C08  0E3F               	movlw	63
  1905  000C0A  6E0B               	movwf	___ftdiv@f1+2,c
  1906  000C0C  C049  F00C         	movff	exp@x,___ftdiv@f2
  1907  000C10  C04A  F00D         	movff	exp@x+1,___ftdiv@f2+1
  1908  000C14  C04B  F00E         	movff	exp@x+2,___ftdiv@f2+2
  1909  000C18  EC35  F009         	call	___ftdiv	;wreg free
  1910  000C1C  C009  F049         	movff	?___ftdiv,?_exp
  1911  000C20  C00A  F04A         	movff	?___ftdiv+1,?_exp+1
  1912  000C24  C00B  F04B         	movff	?___ftdiv+2,?_exp+2
  1913  000C28  0012               	return	
  1914  000C2A                     i2l666:
  1915  000C2A  C049  F049         	movff	exp@x,?_exp
  1916  000C2E  C04A  F04A         	movff	exp@x+1,?_exp+1
  1917  000C32  C04B  F04B         	movff	exp@x+2,?_exp+2
  1918  000C36  0012               	return		;funcret
  1919  000C38                     __end_of_exp:
  1920                           	opt stack 0
  1921                           pclatu	equ	0xFFB
  1922                           pclath	equ	0xFFA
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           prodh	equ	0xFF4
  1928                           prodl	equ	0xFF3
  1929                           intcon	equ	0xFF2
  1930                           intcon2	equ	0xFF1
  1931                           postinc0	equ	0xFEE
  1932                           fsr0h	equ	0xFEA
  1933                           fsr0l	equ	0xFE9
  1934                           wreg	equ	0xFE8
  1935                           fsr1h	equ	0xFE2
  1936                           fsr1l	equ	0xFE1
  1937                           postinc2	equ	0xFDE
  1938                           postdec2	equ	0xFDD
  1939                           fsr2h	equ	0xFDA
  1940                           fsr2l	equ	0xFD9
  1941                           status	equ	0xFD8
  1942                           
  1943 ;; *************** function _ldexp *****************
  1944 ;; Defined at:
  1945 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\frexp.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  value           3   51[COMRAM] unsigned char 
  1948 ;;  newexp          2   54[COMRAM] int 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  3   51[COMRAM] int 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/0
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1960 ;;      Params:         5       0       0       0       0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1962 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1963 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1964 ;;Total ram usage:        7 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_exp
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text8
  1974  001500                     __ptext8:
  1975                           	opt stack 0
  1976  001500                     _ldexp:
  1977                           	opt stack 24
  1978                           
  1979                           ;incstack = 0
  1980  001500  5034               	movf	ldexp@value,w,c
  1981  001502  1035               	iorwf	ldexp@value+1,w,c
  1982  001504  1036               	iorwf	ldexp@value+2,w,c
  1983  001506  A4D8               	btfss	status,2,c
  1984  001508  D007               	goto	i2l1800
  1985  00150A  0E00               	movlw	0
  1986  00150C  6E34               	movwf	?_ldexp,c
  1987  00150E  0E00               	movlw	0
  1988  001510  6E35               	movwf	?_ldexp+1,c
  1989  001512  0E00               	movlw	0
  1990  001514  6E36               	movwf	?_ldexp+2,c
  1991  001516  0012               	return	
  1992  001518                     i2l1800:
  1993  001518  5036               	movf	ldexp@value+2,w,c
  1994  00151A  0B7F               	andlw	127
  1995  00151C  6E39               	movwf	??_ldexp& (0+255),c
  1996  00151E  6A3A               	clrf	(??_ldexp+1)& (0+255),c
  1997  001520  90D8               	bcf	status,0,c
  1998  001522  3639               	rlcf	??_ldexp,f,c
  1999  001524  363A               	rlcf	??_ldexp+1,f,c
  2000  001526  5039               	movf	??_ldexp,w,c
  2001  001528  2637               	addwf	ldexp@newexp,f,c
  2002  00152A  503A               	movf	??_ldexp+1,w,c
  2003  00152C  2238               	addwfc	ldexp@newexp+1,f,c
  2004  00152E  AE35               	btfss	ldexp@value+1,7,c
  2005  001530  D003               	goto	i2u163_40
  2006  001532  6A39               	clrf	??_ldexp& (0+255),c
  2007  001534  2A39               	incf	??_ldexp& (0+255),f,c
  2008  001536  D001               	goto	i2u163_48
  2009  001538                     i2u163_40:
  2010  001538  6A39               	clrf	??_ldexp& (0+255),c
  2011  00153A                     i2u163_48:
  2012  00153A  5039               	movf	??_ldexp,w,c
  2013  00153C  2637               	addwf	ldexp@newexp,f,c
  2014  00153E  0E00               	movlw	0
  2015  001540  2238               	addwfc	ldexp@newexp+1,f,c
  2016  001542  AE38               	btfss	ldexp@newexp+1,7,c
  2017  001544  D00C               	goto	i2l1808
  2018  001546  0E00               	movlw	0
  2019  001548  0100               	movlb	0	; () banked
  2020  00154A  6F96               	movwf	(_errno+1)& (0+255),b
  2021  00154C  0E22               	movlw	34
  2022  00154E  6F95               	movwf	_errno& (0+255),b
  2023  001550  0E00               	movlw	0
  2024  001552  6E34               	movwf	?_ldexp,c
  2025  001554  0E00               	movlw	0
  2026  001556  6E35               	movwf	?_ldexp+1,c
  2027  001558  0E00               	movlw	0
  2028  00155A                     L2:
  2029  00155A  6E36               	movwf	?_ldexp+2,c
  2030                           
  2031                           ; BSR set to: 0
  2032  00155C  0012               	return	
  2033  00155E                     i2l1808:
  2034  00155E  BE38               	btfsc	ldexp@newexp+1,7,c
  2035  001560  D016               	goto	i2l1824
  2036  001562  0438               	decf	ldexp@newexp+1,w,c
  2037  001564  A0D8               	btfss	status,0,c
  2038  001566  D013               	goto	i2l1824
  2039  001568  0E00               	movlw	0
  2040  00156A  0100               	movlb	0	; () banked
  2041  00156C  6F96               	movwf	(_errno+1)& (0+255),b
  2042  00156E  0E22               	movlw	34
  2043  001570  6F95               	movwf	_errno& (0+255),b
  2044                           
  2045                           ; BSR set to: 0
  2046  001572  AE36               	btfss	ldexp@value+2,7,c
  2047  001574  D006               	goto	i2l1820
  2048                           
  2049                           ; BSR set to: 0
  2050  001576  0EFF               	movlw	255
  2051  001578  6E34               	movwf	?_ldexp,c
  2052  00157A  0E7F               	movlw	127
  2053  00157C  6E35               	movwf	?_ldexp+1,c
  2054  00157E  0EFF               	movlw	255
  2055  001580  D7EC               	goto	L2
  2056  001582                     i2l1820:
  2057                           
  2058                           ; BSR set to: 0
  2059  001582  0EFF               	movlw	255
  2060  001584  6E34               	movwf	?_ldexp,c
  2061  001586  0E7F               	movlw	127
  2062  001588  6E35               	movwf	?_ldexp+1,c
  2063  00158A  0E7F               	movlw	127
  2064  00158C  D7E6               	goto	L2
  2065  00158E                     i2l1824:
  2066  00158E  3438               	rlcf	ldexp@newexp+1,w,c
  2067  001590  3038               	rrcf	ldexp@newexp+1,w,c
  2068  001592  6E3A               	movwf	(??_ldexp+1)& (0+255),c
  2069  001594  3037               	rrcf	ldexp@newexp,w,c
  2070  001596  6E39               	movwf	??_ldexp& (0+255),c
  2071  001598  5036               	movf	ldexp@value+2,w,c
  2072  00159A  1839               	xorwf	??_ldexp,w,c
  2073  00159C  0B80               	andlw	-128
  2074  00159E  1839               	xorwf	??_ldexp,w,c
  2075  0015A0  6E36               	movwf	ldexp@value+2,c
  2076  0015A2  C037  F039         	movff	ldexp@newexp,??_ldexp
  2077  0015A6  0E01               	movlw	1
  2078  0015A8  1639               	andwf	??_ldexp,f,c
  2079  0015AA  3239               	rrcf	??_ldexp,f,c
  2080  0015AC  3239               	rrcf	??_ldexp,f,c
  2081  0015AE  5035               	movf	ldexp@value+1,w,c
  2082  0015B0  1839               	xorwf	??_ldexp,w,c
  2083  0015B2  0B7F               	andlw	-129
  2084  0015B4  1839               	xorwf	??_ldexp,w,c
  2085  0015B6  6E35               	movwf	ldexp@value+1,c
  2086  0015B8  C034  F034         	movff	ldexp@value,?_ldexp
  2087  0015BC  C035  F035         	movff	ldexp@value+1,?_ldexp+1
  2088  0015C0  C036  F036         	movff	ldexp@value+2,?_ldexp+2
  2089  0015C4  0012               	return	
  2090  0015C6                     __end_of_ldexp:
  2091                           	opt stack 0
  2092                           pclatu	equ	0xFFB
  2093                           pclath	equ	0xFFA
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           prodh	equ	0xFF4
  2099                           prodl	equ	0xFF3
  2100                           intcon	equ	0xFF2
  2101                           intcon2	equ	0xFF1
  2102                           postinc0	equ	0xFEE
  2103                           fsr0h	equ	0xFEA
  2104                           fsr0l	equ	0xFE9
  2105                           wreg	equ	0xFE8
  2106                           fsr1h	equ	0xFE2
  2107                           fsr1l	equ	0xFE1
  2108                           postinc2	equ	0xFDE
  2109                           postdec2	equ	0xFDD
  2110                           fsr2h	equ	0xFDA
  2111                           fsr2l	equ	0xFD9
  2112                           status	equ	0xFD8
  2113                           
  2114 ;; *************** function _floor *****************
  2115 ;; Defined at:
  2116 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\floor.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  x               3   64[COMRAM] int 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  i               3   67[COMRAM] int 
  2121 ;;  expon           2   70[COMRAM] int 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  3   64[COMRAM] int 
  2124 ;; Registers used:
  2125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2131 ;;      Params:         3       0       0       0       0       0       0       0       0
  2132 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2134 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2135 ;;Total ram usage:        8 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    2
  2138 ;; This function calls:
  2139 ;;		___altoft
  2140 ;;		___ftadd
  2141 ;;		___ftge
  2142 ;;		___fttol
  2143 ;;		_frexp
  2144 ;; This function is called by:
  2145 ;;		_exp
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text9
  2150  001350                     __ptext9:
  2151                           	opt stack 0
  2152  001350                     _floor:
  2153                           	opt stack 22
  2154                           
  2155                           ;incstack = 0
  2156  001350  C041  F001         	movff	floor@x,frexp@value
  2157  001354  C042  F002         	movff	floor@x+1,frexp@value+1
  2158  001358  C043  F003         	movff	floor@x+2,frexp@value+2
  2159  00135C  0E47               	movlw	low floor@expon
  2160  00135E  6E04               	movwf	frexp@eptr,c
  2161  001360  0E00               	movlw	high floor@expon
  2162  001362  6E05               	movwf	frexp@eptr+1,c
  2163  001364  EC3A  F00B         	call	_frexp	;wreg free
  2164  001368  AE48               	btfss	floor@expon+1,7,c
  2165  00136A  D010               	goto	i2l1778
  2166  00136C  AE43               	btfss	floor@x+2,7,c
  2167  00136E  D007               	goto	i2l1774
  2168  001370  0E00               	movlw	0
  2169  001372  6E41               	movwf	?_floor,c
  2170  001374  0E80               	movlw	128
  2171  001376  6E42               	movwf	?_floor+1,c
  2172  001378  0EBF               	movlw	191
  2173  00137A  6E43               	movwf	?_floor+2,c
  2174  00137C  0012               	return	
  2175  00137E                     i2l1774:
  2176  00137E  0E00               	movlw	0
  2177  001380  6E41               	movwf	?_floor,c
  2178  001382  0E00               	movlw	0
  2179  001384  6E42               	movwf	?_floor+1,c
  2180  001386  0E00               	movlw	0
  2181  001388  6E43               	movwf	?_floor+2,c
  2182  00138A  0012               	return	
  2183  00138C                     i2l1778:
  2184  00138C  5048               	movf	floor@expon+1,w,c
  2185  00138E  E104               	bnz	i2u159_40
  2186  001390  0E15               	movlw	21
  2187  001392  5C47               	subwf	floor@expon,w,c
  2188  001394  A0D8               	btfss	status,0,c
  2189  001396  D007               	goto	i2l1782
  2190  001398                     i2u159_40:
  2191  001398  C041  F041         	movff	floor@x,?_floor
  2192  00139C  C042  F042         	movff	floor@x+1,?_floor+1
  2193  0013A0  C043  F043         	movff	floor@x+2,?_floor+2
  2194  0013A4  0012               	return	
  2195  0013A6                     i2l1782:
  2196  0013A6  C041  F028         	movff	floor@x,___fttol@f1
  2197  0013AA  C042  F029         	movff	floor@x+1,___fttol@f1+1
  2198  0013AE  C043  F02A         	movff	floor@x+2,___fttol@f1+2
  2199  0013B2  EC41  F008         	call	___fttol	;wreg free
  2200  0013B6  C028  F037         	movff	?___fttol,___altoft@c
  2201  0013BA  C029  F038         	movff	?___fttol+1,___altoft@c+1
  2202  0013BE  C02A  F039         	movff	?___fttol+2,___altoft@c+2
  2203  0013C2  C02B  F03A         	movff	?___fttol+3,___altoft@c+3
  2204  0013C6  EC4A  F00C         	call	___altoft	;wreg free
  2205  0013CA  C037  F044         	movff	?___altoft,floor@i
  2206  0013CE  C038  F045         	movff	?___altoft+1,floor@i+1
  2207  0013D2  C039  F046         	movff	?___altoft+2,floor@i+2
  2208  0013D6  C041  F001         	movff	floor@x,___ftge@ff1
  2209  0013DA  C042  F002         	movff	floor@x+1,___ftge@ff1+1
  2210  0013DE  C043  F003         	movff	floor@x+2,___ftge@ff1+2
  2211  0013E2  C044  F004         	movff	floor@i,___ftge@ff2
  2212  0013E6  C045  F005         	movff	floor@i+1,___ftge@ff2+1
  2213  0013EA  C046  F006         	movff	floor@i+2,___ftge@ff2+2
  2214  0013EE  EC82  F00B         	call	___ftge	;wreg free
  2215  0013F2  B0D8               	btfsc	status,0,c
  2216  0013F4  D015               	goto	i2l676
  2217  0013F6  C044  F01C         	movff	floor@i,___ftadd@f1
  2218  0013FA  C045  F01D         	movff	floor@i+1,___ftadd@f1+1
  2219  0013FE  C046  F01E         	movff	floor@i+2,___ftadd@f1+2
  2220  001402  0E00               	movlw	0
  2221  001404  6E1F               	movwf	___ftadd@f2,c
  2222  001406  0E80               	movlw	128
  2223  001408  6E20               	movwf	___ftadd@f2+1,c
  2224  00140A  0EBF               	movlw	191
  2225  00140C  6E21               	movwf	___ftadd@f2+2,c
  2226  00140E  EC1C  F006         	call	___ftadd	;wreg free
  2227  001412  C01C  F041         	movff	?___ftadd,?_floor
  2228  001416  C01D  F042         	movff	?___ftadd+1,?_floor+1
  2229  00141A  C01E  F043         	movff	?___ftadd+2,?_floor+2
  2230  00141E  0012               	return	
  2231  001420                     i2l676:
  2232  001420  C044  F041         	movff	floor@i,?_floor
  2233  001424  C045  F042         	movff	floor@i+1,?_floor+1
  2234  001428  C046  F043         	movff	floor@i+2,?_floor+2
  2235  00142C  0012               	return		;funcret
  2236  00142E                     __end_of_floor:
  2237                           	opt stack 0
  2238                           pclatu	equ	0xFFB
  2239                           pclath	equ	0xFFA
  2240                           tblptru	equ	0xFF8
  2241                           tblptrh	equ	0xFF7
  2242                           tblptrl	equ	0xFF6
  2243                           tablat	equ	0xFF5
  2244                           prodh	equ	0xFF4
  2245                           prodl	equ	0xFF3
  2246                           intcon	equ	0xFF2
  2247                           intcon2	equ	0xFF1
  2248                           postinc0	equ	0xFEE
  2249                           fsr0h	equ	0xFEA
  2250                           fsr0l	equ	0xFE9
  2251                           wreg	equ	0xFE8
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           postinc2	equ	0xFDE
  2255                           postdec2	equ	0xFDD
  2256                           fsr2h	equ	0xFDA
  2257                           fsr2l	equ	0xFD9
  2258                           status	equ	0xFD8
  2259                           
  2260 ;; *************** function _frexp *****************
  2261 ;; Defined at:
  2262 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\frexp.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  value           3    0[COMRAM] int 
  2265 ;;  eptr            2    3[COMRAM] PTR int 
  2266 ;;		 -> log@exponent(2), floor@expon(2), 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;		None
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  3    0[COMRAM] PTR int 
  2271 ;; Registers used:
  2272 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2278 ;;      Params:         5       0       0       0       0       0       0       0       0
  2279 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2280 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2281 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2282 ;;Total ram usage:        7 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_floor
  2288 ;;		_log
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text10
  2293  001674                     __ptext10:
  2294                           	opt stack 0
  2295  001674                     _frexp:
  2296                           	opt stack 24
  2297                           
  2298                           ;incstack = 0
  2299  001674  5001               	movf	frexp@value,w,c
  2300  001676  1002               	iorwf	frexp@value+1,w,c
  2301  001678  1003               	iorwf	frexp@value+2,w,c
  2302  00167A  A4D8               	btfss	status,2,c
  2303  00167C  D00F               	goto	i2l1682
  2304  00167E  C004  FFD9         	movff	frexp@eptr,fsr2l
  2305  001682  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2306  001686  0E00               	movlw	0
  2307  001688  6EDE               	movwf	postinc2,c
  2308  00168A  0E00               	movlw	0
  2309  00168C  6EDD               	movwf	postdec2,c
  2310  00168E  0E00               	movlw	0
  2311  001690  6E01               	movwf	?_frexp,c
  2312  001692  0E00               	movlw	0
  2313  001694  6E02               	movwf	?_frexp+1,c
  2314  001696  0E00               	movlw	0
  2315  001698  6E03               	movwf	?_frexp+2,c
  2316  00169A  0012               	return	
  2317  00169C                     i2l1682:
  2318  00169C  5003               	movf	frexp@value+2,w,c
  2319  00169E  0B7F               	andlw	127
  2320  0016A0  6E06               	movwf	??_frexp& (0+255),c
  2321  0016A2  6A07               	clrf	(??_frexp+1)& (0+255),c
  2322  0016A4  90D8               	bcf	status,0,c
  2323  0016A6  3606               	rlcf	??_frexp,f,c
  2324  0016A8  3607               	rlcf	??_frexp+1,f,c
  2325  0016AA  C004  FFD9         	movff	frexp@eptr,fsr2l
  2326  0016AE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2327  0016B2  C006  FFDE         	movff	??_frexp,postinc2
  2328  0016B6  C007  FFDD         	movff	??_frexp+1,postdec2
  2329  0016BA  AE02               	btfss	frexp@value+1,7,c
  2330  0016BC  D003               	goto	i2u148_40
  2331  0016BE  6A06               	clrf	??_frexp& (0+255),c
  2332  0016C0  2A06               	incf	??_frexp& (0+255),f,c
  2333  0016C2  D001               	goto	i2u148_48
  2334  0016C4                     i2u148_40:
  2335  0016C4  6A06               	clrf	??_frexp& (0+255),c
  2336  0016C6                     i2u148_48:
  2337  0016C6  5006               	movf	??_frexp,w,c
  2338  0016C8  C004  FFD9         	movff	frexp@eptr,fsr2l
  2339  0016CC  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2340  0016D0  12DE               	iorwf	postinc2,f,c
  2341  0016D2  0E00               	movlw	0
  2342  0016D4  12DD               	iorwf	postdec2,f,c
  2343  0016D6  C004  FFD9         	movff	frexp@eptr,fsr2l
  2344  0016DA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2345  0016DE  0E82               	movlw	130
  2346  0016E0  26DE               	addwf	postinc2,f,c
  2347  0016E2  0EFF               	movlw	255
  2348  0016E4  22DD               	addwfc	postdec2,f,c
  2349  0016E6  8003               	bsf	frexp@value+2,0,c
  2350  0016E8  8203               	bsf	frexp@value+2,1,c
  2351  0016EA  8403               	bsf	frexp@value+2,2,c
  2352  0016EC  8603               	bsf	frexp@value+2,3,c
  2353  0016EE  8803               	bsf	frexp@value+2,4,c
  2354  0016F0  8A03               	bsf	frexp@value+2,5,c
  2355  0016F2  9C03               	bcf	frexp@value+2,6,c
  2356  0016F4  9E02               	bcf	frexp@value+1,7,c
  2357  0016F6  C001  F001         	movff	frexp@value,?_frexp
  2358  0016FA  C002  F002         	movff	frexp@value+1,?_frexp+1
  2359  0016FE  C003  F003         	movff	frexp@value+2,?_frexp+2
  2360  001702  0012               	return	
  2361  001704                     __end_of_frexp:
  2362                           	opt stack 0
  2363                           pclatu	equ	0xFFB
  2364                           pclath	equ	0xFFA
  2365                           tblptru	equ	0xFF8
  2366                           tblptrh	equ	0xFF7
  2367                           tblptrl	equ	0xFF6
  2368                           tablat	equ	0xFF5
  2369                           prodh	equ	0xFF4
  2370                           prodl	equ	0xFF3
  2371                           intcon	equ	0xFF2
  2372                           intcon2	equ	0xFF1
  2373                           postinc0	equ	0xFEE
  2374                           fsr0h	equ	0xFEA
  2375                           fsr0l	equ	0xFE9
  2376                           wreg	equ	0xFE8
  2377                           fsr1h	equ	0xFE2
  2378                           fsr1l	equ	0xFE1
  2379                           postinc2	equ	0xFDE
  2380                           postdec2	equ	0xFDD
  2381                           fsr2h	equ	0xFDA
  2382                           fsr2l	equ	0xFD9
  2383                           status	equ	0xFD8
  2384                           
  2385 ;; *************** function ___fttol *****************
  2386 ;; Defined at:
  2387 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  f1              3   39[COMRAM] float 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  lval            4   49[COMRAM] unsigned long 
  2392 ;;  exp1            1   53[COMRAM] unsigned char 
  2393 ;;  sign1           1   48[COMRAM] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  4   39[COMRAM] long 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2403 ;;      Params:         4       0       0       0       0       0       0       0       0
  2404 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2405 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2406 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:       15 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_dectobin
  2413 ;;		_pow
  2414 ;;		_exp
  2415 ;;		_floor
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           	psect	text11
  2420  001082                     __ptext11:
  2421                           	opt stack 0
  2422  001082                     ___fttol:
  2423                           	opt stack 23
  2424                           
  2425                           ;incstack = 0
  2426  001082  C02A  F02C         	movff	___fttol@f1+2,??___fttol
  2427  001086  6A2D               	clrf	(??___fttol+1)& (0+255),c
  2428  001088  6A2E               	clrf	(??___fttol+2)& (0+255),c
  2429  00108A  3429               	rlcf	___fttol@f1+1,w,c
  2430  00108C  362C               	rlcf	??___fttol& (0+255),f,c
  2431  00108E  E301               	bnc	u139_41
  2432  001090  802D               	bsf	(??___fttol+1)& (0+255),0,c
  2433  001092                     u139_41:
  2434  001092  502C               	movf	??___fttol,w,c
  2435  001094  6E36               	movwf	___fttol@exp1,c
  2436  001096  5036               	movf	___fttol@exp1,w,c
  2437  001098  A4D8               	btfss	status,2,c
  2438  00109A  D009               	goto	i2l1634
  2439  00109C  0E00               	movlw	0
  2440  00109E  6E28               	movwf	?___fttol,c
  2441  0010A0  0E00               	movlw	0
  2442  0010A2  6E29               	movwf	?___fttol+1,c
  2443  0010A4  0E00               	movlw	0
  2444  0010A6  6E2A               	movwf	?___fttol+2,c
  2445  0010A8  0E00               	movlw	0
  2446  0010AA  6E2B               	movwf	?___fttol+3,c
  2447  0010AC  0012               	return	
  2448  0010AE                     i2l1634:
  2449  0010AE  0E17               	movlw	23
  2450  0010B0  6E2C               	movwf	??___fttol& (0+255),c
  2451  0010B2  C028  F02D         	movff	___fttol@f1,??___fttol+1
  2452  0010B6  C029  F02E         	movff	___fttol@f1+1,??___fttol+2
  2453  0010BA  C02A  F02F         	movff	___fttol@f1+2,??___fttol+3
  2454  0010BE  282C               	incf	??___fttol,w,c
  2455  0010C0  6E30               	movwf	(??___fttol+4)& (0+255),c
  2456  0010C2  D004               	goto	i2u141_40
  2457  0010C4                     i2u141_45:
  2458  0010C4  90D8               	bcf	status,0,c
  2459  0010C6  322F               	rrcf	??___fttol+3,f,c
  2460  0010C8  322E               	rrcf	??___fttol+2,f,c
  2461  0010CA  322D               	rrcf	??___fttol+1,f,c
  2462  0010CC                     i2u141_40:
  2463  0010CC  2E30               	decfsz	(??___fttol+4)& (0+255),f,c
  2464  0010CE  D7FA               	goto	i2u141_45
  2465  0010D0  502D               	movf	??___fttol+1,w,c
  2466  0010D2  6E31               	movwf	___fttol@sign1,c
  2467  0010D4  8E29               	bsf	___fttol@f1+1,7,c
  2468  0010D6  0EFF               	movlw	255
  2469  0010D8  1628               	andwf	___fttol@f1,f,c
  2470  0010DA  0EFF               	movlw	255
  2471  0010DC  1629               	andwf	___fttol@f1+1,f,c
  2472  0010DE  0E00               	movlw	0
  2473  0010E0  162A               	andwf	___fttol@f1+2,f,c
  2474  0010E2  5028               	movf	___fttol@f1,w,c
  2475  0010E4  6E32               	movwf	___fttol@lval,c
  2476  0010E6  5029               	movf	___fttol@f1+1,w,c
  2477  0010E8  6E33               	movwf	___fttol@lval+1,c
  2478  0010EA  502A               	movf	___fttol@f1+2,w,c
  2479  0010EC  6E34               	movwf	___fttol@lval+2,c
  2480  0010EE  6A35               	clrf	___fttol@lval+3,c
  2481  0010F0  0E8E               	movlw	142
  2482  0010F2  5E36               	subwf	___fttol@exp1,f,c
  2483  0010F4  AE36               	btfss	___fttol@exp1,7,c
  2484  0010F6  D016               	goto	i2l1656
  2485  0010F8  5036               	movf	___fttol@exp1,w,c
  2486  0010FA  0A80               	xorlw	128
  2487  0010FC  0F8F               	addlw	143
  2488  0010FE  B0D8               	btfsc	status,0,c
  2489  001100  D009               	goto	i2l1652
  2490  001102  0E00               	movlw	0
  2491  001104  6E28               	movwf	?___fttol,c
  2492  001106  0E00               	movlw	0
  2493  001108  6E29               	movwf	?___fttol+1,c
  2494  00110A  0E00               	movlw	0
  2495  00110C  6E2A               	movwf	?___fttol+2,c
  2496  00110E  0E00               	movlw	0
  2497  001110  6E2B               	movwf	?___fttol+3,c
  2498  001112  0012               	return	
  2499  001114                     i2l1652:
  2500  001114  90D8               	bcf	status,0,c
  2501  001116  3235               	rrcf	___fttol@lval+3,f,c
  2502  001118  3234               	rrcf	___fttol@lval+2,f,c
  2503  00111A  3233               	rrcf	___fttol@lval+1,f,c
  2504  00111C  3232               	rrcf	___fttol@lval,f,c
  2505  00111E  3E36               	incfsz	___fttol@exp1,f,c
  2506  001120  D7F9               	goto	i2l1652
  2507  001122  D015               	goto	i2l1666
  2508  001124                     i2l1656:
  2509  001124  0E17               	movlw	23
  2510  001126  6436               	cpfsgt	___fttol@exp1,c
  2511  001128  D00F               	goto	i2l1664
  2512  00112A  0E00               	movlw	0
  2513  00112C  6E28               	movwf	?___fttol,c
  2514  00112E  0E00               	movlw	0
  2515  001130  6E29               	movwf	?___fttol+1,c
  2516  001132  0E00               	movlw	0
  2517  001134  6E2A               	movwf	?___fttol+2,c
  2518  001136  0E00               	movlw	0
  2519  001138  6E2B               	movwf	?___fttol+3,c
  2520  00113A  0012               	return	
  2521  00113C                     i2l1662:
  2522  00113C  90D8               	bcf	status,0,c
  2523  00113E  3632               	rlcf	___fttol@lval,f,c
  2524  001140  3633               	rlcf	___fttol@lval+1,f,c
  2525  001142  3634               	rlcf	___fttol@lval+2,f,c
  2526  001144  3635               	rlcf	___fttol@lval+3,f,c
  2527  001146  0636               	decf	___fttol@exp1,f,c
  2528  001148                     i2l1664:
  2529  001148  5036               	movf	___fttol@exp1,w,c
  2530  00114A  A4D8               	btfss	status,2,c
  2531  00114C  D7F7               	goto	i2l1662
  2532  00114E                     i2l1666:
  2533  00114E  5031               	movf	___fttol@sign1,w,c
  2534  001150  B4D8               	btfsc	status,2,c
  2535  001152  D008               	goto	i2l1670
  2536  001154  1E35               	comf	___fttol@lval+3,f,c
  2537  001156  1E34               	comf	___fttol@lval+2,f,c
  2538  001158  1E33               	comf	___fttol@lval+1,f,c
  2539  00115A  6C32               	negf	___fttol@lval,c
  2540  00115C  0E00               	movlw	0
  2541  00115E  2233               	addwfc	___fttol@lval+1,f,c
  2542  001160  2234               	addwfc	___fttol@lval+2,f,c
  2543  001162  2235               	addwfc	___fttol@lval+3,f,c
  2544  001164                     i2l1670:
  2545  001164  C032  F028         	movff	___fttol@lval,?___fttol
  2546  001168  C033  F029         	movff	___fttol@lval+1,?___fttol+1
  2547  00116C  C034  F02A         	movff	___fttol@lval+2,?___fttol+2
  2548  001170  C035  F02B         	movff	___fttol@lval+3,?___fttol+3
  2549  001174  0012               	return	
  2550  001176                     __end_of___fttol:
  2551                           	opt stack 0
  2552                           pclatu	equ	0xFFB
  2553                           pclath	equ	0xFFA
  2554                           tblptru	equ	0xFF8
  2555                           tblptrh	equ	0xFF7
  2556                           tblptrl	equ	0xFF6
  2557                           tablat	equ	0xFF5
  2558                           prodh	equ	0xFF4
  2559                           prodl	equ	0xFF3
  2560                           intcon	equ	0xFF2
  2561                           intcon2	equ	0xFF1
  2562                           postinc0	equ	0xFEE
  2563                           fsr0h	equ	0xFEA
  2564                           fsr0l	equ	0xFE9
  2565                           wreg	equ	0xFE8
  2566                           fsr1h	equ	0xFE2
  2567                           fsr1l	equ	0xFE1
  2568                           postinc2	equ	0xFDE
  2569                           postdec2	equ	0xFDD
  2570                           fsr2h	equ	0xFDA
  2571                           fsr2l	equ	0xFD9
  2572                           status	equ	0xFD8
  2573                           
  2574 ;; *************** function ___ftge *****************
  2575 ;; Defined at:
  2576 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  ff1             3    0[COMRAM] float 
  2579 ;;  ff2             3    3[COMRAM] float 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;		None
  2582 ;; Return value:  Size  Location     Type
  2583 ;;		None               void
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2591 ;;      Params:         6       0       0       0       0       0       0       0       0
  2592 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2593 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2594 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2595 ;;Total ram usage:        9 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_pow
  2601 ;;		_exp
  2602 ;;		_floor
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text12
  2607  001704                     __ptext12:
  2608                           	opt stack 0
  2609  001704                     ___ftge:
  2610                           	opt stack 23
  2611                           
  2612                           ;incstack = 0
  2613  001704  AE03               	btfss	___ftge@ff1+2,7,c
  2614  001706  D016               	goto	i2l1614
  2615  001708  C001  F007         	movff	___ftge@ff1,??___ftge
  2616  00170C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  2617  001710  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  2618  001714  1E07               	comf	??___ftge,f,c
  2619  001716  1E08               	comf	??___ftge+1,f,c
  2620  001718  1E09               	comf	??___ftge+2,f,c
  2621  00171A  2A07               	incf	??___ftge,f,c
  2622  00171C  0E00               	movlw	0
  2623  00171E  2208               	addwfc	??___ftge+1,f,c
  2624  001720  2209               	addwfc	??___ftge+2,f,c
  2625  001722  0E00               	movlw	0
  2626  001724  2407               	addwf	??___ftge,w,c
  2627  001726  6E01               	movwf	___ftge@ff1,c
  2628  001728  0E00               	movlw	0
  2629  00172A  2008               	addwfc	??___ftge+1,w,c
  2630  00172C  6E02               	movwf	___ftge@ff1+1,c
  2631  00172E  0E80               	movlw	128
  2632  001730  2009               	addwfc	??___ftge+2,w,c
  2633  001732  6E03               	movwf	___ftge@ff1+2,c
  2634  001734                     i2l1614:
  2635  001734  AE06               	btfss	___ftge@ff2+2,7,c
  2636  001736  D016               	goto	i2l1618
  2637  001738  C004  F007         	movff	___ftge@ff2,??___ftge
  2638  00173C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  2639  001740  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  2640  001744  1E07               	comf	??___ftge,f,c
  2641  001746  1E08               	comf	??___ftge+1,f,c
  2642  001748  1E09               	comf	??___ftge+2,f,c
  2643  00174A  2A07               	incf	??___ftge,f,c
  2644  00174C  0E00               	movlw	0
  2645  00174E  2208               	addwfc	??___ftge+1,f,c
  2646  001750  2209               	addwfc	??___ftge+2,f,c
  2647  001752  0E00               	movlw	0
  2648  001754  2407               	addwf	??___ftge,w,c
  2649  001756  6E04               	movwf	___ftge@ff2,c
  2650  001758  0E00               	movlw	0
  2651  00175A  2008               	addwfc	??___ftge+1,w,c
  2652  00175C  6E05               	movwf	___ftge@ff2+1,c
  2653  00175E  0E80               	movlw	128
  2654  001760  2009               	addwfc	??___ftge+2,w,c
  2655  001762  6E06               	movwf	___ftge@ff2+2,c
  2656  001764                     i2l1618:
  2657  001764  0E00               	movlw	0
  2658  001766  1A01               	xorwf	___ftge@ff1,f,c
  2659  001768  0E00               	movlw	0
  2660  00176A  1A02               	xorwf	___ftge@ff1+1,f,c
  2661  00176C  0E80               	movlw	128
  2662  00176E  1A03               	xorwf	___ftge@ff1+2,f,c
  2663  001770  0E00               	movlw	0
  2664  001772  1A04               	xorwf	___ftge@ff2,f,c
  2665  001774  0E00               	movlw	0
  2666  001776  1A05               	xorwf	___ftge@ff2+1,f,c
  2667  001778  0E80               	movlw	128
  2668  00177A  1A06               	xorwf	___ftge@ff2+2,f,c
  2669  00177C  5004               	movf	___ftge@ff2,w,c
  2670  00177E  5C01               	subwf	___ftge@ff1,w,c
  2671  001780  5005               	movf	___ftge@ff2+1,w,c
  2672  001782  5802               	subwfb	___ftge@ff1+1,w,c
  2673  001784  5006               	movf	___ftge@ff2+2,w,c
  2674  001786  5803               	subwfb	___ftge@ff1+2,w,c
  2675  001788  B0D8               	btfsc	status,0,c
  2676  00178A  D002               	goto	i2l1624
  2677  00178C  90D8               	bcf	status,0,c
  2678  00178E  0012               	return	
  2679  001790                     i2l1624:
  2680  001790  80D8               	bsf	status,0,c
  2681  001792  0012               	return	
  2682  001794                     __end_of___ftge:
  2683                           	opt stack 0
  2684                           pclatu	equ	0xFFB
  2685                           pclath	equ	0xFFA
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           prodh	equ	0xFF4
  2691                           prodl	equ	0xFF3
  2692                           intcon	equ	0xFF2
  2693                           intcon2	equ	0xFF1
  2694                           postinc0	equ	0xFEE
  2695                           fsr0h	equ	0xFEA
  2696                           fsr0l	equ	0xFE9
  2697                           wreg	equ	0xFE8
  2698                           fsr1h	equ	0xFE2
  2699                           fsr1l	equ	0xFE1
  2700                           postinc2	equ	0xFDE
  2701                           postdec2	equ	0xFDD
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function ___altoft *****************
  2707 ;; Defined at:
  2708 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\altoft.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  c               4   54[COMRAM] long 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  sign            1   63[COMRAM] unsigned char 
  2713 ;;  exp             1   62[COMRAM] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  3   54[COMRAM] float 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:         4       0       0       0       0       0       0       0       0
  2724 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2726 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:       10 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    1
  2730 ;; This function calls:
  2731 ;;		___ftpack
  2732 ;; This function is called by:
  2733 ;;		_floor
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text13
  2738  001894                     __ptext13:
  2739                           	opt stack 0
  2740  001894                     ___altoft:
  2741                           	opt stack 22
  2742                           
  2743                           ;incstack = 0
  2744  001894  0E00               	movlw	0
  2745  001896  6E40               	movwf	___altoft@sign,c
  2746  001898  0E8E               	movlw	142
  2747  00189A  6E3F               	movwf	___altoft@exp,c
  2748  00189C  AE3A               	btfss	___altoft@c+3,7,c
  2749  00189E  D011               	goto	i2l1486
  2750  0018A0  1E3A               	comf	___altoft@c+3,f,c
  2751  0018A2  1E39               	comf	___altoft@c+2,f,c
  2752  0018A4  1E38               	comf	___altoft@c+1,f,c
  2753  0018A6  6C37               	negf	___altoft@c,c
  2754  0018A8  0E00               	movlw	0
  2755  0018AA  2238               	addwfc	___altoft@c+1,f,c
  2756  0018AC  2239               	addwfc	___altoft@c+2,f,c
  2757  0018AE  223A               	addwfc	___altoft@c+3,f,c
  2758  0018B0  0E01               	movlw	1
  2759  0018B2  6E40               	movwf	___altoft@sign,c
  2760  0018B4  D006               	goto	i2l1486
  2761  0018B6                     i2l1484:
  2762  0018B6  90D8               	bcf	status,0,c
  2763  0018B8  323A               	rrcf	___altoft@c+3,f,c
  2764  0018BA  3239               	rrcf	___altoft@c+2,f,c
  2765  0018BC  3238               	rrcf	___altoft@c+1,f,c
  2766  0018BE  3237               	rrcf	___altoft@c,f,c
  2767  0018C0  2A3F               	incf	___altoft@exp,f,c
  2768  0018C2                     i2l1486:
  2769  0018C2  0E00               	movlw	0
  2770  0018C4  1437               	andwf	___altoft@c,w,c
  2771  0018C6  6E3B               	movwf	??___altoft& (0+255),c
  2772  0018C8  0E00               	movlw	0
  2773  0018CA  1438               	andwf	___altoft@c+1,w,c
  2774  0018CC  6E3C               	movwf	(??___altoft+1)& (0+255),c
  2775  0018CE  0E00               	movlw	0
  2776  0018D0  1439               	andwf	___altoft@c+2,w,c
  2777  0018D2  6E3D               	movwf	(??___altoft+2)& (0+255),c
  2778  0018D4  0EFF               	movlw	255
  2779  0018D6  143A               	andwf	___altoft@c+3,w,c
  2780  0018D8  6E3E               	movwf	(??___altoft+3)& (0+255),c
  2781  0018DA  503B               	movf	??___altoft,w,c
  2782  0018DC  103C               	iorwf	??___altoft+1,w,c
  2783  0018DE  103D               	iorwf	??___altoft+2,w,c
  2784  0018E0  103E               	iorwf	??___altoft+3,w,c
  2785  0018E2  A4D8               	btfss	status,2,c
  2786  0018E4  D7E8               	goto	i2l1484
  2787  0018E6  C037  F001         	movff	___altoft@c,___ftpack@arg
  2788  0018EA  C038  F002         	movff	___altoft@c+1,___ftpack@arg+1
  2789  0018EE  C039  F003         	movff	___altoft@c+2,___ftpack@arg+2
  2790  0018F2  C03F  F004         	movff	___altoft@exp,___ftpack@exp
  2791  0018F6  C040  F005         	movff	___altoft@sign,___ftpack@sign
  2792  0018FA  ECE3  F00A         	call	___ftpack	;wreg free
  2793  0018FE  C001  F037         	movff	?___ftpack,?___altoft
  2794  001902  C002  F038         	movff	?___ftpack+1,?___altoft+1
  2795  001906  C003  F039         	movff	?___ftpack+2,?___altoft+2
  2796  00190A  0012               	return	
  2797  00190C                     __end_of___altoft:
  2798                           	opt stack 0
  2799                           pclatu	equ	0xFFB
  2800                           pclath	equ	0xFFA
  2801                           tblptru	equ	0xFF8
  2802                           tblptrh	equ	0xFF7
  2803                           tblptrl	equ	0xFF6
  2804                           tablat	equ	0xFF5
  2805                           prodh	equ	0xFF4
  2806                           prodl	equ	0xFF3
  2807                           intcon	equ	0xFF2
  2808                           intcon2	equ	0xFF1
  2809                           postinc0	equ	0xFEE
  2810                           fsr0h	equ	0xFEA
  2811                           fsr0l	equ	0xFE9
  2812                           wreg	equ	0xFE8
  2813                           fsr1h	equ	0xFE2
  2814                           fsr1l	equ	0xFE1
  2815                           postinc2	equ	0xFDE
  2816                           postdec2	equ	0xFDD
  2817                           fsr2h	equ	0xFDA
  2818                           fsr2l	equ	0xFD9
  2819                           status	equ	0xFD8
  2820                           
  2821 ;; *************** function _eval_poly *****************
  2822 ;; Defined at:
  2823 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\evalpoly.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  x               3   39[COMRAM] float 
  2826 ;;  d               2   42[COMRAM] PTR const 
  2827 ;;		 -> log@coeff(27), exp@coeff(30), 
  2828 ;;  n               2   44[COMRAM] int 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  res             3   48[COMRAM] int 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  3   39[COMRAM] int 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2840 ;;      Params:         7       0       0       0       0       0       0       0       0
  2841 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2842 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2843 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2844 ;;Total ram usage:       12 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    2
  2847 ;; This function calls:
  2848 ;;		___ftadd
  2849 ;;		___ftmul
  2850 ;;		___wmul
  2851 ;; This function is called by:
  2852 ;;		_exp
  2853 ;;		_log
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text14
  2858  00142E                     __ptext14:
  2859                           	opt stack 0
  2860  00142E                     _eval_poly:
  2861                           	opt stack 22
  2862                           
  2863                           ;incstack = 0
  2864  00142E  C02D  F001         	movff	eval_poly@n,___wmul@multiplier
  2865  001432  C02E  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  2866  001436  0E00               	movlw	0
  2867  001438  6E04               	movwf	___wmul@multiplicand+1,c
  2868  00143A  0E03               	movlw	3
  2869  00143C  6E03               	movwf	___wmul@multiplicand,c
  2870  00143E  EC3D  F00D         	call	___wmul	;wreg free
  2871  001442  C02B  F02F         	movff	eval_poly@d,??_eval_poly
  2872  001446  C02C  F030         	movff	eval_poly@d+1,??_eval_poly+1
  2873  00144A  5001               	movf	?___wmul,w,c
  2874  00144C  262F               	addwf	??_eval_poly,f,c
  2875  00144E  5002               	movf	?___wmul+1,w,c
  2876  001450  2230               	addwfc	??_eval_poly+1,f,c
  2877  001452  C02F  FFF6         	movff	??_eval_poly,tblptrl
  2878  001456  C030  FFF7         	movff	??_eval_poly+1,tblptrh
  2879  00145A                     	if	0	;tblptru may be non-zero
  2880  00145A                     	endif
  2881  00145A                     	if	0	;tblptru may be non-zero
  2882  00145A                     	endif
  2883  00145A  0009               	tblrd		*+
  2884  00145C  CFF5 F031          	movff	tablat,eval_poly@res
  2885  001460  0009               	tblrd		*+
  2886  001462  CFF5 F032          	movff	tablat,eval_poly@res+1
  2887  001466  000A               	tblrd		*-
  2888  001468  CFF5 F033          	movff	tablat,eval_poly@res+2
  2889  00146C  D03E               	goto	i2l1792
  2890  00146E                     i2l1790:
  2891  00146E  C031  F010         	movff	eval_poly@res,___ftmul@f2
  2892  001472  C032  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  2893  001476  C033  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  2894  00147A  C028  F00D         	movff	eval_poly@x,___ftmul@f1
  2895  00147E  C029  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  2896  001482  C02A  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  2897  001486  ECBB  F008         	call	___ftmul	;wreg free
  2898  00148A  C00D  F01C         	movff	?___ftmul,___ftadd@f1
  2899  00148E  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
  2900  001492  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
  2901  001496  0E00               	movlw	0
  2902  001498  6E04               	movwf	___wmul@multiplicand+1,c
  2903  00149A  0E03               	movlw	3
  2904  00149C  6E03               	movwf	___wmul@multiplicand,c
  2905  00149E  062D               	decf	eval_poly@n,f,c
  2906  0014A0  A0D8               	btfss	status,0,c
  2907  0014A2  062E               	decf	eval_poly@n+1,f,c
  2908  0014A4  C02D  F001         	movff	eval_poly@n,___wmul@multiplier
  2909  0014A8  C02E  F002         	movff	eval_poly@n+1,___wmul@multiplier+1
  2910  0014AC  EC3D  F00D         	call	___wmul	;wreg free
  2911  0014B0  C02B  F02F         	movff	eval_poly@d,??_eval_poly
  2912  0014B4  C02C  F030         	movff	eval_poly@d+1,??_eval_poly+1
  2913  0014B8  5001               	movf	?___wmul,w,c
  2914  0014BA  262F               	addwf	??_eval_poly,f,c
  2915  0014BC  5002               	movf	?___wmul+1,w,c
  2916  0014BE  2230               	addwfc	??_eval_poly+1,f,c
  2917  0014C0  C02F  FFF6         	movff	??_eval_poly,tblptrl
  2918  0014C4  C030  FFF7         	movff	??_eval_poly+1,tblptrh
  2919  0014C8                     	if	0	;tblptru may be non-zero
  2920  0014C8                     	endif
  2921  0014C8                     	if	0	;tblptru may be non-zero
  2922  0014C8                     	endif
  2923  0014C8  0009               	tblrd		*+
  2924  0014CA  CFF5 F01F          	movff	tablat,___ftadd@f2
  2925  0014CE  0009               	tblrd		*+
  2926  0014D0  CFF5 F020          	movff	tablat,___ftadd@f2+1
  2927  0014D4  000A               	tblrd		*-
  2928  0014D6  CFF5 F021          	movff	tablat,___ftadd@f2+2
  2929  0014DA  EC1C  F006         	call	___ftadd	;wreg free
  2930  0014DE  C01C  F031         	movff	?___ftadd,eval_poly@res
  2931  0014E2  C01D  F032         	movff	?___ftadd+1,eval_poly@res+1
  2932  0014E6  C01E  F033         	movff	?___ftadd+2,eval_poly@res+2
  2933  0014EA                     i2l1792:
  2934  0014EA  502D               	movf	eval_poly@n,w,c
  2935  0014EC  102E               	iorwf	eval_poly@n+1,w,c
  2936  0014EE  A4D8               	btfss	status,2,c
  2937  0014F0  D7BE               	goto	i2l1790
  2938  0014F2  C031  F028         	movff	eval_poly@res,?_eval_poly
  2939  0014F6  C032  F029         	movff	eval_poly@res+1,?_eval_poly+1
  2940  0014FA  C033  F02A         	movff	eval_poly@res+2,?_eval_poly+2
  2941  0014FE  0012               	return		;funcret
  2942  001500                     __end_of_eval_poly:
  2943                           	opt stack 0
  2944                           pclatu	equ	0xFFB
  2945                           pclath	equ	0xFFA
  2946                           tblptru	equ	0xFF8
  2947                           tblptrh	equ	0xFF7
  2948                           tblptrl	equ	0xFF6
  2949                           tablat	equ	0xFF5
  2950                           prodh	equ	0xFF4
  2951                           prodl	equ	0xFF3
  2952                           intcon	equ	0xFF2
  2953                           intcon2	equ	0xFF1
  2954                           postinc0	equ	0xFEE
  2955                           fsr0h	equ	0xFEA
  2956                           fsr0l	equ	0xFE9
  2957                           wreg	equ	0xFE8
  2958                           fsr1h	equ	0xFE2
  2959                           fsr1l	equ	0xFE1
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function ___wmul *****************
  2967 ;; Defined at:
  2968 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  multiplier      2    0[COMRAM] unsigned int 
  2971 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  product         2    4[COMRAM] unsigned int 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  2    0[COMRAM] unsigned int 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, prodl, prodh
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         4       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2986 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:        6 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_eval_poly
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text15
  2997  001A7A                     __ptext15:
  2998                           	opt stack 0
  2999  001A7A                     ___wmul:
  3000                           	opt stack 23
  3001                           
  3002                           ;incstack = 0
  3003  001A7A  5001               	movf	___wmul@multiplier,w,c
  3004  001A7C  0203               	mulwf	___wmul@multiplicand,c
  3005  001A7E  CFF3 F005          	movff	prodl,___wmul@product
  3006  001A82  CFF4 F006          	movff	prodh,___wmul@product+1
  3007  001A86  5001               	movf	___wmul@multiplier,w,c
  3008  001A88  0204               	mulwf	___wmul@multiplicand+1,c
  3009  001A8A  50F3               	movf	prodl,w,c
  3010  001A8C  2606               	addwf	___wmul@product+1,f,c
  3011  001A8E  5002               	movf	___wmul@multiplier+1,w,c
  3012  001A90  0203               	mulwf	___wmul@multiplicand,c
  3013  001A92  50F3               	movf	prodl,w,c
  3014  001A94  2606               	addwf	___wmul@product+1,f,c
  3015  001A96  C005  F001         	movff	___wmul@product,?___wmul
  3016  001A9A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3017  001A9E  0012               	return	
  3018  001AA0                     __end_of___wmul:
  3019                           	opt stack 0
  3020                           pclatu	equ	0xFFB
  3021                           pclath	equ	0xFFA
  3022                           tblptru	equ	0xFF8
  3023                           tblptrh	equ	0xFF7
  3024                           tblptrl	equ	0xFF6
  3025                           tablat	equ	0xFF5
  3026                           prodh	equ	0xFF4
  3027                           prodl	equ	0xFF3
  3028                           intcon	equ	0xFF2
  3029                           intcon2	equ	0xFF1
  3030                           postinc0	equ	0xFEE
  3031                           fsr0h	equ	0xFEA
  3032                           fsr0l	equ	0xFE9
  3033                           wreg	equ	0xFE8
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           fsr2h	equ	0xFDA
  3039                           fsr2l	equ	0xFD9
  3040                           status	equ	0xFD8
  3041                           
  3042 ;; *************** function ___ftmul *****************
  3043 ;; Defined at:
  3044 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  f1              3   12[COMRAM] float 
  3047 ;;  f2              3   15[COMRAM] float 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3050 ;;  sign            1   26[COMRAM] unsigned char 
  3051 ;;  cntr            1   25[COMRAM] unsigned char 
  3052 ;;  exp             1   21[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  3   12[COMRAM] float 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3062 ;;      Params:         6       0       0       0       0       0       0       0       0
  3063 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3064 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3065 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3066 ;;Total ram usage:       15 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    1
  3069 ;; This function calls:
  3070 ;;		___ftpack
  3071 ;; This function is called by:
  3072 ;;		_dectobin
  3073 ;;		_pow
  3074 ;;		_exp
  3075 ;;		_log
  3076 ;;		_eval_poly
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text16
  3081  001176                     __ptext16:
  3082                           	opt stack 0
  3083  001176                     ___ftmul:
  3084                           	opt stack 22
  3085                           
  3086                           ;incstack = 0
  3087  001176  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3088  00117A  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3089  00117C  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3090  00117E  340E               	rlcf	___ftmul@f1+1,w,c
  3091  001180  3613               	rlcf	??___ftmul& (0+255),f,c
  3092  001182  E301               	bnc	u130_41
  3093  001184  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3094  001186                     u130_41:
  3095  001186  5013               	movf	??___ftmul,w,c
  3096  001188  6E16               	movwf	___ftmul@exp,c
  3097  00118A  5016               	movf	___ftmul@exp,w,c
  3098  00118C  A4D8               	btfss	status,2,c
  3099  00118E  D007               	goto	i2l1568
  3100  001190  0E00               	movlw	0
  3101  001192  6E0D               	movwf	?___ftmul,c
  3102  001194  0E00               	movlw	0
  3103  001196  6E0E               	movwf	?___ftmul+1,c
  3104  001198  0E00               	movlw	0
  3105  00119A  6E0F               	movwf	?___ftmul+2,c
  3106  00119C  0012               	return	
  3107  00119E                     i2l1568:
  3108  00119E  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3109  0011A2  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3110  0011A4  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3111  0011A6  3411               	rlcf	___ftmul@f2+1,w,c
  3112  0011A8  3613               	rlcf	??___ftmul& (0+255),f,c
  3113  0011AA  E301               	bnc	u132_41
  3114  0011AC  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3115  0011AE                     u132_41:
  3116  0011AE  5013               	movf	??___ftmul,w,c
  3117  0011B0  6E1B               	movwf	___ftmul@sign,c
  3118  0011B2  501B               	movf	___ftmul@sign,w,c
  3119  0011B4  A4D8               	btfss	status,2,c
  3120  0011B6  D007               	goto	i2l1574
  3121  0011B8  0E00               	movlw	0
  3122  0011BA  6E0D               	movwf	?___ftmul,c
  3123  0011BC  0E00               	movlw	0
  3124  0011BE  6E0E               	movwf	?___ftmul+1,c
  3125  0011C0  0E00               	movlw	0
  3126  0011C2  6E0F               	movwf	?___ftmul+2,c
  3127  0011C4  0012               	return	
  3128  0011C6                     i2l1574:
  3129  0011C6  501B               	movf	___ftmul@sign,w,c
  3130  0011C8  0F7B               	addlw	123
  3131  0011CA  2616               	addwf	___ftmul@exp,f,c
  3132  0011CC  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3133  0011D0  5012               	movf	___ftmul@f2+2,w,c
  3134  0011D2  1A1B               	xorwf	___ftmul@sign,f,c
  3135  0011D4  0E80               	movlw	128
  3136  0011D6  161B               	andwf	___ftmul@sign,f,c
  3137  0011D8  8E0E               	bsf	___ftmul@f1+1,7,c
  3138  0011DA  8E11               	bsf	___ftmul@f2+1,7,c
  3139  0011DC  0EFF               	movlw	255
  3140  0011DE  1610               	andwf	___ftmul@f2,f,c
  3141  0011E0  0EFF               	movlw	255
  3142  0011E2  1611               	andwf	___ftmul@f2+1,f,c
  3143  0011E4  0E00               	movlw	0
  3144  0011E6  1612               	andwf	___ftmul@f2+2,f,c
  3145  0011E8  0E00               	movlw	0
  3146  0011EA  6E17               	movwf	___ftmul@f3_as_product,c
  3147  0011EC  0E00               	movlw	0
  3148  0011EE  6E18               	movwf	___ftmul@f3_as_product+1,c
  3149  0011F0  0E00               	movlw	0
  3150  0011F2  6E19               	movwf	___ftmul@f3_as_product+2,c
  3151  0011F4  0E07               	movlw	7
  3152  0011F6  6E1A               	movwf	___ftmul@cntr,c
  3153  0011F8                     i2l1588:
  3154  0011F8  A00D               	btfss	___ftmul@f1,0,c
  3155  0011FA  D006               	goto	i2l1592
  3156  0011FC  5010               	movf	___ftmul@f2,w,c
  3157  0011FE  2617               	addwf	___ftmul@f3_as_product,f,c
  3158  001200  5011               	movf	___ftmul@f2+1,w,c
  3159  001202  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3160  001204  5012               	movf	___ftmul@f2+2,w,c
  3161  001206  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3162  001208                     i2l1592:
  3163  001208  90D8               	bcf	status,0,c
  3164  00120A  320F               	rrcf	___ftmul@f1+2,f,c
  3165  00120C  320E               	rrcf	___ftmul@f1+1,f,c
  3166  00120E  320D               	rrcf	___ftmul@f1,f,c
  3167  001210  90D8               	bcf	status,0,c
  3168  001212  3610               	rlcf	___ftmul@f2,f,c
  3169  001214  3611               	rlcf	___ftmul@f2+1,f,c
  3170  001216  3612               	rlcf	___ftmul@f2+2,f,c
  3171  001218  2E1A               	decfsz	___ftmul@cntr,f,c
  3172  00121A  D7EE               	goto	i2l1588
  3173  00121C  0E09               	movlw	9
  3174  00121E  6E1A               	movwf	___ftmul@cntr,c
  3175  001220                     i2l1598:
  3176  001220  A00D               	btfss	___ftmul@f1,0,c
  3177  001222  D006               	goto	i2l1602
  3178  001224  5010               	movf	___ftmul@f2,w,c
  3179  001226  2617               	addwf	___ftmul@f3_as_product,f,c
  3180  001228  5011               	movf	___ftmul@f2+1,w,c
  3181  00122A  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3182  00122C  5012               	movf	___ftmul@f2+2,w,c
  3183  00122E  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3184  001230                     i2l1602:
  3185  001230  90D8               	bcf	status,0,c
  3186  001232  320F               	rrcf	___ftmul@f1+2,f,c
  3187  001234  320E               	rrcf	___ftmul@f1+1,f,c
  3188  001236  320D               	rrcf	___ftmul@f1,f,c
  3189  001238  90D8               	bcf	status,0,c
  3190  00123A  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3191  00123C  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3192  00123E  3217               	rrcf	___ftmul@f3_as_product,f,c
  3193  001240  2E1A               	decfsz	___ftmul@cntr,f,c
  3194  001242  D7EE               	goto	i2l1598
  3195  001244  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3196  001248  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3197  00124C  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3198  001250  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3199  001254  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3200  001258  ECE3  F00A         	call	___ftpack	;wreg free
  3201  00125C  C001  F00D         	movff	?___ftpack,?___ftmul
  3202  001260  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3203  001264  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3204  001268  0012               	return	
  3205  00126A                     __end_of___ftmul:
  3206                           	opt stack 0
  3207                           pclatu	equ	0xFFB
  3208                           pclath	equ	0xFFA
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           intcon2	equ	0xFF1
  3217                           postinc0	equ	0xFEE
  3218                           fsr0h	equ	0xFEA
  3219                           fsr0l	equ	0xFE9
  3220                           wreg	equ	0xFE8
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           postinc2	equ	0xFDE
  3224                           postdec2	equ	0xFDD
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function ___ftsub *****************
  3230 ;; Defined at:
  3231 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftsub.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  f1              3   39[COMRAM] float 
  3234 ;;  f2              3   42[COMRAM] float 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;		None
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  3   39[COMRAM] float 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3246 ;;      Params:         6       0       0       0       0       0       0       0       0
  3247 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3249 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3250 ;;Total ram usage:        6 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    2
  3253 ;; This function calls:
  3254 ;;		___ftadd
  3255 ;; This function is called by:
  3256 ;;		_exp
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text17
  3261  0019D6                     __ptext17:
  3262                           	opt stack 0
  3263  0019D6                     ___ftsub:
  3264                           	opt stack 22
  3265                           
  3266                           ;incstack = 0
  3267  0019D6  502B               	movf	___ftsub@f2,w,c
  3268  0019D8  102C               	iorwf	___ftsub@f2+1,w,c
  3269  0019DA  102D               	iorwf	___ftsub@f2+2,w,c
  3270  0019DC  B4D8               	btfsc	status,2,c
  3271  0019DE  D006               	goto	i2l1744
  3272  0019E0  0E00               	movlw	0
  3273  0019E2  1A2B               	xorwf	___ftsub@f2,f,c
  3274  0019E4  0E00               	movlw	0
  3275  0019E6  1A2C               	xorwf	___ftsub@f2+1,f,c
  3276  0019E8  0E80               	movlw	128
  3277  0019EA  1A2D               	xorwf	___ftsub@f2+2,f,c
  3278  0019EC                     i2l1744:
  3279  0019EC  C028  F01C         	movff	___ftsub@f1,___ftadd@f1
  3280  0019F0  C029  F01D         	movff	___ftsub@f1+1,___ftadd@f1+1
  3281  0019F4  C02A  F01E         	movff	___ftsub@f1+2,___ftadd@f1+2
  3282  0019F8  C02B  F01F         	movff	___ftsub@f2,___ftadd@f2
  3283  0019FC  C02C  F020         	movff	___ftsub@f2+1,___ftadd@f2+1
  3284  001A00  C02D  F021         	movff	___ftsub@f2+2,___ftadd@f2+2
  3285  001A04  EC1C  F006         	call	___ftadd	;wreg free
  3286  001A08  C01C  F028         	movff	?___ftadd,?___ftsub
  3287  001A0C  C01D  F029         	movff	?___ftadd+1,?___ftsub+1
  3288  001A10  C01E  F02A         	movff	?___ftadd+2,?___ftsub+2
  3289  001A14  0012               	return	
  3290  001A16                     __end_of___ftsub:
  3291                           	opt stack 0
  3292                           pclatu	equ	0xFFB
  3293                           pclath	equ	0xFFA
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           prodh	equ	0xFF4
  3299                           prodl	equ	0xFF3
  3300                           intcon	equ	0xFF2
  3301                           intcon2	equ	0xFF1
  3302                           postinc0	equ	0xFEE
  3303                           fsr0h	equ	0xFEA
  3304                           fsr0l	equ	0xFE9
  3305                           wreg	equ	0xFE8
  3306                           fsr1h	equ	0xFE2
  3307                           fsr1l	equ	0xFE1
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function ___ftadd *****************
  3315 ;; Defined at:
  3316 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  f1              3   27[COMRAM] float 
  3319 ;;  f2              3   30[COMRAM] float 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  exp1            1   38[COMRAM] unsigned char 
  3322 ;;  exp2            1   37[COMRAM] unsigned char 
  3323 ;;  sign            1   36[COMRAM] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  3   27[COMRAM] float 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0, cstack
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3333 ;;      Params:         6       0       0       0       0       0       0       0       0
  3334 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3335 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3336 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3337 ;;Total ram usage:       12 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    1
  3340 ;; This function calls:
  3341 ;;		___ftpack
  3342 ;; This function is called by:
  3343 ;;		_dectobin
  3344 ;;		___ftsub
  3345 ;;		_floor
  3346 ;;		_log
  3347 ;;		_eval_poly
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text18
  3352  000C38                     __ptext18:
  3353                           	opt stack 0
  3354  000C38                     ___ftadd:
  3355                           	opt stack 22
  3356                           
  3357                           ;incstack = 0
  3358  000C38  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  3359  000C3C  6A23               	clrf	(??___ftadd+1)& (0+255),c
  3360  000C3E  6A24               	clrf	(??___ftadd+2)& (0+255),c
  3361  000C40  341D               	rlcf	___ftadd@f1+1,w,c
  3362  000C42  3622               	rlcf	??___ftadd& (0+255),f,c
  3363  000C44  E301               	bnc	u109_41
  3364  000C46  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  3365  000C48                     u109_41:
  3366  000C48  5022               	movf	??___ftadd,w,c
  3367  000C4A  6E27               	movwf	___ftadd@exp1,c
  3368  000C4C  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  3369  000C50  6A23               	clrf	(??___ftadd+1)& (0+255),c
  3370  000C52  6A24               	clrf	(??___ftadd+2)& (0+255),c
  3371  000C54  3420               	rlcf	___ftadd@f2+1,w,c
  3372  000C56  3622               	rlcf	??___ftadd& (0+255),f,c
  3373  000C58  E301               	bnc	u110_41
  3374  000C5A  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  3375  000C5C                     u110_41:
  3376  000C5C  5022               	movf	??___ftadd,w,c
  3377  000C5E  6E26               	movwf	___ftadd@exp2,c
  3378  000C60  5027               	movf	___ftadd@exp1,w,c
  3379  000C62  B4D8               	btfsc	status,2,c
  3380  000C64  D00B               	goto	i2l315
  3381  000C66  5026               	movf	___ftadd@exp2,w,c
  3382  000C68  5C27               	subwf	___ftadd@exp1,w,c
  3383  000C6A  B0D8               	btfsc	status,0,c
  3384  000C6C  D00E               	goto	i2l1500
  3385  000C6E  5027               	movf	___ftadd@exp1,w,c
  3386  000C70  0800               	sublw	0
  3387  000C72  2426               	addwf	___ftadd@exp2,w,c
  3388  000C74  6E22               	movwf	??___ftadd& (0+255),c
  3389  000C76  0E18               	movlw	24
  3390  000C78  6422               	cpfsgt	??___ftadd,c
  3391  000C7A  D007               	goto	i2l1500
  3392  000C7C                     i2l315:
  3393  000C7C  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  3394  000C80  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  3395  000C84  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  3396  000C88  0012               	return	
  3397  000C8A                     i2l1500:
  3398  000C8A  5026               	movf	___ftadd@exp2,w,c
  3399  000C8C  B4D8               	btfsc	status,2,c
  3400  000C8E  D00B               	goto	i2l319
  3401  000C90  5027               	movf	___ftadd@exp1,w,c
  3402  000C92  5C26               	subwf	___ftadd@exp2,w,c
  3403  000C94  B0D8               	btfsc	status,0,c
  3404  000C96  D00E               	goto	i2l1506
  3405  000C98  5026               	movf	___ftadd@exp2,w,c
  3406  000C9A  0800               	sublw	0
  3407  000C9C  2427               	addwf	___ftadd@exp1,w,c
  3408  000C9E  6E22               	movwf	??___ftadd& (0+255),c
  3409  000CA0  0E18               	movlw	24
  3410  000CA2  6422               	cpfsgt	??___ftadd,c
  3411  000CA4  D007               	goto	i2l1506
  3412  000CA6                     i2l319:
  3413  000CA6  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  3414  000CAA  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  3415  000CAE  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  3416  000CB2  0012               	return	
  3417  000CB4                     i2l1506:
  3418  000CB4  0E06               	movlw	6
  3419  000CB6  6E25               	movwf	___ftadd@sign,c
  3420  000CB8  BE1E               	btfsc	___ftadd@f1+2,7,c
  3421  000CBA  8E25               	bsf	___ftadd@sign,7,c
  3422  000CBC  BE21               	btfsc	___ftadd@f2+2,7,c
  3423  000CBE  8C25               	bsf	___ftadd@sign,6,c
  3424  000CC0  8E1D               	bsf	___ftadd@f1+1,7,c
  3425  000CC2  0EFF               	movlw	255
  3426  000CC4  161C               	andwf	___ftadd@f1,f,c
  3427  000CC6  0EFF               	movlw	255
  3428  000CC8  161D               	andwf	___ftadd@f1+1,f,c
  3429  000CCA  0E00               	movlw	0
  3430  000CCC  161E               	andwf	___ftadd@f1+2,f,c
  3431  000CCE  8E20               	bsf	___ftadd@f2+1,7,c
  3432  000CD0  0EFF               	movlw	255
  3433  000CD2  161F               	andwf	___ftadd@f2,f,c
  3434  000CD4  0EFF               	movlw	255
  3435  000CD6  1620               	andwf	___ftadd@f2+1,f,c
  3436  000CD8  0E00               	movlw	0
  3437  000CDA  1621               	andwf	___ftadd@f2+2,f,c
  3438  000CDC  5026               	movf	___ftadd@exp2,w,c
  3439  000CDE  5C27               	subwf	___ftadd@exp1,w,c
  3440  000CE0  B0D8               	btfsc	status,0,c
  3441  000CE2  D01B               	goto	i2l1532
  3442  000CE4                     i2l1522:
  3443  000CE4  90D8               	bcf	status,0,c
  3444  000CE6  361F               	rlcf	___ftadd@f2,f,c
  3445  000CE8  3620               	rlcf	___ftadd@f2+1,f,c
  3446  000CEA  3621               	rlcf	___ftadd@f2+2,f,c
  3447  000CEC  0626               	decf	___ftadd@exp2,f,c
  3448  000CEE  5027               	movf	___ftadd@exp1,w,c
  3449  000CF0  1826               	xorwf	___ftadd@exp2,w,c
  3450  000CF2  B4D8               	btfsc	status,2,c
  3451  000CF4  D00D               	goto	i2l1530
  3452  000CF6  0625               	decf	___ftadd@sign,f,c
  3453  000CF8  C025  F022         	movff	___ftadd@sign,??___ftadd
  3454  000CFC  0E07               	movlw	7
  3455  000CFE  1622               	andwf	??___ftadd,f,c
  3456  000D00  B4D8               	btfsc	status,2,c
  3457  000D02  D006               	goto	i2l1530
  3458  000D04  D7EF               	goto	i2l1522
  3459  000D06                     i2l1528:
  3460  000D06  90D8               	bcf	status,0,c
  3461  000D08  321E               	rrcf	___ftadd@f1+2,f,c
  3462  000D0A  321D               	rrcf	___ftadd@f1+1,f,c
  3463  000D0C  321C               	rrcf	___ftadd@f1,f,c
  3464  000D0E  2A27               	incf	___ftadd@exp1,f,c
  3465  000D10                     i2l1530:
  3466  000D10  5026               	movf	___ftadd@exp2,w,c
  3467  000D12  1827               	xorwf	___ftadd@exp1,w,c
  3468  000D14  B4D8               	btfsc	status,2,c
  3469  000D16  D01F               	goto	i2l330
  3470  000D18  D7F6               	goto	i2l1528
  3471  000D1A                     i2l1532:
  3472  000D1A  5027               	movf	___ftadd@exp1,w,c
  3473  000D1C  5C26               	subwf	___ftadd@exp2,w,c
  3474  000D1E  B0D8               	btfsc	status,0,c
  3475  000D20  D01A               	goto	i2l330
  3476  000D22                     i2l1534:
  3477  000D22  90D8               	bcf	status,0,c
  3478  000D24  361C               	rlcf	___ftadd@f1,f,c
  3479  000D26  361D               	rlcf	___ftadd@f1+1,f,c
  3480  000D28  361E               	rlcf	___ftadd@f1+2,f,c
  3481  000D2A  0627               	decf	___ftadd@exp1,f,c
  3482  000D2C  5027               	movf	___ftadd@exp1,w,c
  3483  000D2E  1826               	xorwf	___ftadd@exp2,w,c
  3484  000D30  B4D8               	btfsc	status,2,c
  3485  000D32  D00D               	goto	i2l1542
  3486  000D34  0625               	decf	___ftadd@sign,f,c
  3487  000D36  C025  F022         	movff	___ftadd@sign,??___ftadd
  3488  000D3A  0E07               	movlw	7
  3489  000D3C  1622               	andwf	??___ftadd,f,c
  3490  000D3E  B4D8               	btfsc	status,2,c
  3491  000D40  D006               	goto	i2l1542
  3492  000D42  D7EF               	goto	i2l1534
  3493  000D44                     i2l1540:
  3494  000D44  90D8               	bcf	status,0,c
  3495  000D46  3221               	rrcf	___ftadd@f2+2,f,c
  3496  000D48  3220               	rrcf	___ftadd@f2+1,f,c
  3497  000D4A  321F               	rrcf	___ftadd@f2,f,c
  3498  000D4C  2A26               	incf	___ftadd@exp2,f,c
  3499  000D4E                     i2l1542:
  3500  000D4E  5026               	movf	___ftadd@exp2,w,c
  3501  000D50  1827               	xorwf	___ftadd@exp1,w,c
  3502  000D52  A4D8               	btfss	status,2,c
  3503  000D54  D7F7               	goto	i2l1540
  3504  000D56                     i2l330:
  3505  000D56  AE25               	btfss	___ftadd@sign,7,c
  3506  000D58  D00C               	goto	i2l339
  3507  000D5A  0EFF               	movlw	255
  3508  000D5C  1A1C               	xorwf	___ftadd@f1,f,c
  3509  000D5E  0EFF               	movlw	255
  3510  000D60  1A1D               	xorwf	___ftadd@f1+1,f,c
  3511  000D62  0EFF               	movlw	255
  3512  000D64  1A1E               	xorwf	___ftadd@f1+2,f,c
  3513  000D66  0E01               	movlw	1
  3514  000D68  261C               	addwf	___ftadd@f1,f,c
  3515  000D6A  0E00               	movlw	0
  3516  000D6C  221D               	addwfc	___ftadd@f1+1,f,c
  3517  000D6E  0E00               	movlw	0
  3518  000D70  221E               	addwfc	___ftadd@f1+2,f,c
  3519  000D72                     i2l339:
  3520  000D72  AC25               	btfss	___ftadd@sign,6,c
  3521  000D74  D00C               	goto	i2l1548
  3522  000D76  0EFF               	movlw	255
  3523  000D78  1A1F               	xorwf	___ftadd@f2,f,c
  3524  000D7A  0EFF               	movlw	255
  3525  000D7C  1A20               	xorwf	___ftadd@f2+1,f,c
  3526  000D7E  0EFF               	movlw	255
  3527  000D80  1A21               	xorwf	___ftadd@f2+2,f,c
  3528  000D82  0E01               	movlw	1
  3529  000D84  261F               	addwf	___ftadd@f2,f,c
  3530  000D86  0E00               	movlw	0
  3531  000D88  2220               	addwfc	___ftadd@f2+1,f,c
  3532  000D8A  0E00               	movlw	0
  3533  000D8C  2221               	addwfc	___ftadd@f2+2,f,c
  3534  000D8E                     i2l1548:
  3535  000D8E  0E00               	movlw	0
  3536  000D90  6E25               	movwf	___ftadd@sign,c
  3537  000D92  501C               	movf	___ftadd@f1,w,c
  3538  000D94  261F               	addwf	___ftadd@f2,f,c
  3539  000D96  501D               	movf	___ftadd@f1+1,w,c
  3540  000D98  2220               	addwfc	___ftadd@f2+1,f,c
  3541  000D9A  501E               	movf	___ftadd@f1+2,w,c
  3542  000D9C  2221               	addwfc	___ftadd@f2+2,f,c
  3543  000D9E  AE21               	btfss	___ftadd@f2+2,7,c
  3544  000DA0  D00E               	goto	i2l1558
  3545  000DA2  0EFF               	movlw	255
  3546  000DA4  1A1F               	xorwf	___ftadd@f2,f,c
  3547  000DA6  0EFF               	movlw	255
  3548  000DA8  1A20               	xorwf	___ftadd@f2+1,f,c
  3549  000DAA  0EFF               	movlw	255
  3550  000DAC  1A21               	xorwf	___ftadd@f2+2,f,c
  3551  000DAE  0E01               	movlw	1
  3552  000DB0  261F               	addwf	___ftadd@f2,f,c
  3553  000DB2  0E00               	movlw	0
  3554  000DB4  2220               	addwfc	___ftadd@f2+1,f,c
  3555  000DB6  0E00               	movlw	0
  3556  000DB8  2221               	addwfc	___ftadd@f2+2,f,c
  3557  000DBA  0E01               	movlw	1
  3558  000DBC  6E25               	movwf	___ftadd@sign,c
  3559  000DBE                     i2l1558:
  3560  000DBE  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  3561  000DC2  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  3562  000DC6  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  3563  000DCA  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  3564  000DCE  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  3565  000DD2  ECE3  F00A         	call	___ftpack	;wreg free
  3566  000DD6  C001  F01C         	movff	?___ftpack,?___ftadd
  3567  000DDA  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  3568  000DDE  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  3569  000DE2  0012               	return	
  3570  000DE4                     __end_of___ftadd:
  3571                           	opt stack 0
  3572                           pclatu	equ	0xFFB
  3573                           pclath	equ	0xFFA
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           intcon	equ	0xFF2
  3581                           intcon2	equ	0xFF1
  3582                           postinc0	equ	0xFEE
  3583                           fsr0h	equ	0xFEA
  3584                           fsr0l	equ	0xFE9
  3585                           wreg	equ	0xFE8
  3586                           fsr1h	equ	0xFE2
  3587                           fsr1l	equ	0xFE1
  3588                           postinc2	equ	0xFDE
  3589                           postdec2	equ	0xFDD
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function ___ftneg *****************
  3595 ;; Defined at:
  3596 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  f1              3    0[COMRAM] float 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  3    0[COMRAM] float 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         3       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3613 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        3 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_pow
  3620 ;;		_exp
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text19
  3625  001AA0                     __ptext19:
  3626                           	opt stack 0
  3627  001AA0                     ___ftneg:
  3628                           	opt stack 24
  3629                           
  3630                           ;incstack = 0
  3631  001AA0  5001               	movf	___ftneg@f1,w,c
  3632  001AA2  1002               	iorwf	___ftneg@f1+1,w,c
  3633  001AA4  1003               	iorwf	___ftneg@f1+2,w,c
  3634  001AA6  B4D8               	btfsc	status,2,c
  3635  001AA8  D006               	goto	i2l372
  3636  001AAA  0E00               	movlw	0
  3637  001AAC  1A01               	xorwf	___ftneg@f1,f,c
  3638  001AAE  0E00               	movlw	0
  3639  001AB0  1A02               	xorwf	___ftneg@f1+1,f,c
  3640  001AB2  0E80               	movlw	128
  3641  001AB4  1A03               	xorwf	___ftneg@f1+2,f,c
  3642  001AB6                     i2l372:
  3643  001AB6  C001  F001         	movff	___ftneg@f1,?___ftneg
  3644  001ABA  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  3645  001ABE  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  3646  001AC2  0012               	return		;funcret
  3647  001AC4                     __end_of___ftneg:
  3648                           	opt stack 0
  3649                           pclatu	equ	0xFFB
  3650                           pclath	equ	0xFFA
  3651                           tblptru	equ	0xFF8
  3652                           tblptrh	equ	0xFF7
  3653                           tblptrl	equ	0xFF6
  3654                           tablat	equ	0xFF5
  3655                           prodh	equ	0xFF4
  3656                           prodl	equ	0xFF3
  3657                           intcon	equ	0xFF2
  3658                           intcon2	equ	0xFF1
  3659                           postinc0	equ	0xFEE
  3660                           fsr0h	equ	0xFEA
  3661                           fsr0l	equ	0xFE9
  3662                           wreg	equ	0xFE8
  3663                           fsr1h	equ	0xFE2
  3664                           fsr1l	equ	0xFE1
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function ___ftdiv *****************
  3672 ;; Defined at:
  3673 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  f1              3    8[COMRAM] float 
  3676 ;;  f2              3   11[COMRAM] float 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  f3              3   18[COMRAM] float 
  3679 ;;  sign            1   22[COMRAM] unsigned char 
  3680 ;;  exp             1   21[COMRAM] unsigned char 
  3681 ;;  cntr            1   17[COMRAM] unsigned char 
  3682 ;; Return value:  Size  Location     Type
  3683 ;;                  3    8[COMRAM] float 
  3684 ;; Registers used:
  3685 ;;		wreg, status,2, status,0, cstack
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3691 ;;      Params:         6       0       0       0       0       0       0       0       0
  3692 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3693 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3694 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3695 ;;Total ram usage:       15 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    1
  3698 ;; This function calls:
  3699 ;;		___ftpack
  3700 ;; This function is called by:
  3701 ;;		_exp
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text20
  3706  00126A                     __ptext20:
  3707                           	opt stack 0
  3708  00126A                     ___ftdiv:
  3709                           	opt stack 23
  3710                           
  3711                           ;incstack = 0
  3712  00126A  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  3713  00126E  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  3714  001270  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  3715  001272  340A               	rlcf	___ftdiv@f1+1,w,c
  3716  001274  360F               	rlcf	??___ftdiv& (0+255),f,c
  3717  001276  E301               	bnc	u149_41
  3718  001278  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  3719  00127A                     u149_41:
  3720  00127A  500F               	movf	??___ftdiv,w,c
  3721  00127C  6E16               	movwf	___ftdiv@exp,c
  3722  00127E  5016               	movf	___ftdiv@exp,w,c
  3723  001280  A4D8               	btfss	status,2,c
  3724  001282  D007               	goto	i2l1700
  3725  001284  0E00               	movlw	0
  3726  001286  6E09               	movwf	?___ftdiv,c
  3727  001288  0E00               	movlw	0
  3728  00128A  6E0A               	movwf	?___ftdiv+1,c
  3729  00128C  0E00               	movlw	0
  3730  00128E  6E0B               	movwf	?___ftdiv+2,c
  3731  001290  0012               	return	
  3732  001292                     i2l1700:
  3733  001292  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  3734  001296  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  3735  001298  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  3736  00129A  340D               	rlcf	___ftdiv@f2+1,w,c
  3737  00129C  360F               	rlcf	??___ftdiv& (0+255),f,c
  3738  00129E  E301               	bnc	u151_41
  3739  0012A0  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  3740  0012A2                     u151_41:
  3741  0012A2  500F               	movf	??___ftdiv,w,c
  3742  0012A4  6E17               	movwf	___ftdiv@sign,c
  3743  0012A6  5017               	movf	___ftdiv@sign,w,c
  3744  0012A8  A4D8               	btfss	status,2,c
  3745  0012AA  D007               	goto	i2l1706
  3746  0012AC  0E00               	movlw	0
  3747  0012AE  6E09               	movwf	?___ftdiv,c
  3748  0012B0  0E00               	movlw	0
  3749  0012B2  6E0A               	movwf	?___ftdiv+1,c
  3750  0012B4  0E00               	movlw	0
  3751  0012B6  6E0B               	movwf	?___ftdiv+2,c
  3752  0012B8  0012               	return	
  3753  0012BA                     i2l1706:
  3754  0012BA  0E00               	movlw	0
  3755  0012BC  6E13               	movwf	___ftdiv@f3,c
  3756  0012BE  0E00               	movlw	0
  3757  0012C0  6E14               	movwf	___ftdiv@f3+1,c
  3758  0012C2  0E00               	movlw	0
  3759  0012C4  6E15               	movwf	___ftdiv@f3+2,c
  3760  0012C6  5017               	movf	___ftdiv@sign,w,c
  3761  0012C8  0F89               	addlw	137
  3762  0012CA  5E16               	subwf	___ftdiv@exp,f,c
  3763  0012CC  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  3764  0012D0  500E               	movf	___ftdiv@f2+2,w,c
  3765  0012D2  1A17               	xorwf	___ftdiv@sign,f,c
  3766  0012D4  0E80               	movlw	128
  3767  0012D6  1617               	andwf	___ftdiv@sign,f,c
  3768  0012D8  8E0A               	bsf	___ftdiv@f1+1,7,c
  3769  0012DA  0EFF               	movlw	255
  3770  0012DC  1609               	andwf	___ftdiv@f1,f,c
  3771  0012DE  0EFF               	movlw	255
  3772  0012E0  160A               	andwf	___ftdiv@f1+1,f,c
  3773  0012E2  0E00               	movlw	0
  3774  0012E4  160B               	andwf	___ftdiv@f1+2,f,c
  3775  0012E6  8E0D               	bsf	___ftdiv@f2+1,7,c
  3776  0012E8  0EFF               	movlw	255
  3777  0012EA  160C               	andwf	___ftdiv@f2,f,c
  3778  0012EC  0EFF               	movlw	255
  3779  0012EE  160D               	andwf	___ftdiv@f2+1,f,c
  3780  0012F0  0E00               	movlw	0
  3781  0012F2  160E               	andwf	___ftdiv@f2+2,f,c
  3782  0012F4  0E18               	movlw	24
  3783  0012F6  6E12               	movwf	___ftdiv@cntr,c
  3784  0012F8                     i2l1726:
  3785  0012F8  90D8               	bcf	status,0,c
  3786  0012FA  3613               	rlcf	___ftdiv@f3,f,c
  3787  0012FC  3614               	rlcf	___ftdiv@f3+1,f,c
  3788  0012FE  3615               	rlcf	___ftdiv@f3+2,f,c
  3789  001300  500C               	movf	___ftdiv@f2,w,c
  3790  001302  5C09               	subwf	___ftdiv@f1,w,c
  3791  001304  500D               	movf	___ftdiv@f2+1,w,c
  3792  001306  580A               	subwfb	___ftdiv@f1+1,w,c
  3793  001308  500E               	movf	___ftdiv@f2+2,w,c
  3794  00130A  580B               	subwfb	___ftdiv@f1+2,w,c
  3795  00130C  A0D8               	btfss	status,0,c
  3796  00130E  D007               	goto	i2l350
  3797  001310  500C               	movf	___ftdiv@f2,w,c
  3798  001312  5E09               	subwf	___ftdiv@f1,f,c
  3799  001314  500D               	movf	___ftdiv@f2+1,w,c
  3800  001316  5A0A               	subwfb	___ftdiv@f1+1,f,c
  3801  001318  500E               	movf	___ftdiv@f2+2,w,c
  3802  00131A  5A0B               	subwfb	___ftdiv@f1+2,f,c
  3803  00131C  8013               	bsf	___ftdiv@f3,0,c
  3804  00131E                     i2l350:
  3805  00131E  90D8               	bcf	status,0,c
  3806  001320  3609               	rlcf	___ftdiv@f1,f,c
  3807  001322  360A               	rlcf	___ftdiv@f1+1,f,c
  3808  001324  360B               	rlcf	___ftdiv@f1+2,f,c
  3809  001326  2E12               	decfsz	___ftdiv@cntr,f,c
  3810  001328  D7E7               	goto	i2l1726
  3811  00132A  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  3812  00132E  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3813  001332  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3814  001336  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  3815  00133A  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  3816  00133E  ECE3  F00A         	call	___ftpack	;wreg free
  3817  001342  C001  F009         	movff	?___ftpack,?___ftdiv
  3818  001346  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  3819  00134A  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  3820  00134E  0012               	return	
  3821  001350                     __end_of___ftdiv:
  3822                           	opt stack 0
  3823                           pclatu	equ	0xFFB
  3824                           pclath	equ	0xFFA
  3825                           tblptru	equ	0xFF8
  3826                           tblptrh	equ	0xFF7
  3827                           tblptrl	equ	0xFF6
  3828                           tablat	equ	0xFF5
  3829                           prodh	equ	0xFF4
  3830                           prodl	equ	0xFF3
  3831                           intcon	equ	0xFF2
  3832                           intcon2	equ	0xFF1
  3833                           postinc0	equ	0xFEE
  3834                           fsr0h	equ	0xFEA
  3835                           fsr0l	equ	0xFE9
  3836                           wreg	equ	0xFE8
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           postinc2	equ	0xFDE
  3840                           postdec2	equ	0xFDD
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function ___awtoft *****************
  3846 ;; Defined at:
  3847 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awtoft.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  c               2    8[COMRAM] int 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  sign            1   11[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  3    8[COMRAM] float 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3861 ;;      Params:         3       0       0       0       0       0       0       0       0
  3862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3864 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3865 ;;Total ram usage:        4 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    1
  3868 ;; This function calls:
  3869 ;;		___ftpack
  3870 ;; This function is called by:
  3871 ;;		_dectobin
  3872 ;;		_exp
  3873 ;;		_log
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text21
  3878  001A16                     __ptext21:
  3879                           	opt stack 0
  3880  001A16                     ___awtoft:
  3881                           	opt stack 23
  3882                           
  3883                           ;incstack = 0
  3884  001A16  0E00               	movlw	0
  3885  001A18  6E0C               	movwf	___awtoft@sign,c
  3886  001A1A  AE0A               	btfss	___awtoft@c+1,7,c
  3887  001A1C  D006               	goto	i2l1756
  3888  001A1E  6C09               	negf	___awtoft@c,c
  3889  001A20  1E0A               	comf	___awtoft@c+1,f,c
  3890  001A22  B0D8               	btfsc	status,0,c
  3891  001A24  2A0A               	incf	___awtoft@c+1,f,c
  3892  001A26  0E01               	movlw	1
  3893  001A28  6E0C               	movwf	___awtoft@sign,c
  3894  001A2A                     i2l1756:
  3895  001A2A  C009  F001         	movff	___awtoft@c,___ftpack@arg
  3896  001A2E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  3897  001A32  6A03               	clrf	___ftpack@arg+2,c
  3898  001A34  0E8E               	movlw	142
  3899  001A36  6E04               	movwf	___ftpack@exp,c
  3900  001A38  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  3901  001A3C  ECE3  F00A         	call	___ftpack	;wreg free
  3902  001A40  C001  F009         	movff	?___ftpack,?___awtoft
  3903  001A44  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  3904  001A48  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  3905  001A4C  0012               	return	
  3906  001A4E                     __end_of___awtoft:
  3907                           	opt stack 0
  3908                           pclatu	equ	0xFFB
  3909                           pclath	equ	0xFFA
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           prodh	equ	0xFF4
  3915                           prodl	equ	0xFF3
  3916                           intcon	equ	0xFF2
  3917                           intcon2	equ	0xFF1
  3918                           postinc0	equ	0xFEE
  3919                           fsr0h	equ	0xFEA
  3920                           fsr0l	equ	0xFE9
  3921                           wreg	equ	0xFE8
  3922                           fsr1h	equ	0xFE2
  3923                           fsr1l	equ	0xFE1
  3924                           postinc2	equ	0xFDE
  3925                           postdec2	equ	0xFDD
  3926                           fsr2h	equ	0xFDA
  3927                           fsr2l	equ	0xFD9
  3928                           status	equ	0xFD8
  3929                           
  3930 ;; *************** function ___lltoft *****************
  3931 ;; Defined at:
  3932 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
  3933 ;; Parameters:    Size  Location     Type
  3934 ;;  c               4    8[COMRAM] unsigned long 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  exp             1   16[COMRAM] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  3    8[COMRAM] float 
  3939 ;; Registers used:
  3940 ;;		wreg, status,2, status,0, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3946 ;;      Params:         4       0       0       0       0       0       0       0       0
  3947 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3948 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3949 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3950 ;;Total ram usage:        9 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    1
  3953 ;; This function calls:
  3954 ;;		___ftpack
  3955 ;; This function is called by:
  3956 ;;		_pow
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text22
  3961  00197A                     __ptext22:
  3962                           	opt stack 0
  3963  00197A                     ___lltoft:
  3964                           	opt stack 24
  3965                           
  3966                           ;incstack = 0
  3967  00197A  0E8E               	movlw	142
  3968  00197C  6E11               	movwf	___lltoft@exp,c
  3969  00197E  D006               	goto	i2l1834
  3970  001980                     i2l1832:
  3971  001980  90D8               	bcf	status,0,c
  3972  001982  320C               	rrcf	___lltoft@c+3,f,c
  3973  001984  320B               	rrcf	___lltoft@c+2,f,c
  3974  001986  320A               	rrcf	___lltoft@c+1,f,c
  3975  001988  3209               	rrcf	___lltoft@c,f,c
  3976  00198A  2A11               	incf	___lltoft@exp,f,c
  3977  00198C                     i2l1834:
  3978  00198C  0E00               	movlw	0
  3979  00198E  1409               	andwf	___lltoft@c,w,c
  3980  001990  6E0D               	movwf	??___lltoft& (0+255),c
  3981  001992  0E00               	movlw	0
  3982  001994  140A               	andwf	___lltoft@c+1,w,c
  3983  001996  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3984  001998  0E00               	movlw	0
  3985  00199A  140B               	andwf	___lltoft@c+2,w,c
  3986  00199C  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3987  00199E  0EFF               	movlw	255
  3988  0019A0  140C               	andwf	___lltoft@c+3,w,c
  3989  0019A2  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3990  0019A4  500D               	movf	??___lltoft,w,c
  3991  0019A6  100E               	iorwf	??___lltoft+1,w,c
  3992  0019A8  100F               	iorwf	??___lltoft+2,w,c
  3993  0019AA  1010               	iorwf	??___lltoft+3,w,c
  3994  0019AC  A4D8               	btfss	status,2,c
  3995  0019AE  D7E8               	goto	i2l1832
  3996  0019B0  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3997  0019B4  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3998  0019B8  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3999  0019BC  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  4000  0019C0  0E00               	movlw	0
  4001  0019C2  6E05               	movwf	___ftpack@sign,c
  4002  0019C4  ECE3  F00A         	call	___ftpack	;wreg free
  4003  0019C8  C001  F009         	movff	?___ftpack,?___lltoft
  4004  0019CC  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  4005  0019D0  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  4006  0019D4  0012               	return	
  4007  0019D6                     __end_of___lltoft:
  4008                           	opt stack 0
  4009                           pclatu	equ	0xFFB
  4010                           pclath	equ	0xFFA
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           intcon	equ	0xFF2
  4018                           intcon2	equ	0xFF1
  4019                           postinc0	equ	0xFEE
  4020                           fsr0h	equ	0xFEA
  4021                           fsr0l	equ	0xFE9
  4022                           wreg	equ	0xFE8
  4023                           fsr1h	equ	0xFE2
  4024                           fsr1l	equ	0xFE1
  4025                           postinc2	equ	0xFDE
  4026                           postdec2	equ	0xFDD
  4027                           fsr2h	equ	0xFDA
  4028                           fsr2l	equ	0xFD9
  4029                           status	equ	0xFD8
  4030                           
  4031 ;; *************** function ___ftpack *****************
  4032 ;; Defined at:
  4033 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  arg             3    0[COMRAM] unsigned um
  4036 ;;  exp             1    3[COMRAM] unsigned char 
  4037 ;;  sign            1    4[COMRAM] unsigned char 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;		None
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  3    0[COMRAM] float 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4049 ;;      Params:         5       0       0       0       0       0       0       0       0
  4050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4051 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4052 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4053 ;;Total ram usage:        8 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		___altoft
  4059 ;;		___awtoft
  4060 ;;		___ftadd
  4061 ;;		___ftdiv
  4062 ;;		___ftmul
  4063 ;;		___lltoft
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text23
  4068  0015C6                     __ptext23:
  4069                           	opt stack 0
  4070  0015C6                     ___ftpack:
  4071                           	opt stack 22
  4072                           
  4073                           ;incstack = 0
  4074  0015C6  5004               	movf	___ftpack@exp,w,c
  4075  0015C8  B4D8               	btfsc	status,2,c
  4076  0015CA  D005               	goto	i2l1438
  4077  0015CC  5001               	movf	___ftpack@arg,w,c
  4078  0015CE  1002               	iorwf	___ftpack@arg+1,w,c
  4079  0015D0  1003               	iorwf	___ftpack@arg+2,w,c
  4080  0015D2  A4D8               	btfss	status,2,c
  4081  0015D4  D00C               	goto	i2l1444
  4082  0015D6                     i2l1438:
  4083  0015D6  0E00               	movlw	0
  4084  0015D8  6E01               	movwf	?___ftpack,c
  4085  0015DA  0E00               	movlw	0
  4086  0015DC  6E02               	movwf	?___ftpack+1,c
  4087  0015DE  0E00               	movlw	0
  4088  0015E0  6E03               	movwf	?___ftpack+2,c
  4089  0015E2  0012               	return	
  4090  0015E4                     i2l1442:
  4091  0015E4  2A04               	incf	___ftpack@exp,f,c
  4092  0015E6  90D8               	bcf	status,0,c
  4093  0015E8  3203               	rrcf	___ftpack@arg+2,f,c
  4094  0015EA  3202               	rrcf	___ftpack@arg+1,f,c
  4095  0015EC  3201               	rrcf	___ftpack@arg,f,c
  4096  0015EE                     i2l1444:
  4097  0015EE  0E00               	movlw	0
  4098  0015F0  1401               	andwf	___ftpack@arg,w,c
  4099  0015F2  6E06               	movwf	??___ftpack& (0+255),c
  4100  0015F4  0E00               	movlw	0
  4101  0015F6  1402               	andwf	___ftpack@arg+1,w,c
  4102  0015F8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4103  0015FA  0EFE               	movlw	254
  4104  0015FC  1403               	andwf	___ftpack@arg+2,w,c
  4105  0015FE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4106  001600  5006               	movf	??___ftpack,w,c
  4107  001602  1007               	iorwf	??___ftpack+1,w,c
  4108  001604  1008               	iorwf	??___ftpack+2,w,c
  4109  001606  B4D8               	btfsc	status,2,c
  4110  001608  D00C               	goto	i2l1450
  4111  00160A  D7EC               	goto	i2l1442
  4112  00160C                     i2l1446:
  4113  00160C  2A04               	incf	___ftpack@exp,f,c
  4114  00160E  0E01               	movlw	1
  4115  001610  2601               	addwf	___ftpack@arg,f,c
  4116  001612  0E00               	movlw	0
  4117  001614  2202               	addwfc	___ftpack@arg+1,f,c
  4118  001616  0E00               	movlw	0
  4119  001618  2203               	addwfc	___ftpack@arg+2,f,c
  4120  00161A  90D8               	bcf	status,0,c
  4121  00161C  3203               	rrcf	___ftpack@arg+2,f,c
  4122  00161E  3202               	rrcf	___ftpack@arg+1,f,c
  4123  001620  3201               	rrcf	___ftpack@arg,f,c
  4124  001622                     i2l1450:
  4125  001622  0E00               	movlw	0
  4126  001624  1401               	andwf	___ftpack@arg,w,c
  4127  001626  6E06               	movwf	??___ftpack& (0+255),c
  4128  001628  0E00               	movlw	0
  4129  00162A  1402               	andwf	___ftpack@arg+1,w,c
  4130  00162C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  4131  00162E  0EFF               	movlw	255
  4132  001630  1403               	andwf	___ftpack@arg+2,w,c
  4133  001632  6E08               	movwf	(??___ftpack+2)& (0+255),c
  4134  001634  5006               	movf	??___ftpack,w,c
  4135  001636  1007               	iorwf	??___ftpack+1,w,c
  4136  001638  1008               	iorwf	??___ftpack+2,w,c
  4137  00163A  B4D8               	btfsc	status,2,c
  4138  00163C  D006               	goto	i2l1454
  4139  00163E  D7E6               	goto	i2l1446
  4140  001640                     i2l1452:
  4141  001640  0604               	decf	___ftpack@exp,f,c
  4142  001642  90D8               	bcf	status,0,c
  4143  001644  3601               	rlcf	___ftpack@arg,f,c
  4144  001646  3602               	rlcf	___ftpack@arg+1,f,c
  4145  001648  3603               	rlcf	___ftpack@arg+2,f,c
  4146  00164A                     i2l1454:
  4147  00164A  BE02               	btfsc	___ftpack@arg+1,7,c
  4148  00164C  D003               	goto	i2l292
  4149  00164E  0E02               	movlw	2
  4150  001650  6004               	cpfslt	___ftpack@exp,c
  4151  001652  D7F6               	goto	i2l1452
  4152  001654                     i2l292:
  4153  001654  A004               	btfss	___ftpack@exp,0,c
  4154  001656  9E02               	bcf	___ftpack@arg+1,7,c
  4155  001658  90D8               	bcf	status,0,c
  4156  00165A  3204               	rrcf	___ftpack@exp,f,c
  4157  00165C  5004               	movf	___ftpack@exp,w,c
  4158  00165E  1203               	iorwf	___ftpack@arg+2,f,c
  4159  001660  5005               	movf	___ftpack@sign,w,c
  4160  001662  A4D8               	btfss	status,2,c
  4161  001664  8E03               	bsf	___ftpack@arg+2,7,c
  4162  001666  C001  F001         	movff	___ftpack@arg,?___ftpack
  4163  00166A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  4164  00166E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  4165  001672  0012               	return	
  4166  001674                     __end_of___ftpack:
  4167                           	opt stack 0
  4168                           pclatu	equ	0xFFB
  4169                           pclath	equ	0xFFA
  4170                           tblptru	equ	0xFF8
  4171                           tblptrh	equ	0xFF7
  4172                           tblptrl	equ	0xFF6
  4173                           tablat	equ	0xFF5
  4174                           prodh	equ	0xFF4
  4175                           prodl	equ	0xFF3
  4176                           intcon	equ	0xFF2
  4177                           intcon2	equ	0xFF1
  4178                           postinc0	equ	0xFEE
  4179                           fsr0h	equ	0xFEA
  4180                           fsr0l	equ	0xFE9
  4181                           wreg	equ	0xFE8
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           postinc2	equ	0xFDE
  4185                           postdec2	equ	0xFDD
  4186                           fsr2h	equ	0xFDA
  4187                           fsr2l	equ	0xFD9
  4188                           status	equ	0xFD8
  4189                           
  4190 ;; *************** function ___awdiv *****************
  4191 ;; Defined at:
  4192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  4193 ;; Parameters:    Size  Location     Type
  4194 ;;  dividend        2    0[COMRAM] int 
  4195 ;;  divisor         2    2[COMRAM] int 
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  quotient        2    6[COMRAM] int 
  4198 ;;  sign            1    5[COMRAM] unsigned char 
  4199 ;;  counter         1    4[COMRAM] unsigned char 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  2    0[COMRAM] int 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4209 ;;      Params:         4       0       0       0       0       0       0       0       0
  4210 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4212 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4213 ;;Total ram usage:        8 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_dectobin
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text24
  4223  001794                     __ptext24:
  4224                           	opt stack 0
  4225  001794                     ___awdiv:
  4226                           	opt stack 26
  4227                           
  4228                           ;incstack = 0
  4229  001794  0E00               	movlw	0
  4230  001796  6E06               	movwf	___awdiv@sign,c
  4231  001798  AE04               	btfss	___awdiv@divisor+1,7,c
  4232  00179A  D006               	goto	i2l1954
  4233  00179C  6C03               	negf	___awdiv@divisor,c
  4234  00179E  1E04               	comf	___awdiv@divisor+1,f,c
  4235  0017A0  B0D8               	btfsc	status,0,c
  4236  0017A2  2A04               	incf	___awdiv@divisor+1,f,c
  4237  0017A4  0E01               	movlw	1
  4238  0017A6  6E06               	movwf	___awdiv@sign,c
  4239  0017A8                     i2l1954:
  4240  0017A8  AE02               	btfss	___awdiv@dividend+1,7,c
  4241  0017AA  D006               	goto	i2l1960
  4242  0017AC  6C01               	negf	___awdiv@dividend,c
  4243  0017AE  1E02               	comf	___awdiv@dividend+1,f,c
  4244  0017B0  B0D8               	btfsc	status,0,c
  4245  0017B2  2A02               	incf	___awdiv@dividend+1,f,c
  4246  0017B4  0E01               	movlw	1
  4247  0017B6  1A06               	xorwf	___awdiv@sign,f,c
  4248  0017B8                     i2l1960:
  4249  0017B8  0E00               	movlw	0
  4250  0017BA  6E08               	movwf	___awdiv@quotient+1,c
  4251  0017BC  0E00               	movlw	0
  4252  0017BE  6E07               	movwf	___awdiv@quotient,c
  4253  0017C0  5003               	movf	___awdiv@divisor,w,c
  4254  0017C2  1004               	iorwf	___awdiv@divisor+1,w,c
  4255  0017C4  B4D8               	btfsc	status,2,c
  4256  0017C6  D01C               	goto	i2l1982
  4257  0017C8  0E01               	movlw	1
  4258  0017CA  6E05               	movwf	___awdiv@counter,c
  4259  0017CC  D004               	goto	i2l1968
  4260  0017CE                     i2l1966:
  4261  0017CE  90D8               	bcf	status,0,c
  4262  0017D0  3603               	rlcf	___awdiv@divisor,f,c
  4263  0017D2  3604               	rlcf	___awdiv@divisor+1,f,c
  4264  0017D4  2A05               	incf	___awdiv@counter,f,c
  4265  0017D6                     i2l1968:
  4266  0017D6  AE04               	btfss	___awdiv@divisor+1,7,c
  4267  0017D8  D7FA               	goto	i2l1966
  4268  0017DA                     i2l1970:
  4269  0017DA  90D8               	bcf	status,0,c
  4270  0017DC  3607               	rlcf	___awdiv@quotient,f,c
  4271  0017DE  3608               	rlcf	___awdiv@quotient+1,f,c
  4272  0017E0  5003               	movf	___awdiv@divisor,w,c
  4273  0017E2  5C01               	subwf	___awdiv@dividend,w,c
  4274  0017E4  5004               	movf	___awdiv@divisor+1,w,c
  4275  0017E6  5802               	subwfb	___awdiv@dividend+1,w,c
  4276  0017E8  A0D8               	btfss	status,0,c
  4277  0017EA  D005               	goto	i2l1978
  4278  0017EC  5003               	movf	___awdiv@divisor,w,c
  4279  0017EE  5E01               	subwf	___awdiv@dividend,f,c
  4280  0017F0  5004               	movf	___awdiv@divisor+1,w,c
  4281  0017F2  5A02               	subwfb	___awdiv@dividend+1,f,c
  4282  0017F4  8007               	bsf	___awdiv@quotient,0,c
  4283  0017F6                     i2l1978:
  4284  0017F6  90D8               	bcf	status,0,c
  4285  0017F8  3204               	rrcf	___awdiv@divisor+1,f,c
  4286  0017FA  3203               	rrcf	___awdiv@divisor,f,c
  4287  0017FC  2E05               	decfsz	___awdiv@counter,f,c
  4288  0017FE  D7ED               	goto	i2l1970
  4289  001800                     i2l1982:
  4290  001800  5006               	movf	___awdiv@sign,w,c
  4291  001802  B4D8               	btfsc	status,2,c
  4292  001804  D004               	goto	i2l1986
  4293  001806  6C07               	negf	___awdiv@quotient,c
  4294  001808  1E08               	comf	___awdiv@quotient+1,f,c
  4295  00180A  B0D8               	btfsc	status,0,c
  4296  00180C  2A08               	incf	___awdiv@quotient+1,f,c
  4297  00180E                     i2l1986:
  4298  00180E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4299  001812  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4300  001816  0012               	return	
  4301  001818                     __end_of___awdiv:
  4302                           	opt stack 0
  4303                           pclatu	equ	0xFFB
  4304                           pclath	equ	0xFFA
  4305                           tblptru	equ	0xFF8
  4306                           tblptrh	equ	0xFF7
  4307                           tblptrl	equ	0xFF6
  4308                           tablat	equ	0xFF5
  4309                           prodh	equ	0xFF4
  4310                           prodl	equ	0xFF3
  4311                           intcon	equ	0xFF2
  4312                           intcon2	equ	0xFF1
  4313                           postinc0	equ	0xFEE
  4314                           fsr0h	equ	0xFEA
  4315                           fsr0l	equ	0xFE9
  4316                           wreg	equ	0xFE8
  4317                           fsr1h	equ	0xFE2
  4318                           fsr1l	equ	0xFE1
  4319                           postinc2	equ	0xFDE
  4320                           postdec2	equ	0xFDD
  4321                           fsr2h	equ	0xFDA
  4322                           fsr2l	equ	0xFD9
  4323                           status	equ	0xFD8
  4324                           pclatu	equ	0xFFB
  4325                           pclath	equ	0xFFA
  4326                           tblptru	equ	0xFF8
  4327                           tblptrh	equ	0xFF7
  4328                           tblptrl	equ	0xFF6
  4329                           tablat	equ	0xFF5
  4330                           prodh	equ	0xFF4
  4331                           prodl	equ	0xFF3
  4332                           intcon	equ	0xFF2
  4333                           intcon2	equ	0xFF1
  4334                           postinc0	equ	0xFEE
  4335                           fsr0h	equ	0xFEA
  4336                           fsr0l	equ	0xFE9
  4337                           wreg	equ	0xFE8
  4338                           fsr1h	equ	0xFE2
  4339                           fsr1l	equ	0xFE1
  4340                           postinc2	equ	0xFDE
  4341                           postdec2	equ	0xFDD
  4342                           fsr2h	equ	0xFDA
  4343                           fsr2l	equ	0xFD9
  4344                           status	equ	0xFD8
  4345                           
  4346                           	psect	rparam
  4347  0000                     pclatu	equ	0xFFB
  4348                           pclath	equ	0xFFA
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           intcon2	equ	0xFF1
  4357                           postinc0	equ	0xFEE
  4358                           fsr0h	equ	0xFEA
  4359                           fsr0l	equ	0xFE9
  4360                           wreg	equ	0xFE8
  4361                           fsr1h	equ	0xFE2
  4362                           fsr1l	equ	0xFE1
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           fsr2h	equ	0xFDA
  4366                           fsr2l	equ	0xFD9
  4367                           status	equ	0xFD8
  4368                           
  4369                           	psect	temp
  4370  00005E                     btemp:
  4371                           	opt stack 0
  4372  00005E                     	ds	1
  4373  0000                     int$flags	set	btemp
  4374                           pclatu	equ	0xFFB
  4375                           pclath	equ	0xFFA
  4376                           tblptru	equ	0xFF8
  4377                           tblptrh	equ	0xFF7
  4378                           tblptrl	equ	0xFF6
  4379                           tablat	equ	0xFF5
  4380                           prodh	equ	0xFF4
  4381                           prodl	equ	0xFF3
  4382                           intcon	equ	0xFF2
  4383                           intcon2	equ	0xFF1
  4384                           postinc0	equ	0xFEE
  4385                           fsr0h	equ	0xFEA
  4386                           fsr0l	equ	0xFE9
  4387                           wreg	equ	0xFE8
  4388                           fsr1h	equ	0xFE2
  4389                           fsr1l	equ	0xFE1
  4390                           postinc2	equ	0xFDE
  4391                           postdec2	equ	0xFDD
  4392                           fsr2h	equ	0xFDA
  4393                           fsr2l	equ	0xFD9
  4394                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160     33      61
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_boton
    _boton->_dectobin
    _dectobin->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftadd
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _boton->_dectobin
    _dectobin->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _ConfigInit
 ---------------------------------------------------------------------------------
 (1) _ConfigInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                            14    14      0   82825
                                             19 BANK0     14    14      0
                              _boton
 ---------------------------------------------------------------------------------
 (3) _boton                                                2     2      0   82825
                                             91 COMRAM     2     2      0
                           _dectobin
 ---------------------------------------------------------------------------------
 (4) _dectobin                                            18    16      2   82825
                                             87 COMRAM     4     2      2
                                             11 BANK0      8     8      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (5) _pow                                                 17    11      6   69255
                                             81 COMRAM     6     0      6
                                              0 BANK0     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (6) _log                                                  5     2      3   22692
                                             51 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _exp                                                  9     6      3   37376
                                             72 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (7) _ldexp                                                7     2      5     400
                                             51 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (7) _floor                                                8     5      3    9563
                                             64 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (7) _frexp                                                7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (8) ___fttol                                             15    11      4     632
                                             39 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___ftge                                               9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) ___altoft                                            10     6      4    2758
                                             54 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (7) _eval_poly                                           12     5      7    9857
                                             39 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___ftmul                                             15     9      6    4186
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftsub                                              6     0      6    4919
                                             39 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (8) ___ftadd                                             12     6      6    4574
                                             27 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftneg                                              3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (7) ___ftdiv                                             15     9      6    3102
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3    3243
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___lltoft                                             9     5      4    2689
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___ftpack                                             8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInit

 _high_isr (ROOT)
   _boton
     _dectobin
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       _pow
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
           ___ftdiv
             ___ftpack
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      3D       5       38.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A      20        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Jun 21 18:59:17 2018

           ___altoft@exp 003F            ___altoft@sign 0040                       l57 1AE6  
           ___awdiv@sign 0006              __CFG_BOR$ON 000000      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000             ___ftadd@exp1 0027  
           ___ftadd@exp2 0026              __CFG_LVP$ON 000000             ___ftadd@sign 0025  
            __CFG_WDT$ON 000000                      _GIE 007F97             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      _exp 0A50  
                    _log 0F64                      _lsb 0097                      _msb 0099  
                    _pow 0DE4                      wreg 000FE8             ___ftdiv@cntr 0012  
           ___ftdiv@sign 0017                     ?_exp 0049                     ?_log 0034  
                   ?_pow 0052                     _PEIE 007F96                     i2l67 0A4E  
                   _main 1AE2             ___ftpack@arg 0001             ___ftpack@exp 0004  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 005E                     exp@x 0049                     log@x 0034  
                   pow@x 0052                     pow@y 0055                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 001A             ___param_bank 000000             ___ftmul@sign 001B  
           ___fttol@exp1 0036                    ??_exp 004C                    ??_log 0037  
           ___fttol@lval 0032                    ??_pow 0058            __CFG_PLLDIV$5 000000  
                  ?_main 0001          __end_of___awdiv 1818          __end_of___ftadd 0DE4  
        __end_of___ftdiv 1350          __end_of___ftneg 1AC4          __end_of___ftmul 126A  
        ___awdiv@divisor 0003          __end_of___ftsub 1A16          __end_of___fttol 1176  
                  _T2CON 000FCA                    i2l330 0D56                    i2l315 0C7C  
                  i2l350 131E                    i2l502 0E1E                    i2l319 0CA6  
                  i2l339 0D72                    i2l507 0F56                    i2l292 1654  
                  i2l372 1AB6                    i2l665 0B06                    i2l666 0C2A  
                  i2l676 1420          ___awdiv@counter 0005               _ConfigInit 1A4E  
          __CFG_USBDIV$1 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
           ___lltoft@exp 0011           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000            ___awtoft@sign 000C                    _boton 190C  
                  _floor 1350                    _ldexp 1500                    _frexp 1674  
                  _errno 0095            ___ftpack@sign 0005                    pclath 000FFA  
                  tablat 000FF5                    pow@yi 0067                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000              exp@exponent 004F  
            ldexp@newexp 0037           __CFG_MCLRE$OFF 000000          __initialization 1AC4  
            log@exponent 0037             __end_of_main 1AE8                   ??_main 0081  
          ___fttol@sign1 0031            __activetblptr 000001          __CFG_CCP2MX$OFF 000000  
                 _ADCON1 000FC1                   ?_boton 0001                   ?_floor 0041  
                 ?_ldexp 0034                   ?_frexp 0001         __end_of___altoft 190C  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001         __end_of___awtoft 1A4E  
       __end_of___ftpack 1674         __end_of___lltoft 19D6                   _INT0IE 007F94  
                 _INT0IF 007F91                   u110_41 0C5C                   i2l2002 08BC  
                 u130_41 1186                   i2l2014 0A3A                   i2l2008 097C  
                 i2l1500 0C8A                   i2l2052 193E                   i2l2054 1948  
                 i2l2046 1922                   i2l1450 1622                   i2l1442 15E4  
                 i2l1530 0D10                   i2l1522 0CE4                   i2l1506 0CB4  
                 i2l1602 1230                   i2l1452 1640                   i2l1444 15EE  
                 i2l1700 1292                   i2l1540 0D44                   i2l1532 0D1A  
                 u132_41 11AE                   i2l1454 164A                   i2l1446 160C  
                 i2l1438 15D6                   i2l1542 0D4E                   i2l1534 0D22  
                 i2l1614 1734                   i2l1528 0D06                   i2l1624 1790  
                 i2l1800 1518                   i2l1706 12BA                   i2l1618 1764  
                 i2l1634 10AE                   i2l1548 0D8E                   i2l1484 18B6  
                 i2l1652 1114                   i2l1820 1582                   u109_41 0C48  
                 i2l1726 12F8                   i2l1558 0DBE                   i2l1574 11C6  
                 i2l1486 18C2                   i2l1670 1164                   i2l1662 113C  
                 i2l1902 0C00                   i2l1832 1980                   i2l1744 19EC  
                 i2l1592 1208                   i2l1568 119E                   i2l1664 1148  
                 i2l1656 1124                   i2l1824 158E                   i2l1808 155E  
                 i2l1834 198C                   i2l1666 114E                   i2l1682 169C  
                 i2l1930 0EA8                   i2l1922 0E44                   i2l1756 1A2A  
                 i2l1588 11F8                   i2l1852 0FA2                   i2l1916 0E2C  
                 i2l1598 1220                   i2l1790 146E                   i2l1782 13A6  
                 i2l1774 137E                   i2l1846 0F80                   i2l1934 0ECE  
                 i2l1960 17B8                   i2l1792 14EA                   i2l1880 0AD8  
                 i2l1970 17DA                   i2l1954 17A8                   i2l1778 138C  
                 i2l1874 0AA0                   i2l1868 0A68                   u151_41 12A2  
                 i2l1966 17CE                   i2l1982 1800                   i2l1968 17D6  
                 i2l1986 180E                   i2l1978 17F6                   i2l1996 0860  
                 u139_41 1092                   u149_41 127A         __end_of_dectobin 0A50  
         __CFG_XINST$OFF 000000         __end_of_high_isr 1894                   ___ftge 1704  
                 ___wmul 1A7A                ??___awdiv 0005                ??___ftadd 0022  
         __CFG_STVREN$ON 000000                ??___ftdiv 000F                ??___ftneg 0004  
              ??___ftmul 0013                ??___ftsub 002E                ??___fttol 002C  
                 clear_0 1ACA         ___awdiv@quotient 0007                   _modulo 0081  
                 floor@i 0044                   floor@x 0041    ___ftmul@f3_as_product 0017  
            ?_ConfigInit 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_ofexp@coeff 081F  
       __end_oflog@coeff 083A               __accesstop 0060  __end_of__initialization 1AD0  
             ___altoft@c 0037               ___ftadd@f1 001C               ___ftadd@f2 001F  
             ___ftge@ff1 0001               ___ftge@ff2 0004             eval_poly@res 0031  
          ___rparam_used 000001               ___ftdiv@f1 0009               ___ftdiv@f2 000C  
             ___ftdiv@f3 0013               ___ftneg@f1 0001               ___awtoft@c 0009  
             ___ftmul@f1 000D               ___ftmul@f2 0010               ___ftsub@f1 0028  
             ___ftsub@f2 002B               ___fttol@f1 0028           __pcstackCOMRAM 0001  
             ___lltoft@c 0009            __end_of_boton 197A            __end_of_floor 142E  
          __end_of_ldexp 15C6            __end_of_frexp 1704             _dectobin$844 006B  
           _dectobin$845 006E                  ??_boton 005C                  ??_floor 0044  
                ??_ldexp 0039                  ??_frexp 0006               __pbssBANK0 0081  
     __size_of_eval_poly 00D2      __size_of_ConfigInit 002C                  ?___ftge 0001  
                ?___wmul 0001                  _CCP2CON 000FBA                ?___altoft 0037  
              ?___awtoft 0009                ?___ftpack 0001                ?___lltoft 0009  
              ?_dectobin 0058                ?_high_isr 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000               _incremento 009B  
        __size_of___ftge 0090                  ___awdiv 1794                  ___ftadd 0C38  
                ___ftdiv 126A                  ___ftneg 1AA0          __size_of___wmul 0026  
                ___ftmul 1176                  ___ftsub 19D6                  ___fttol 1082  
           __psmallconst 0800               ??___altoft 003B                  _exp$848 004C  
                __pcinit 1AC4               ??___awtoft 000C               ??___ftpack 0006  
      __end_of_eval_poly 1500                  __ramtop 0800               ??___lltoft 000D  
                __ptext0 1AE2                  __ptext1 1A4E                  __ptext3 190C  
                __ptext4 083C                  __ptext5 0DE4                  __ptext6 0F64  
                __ptext7 0A50                  __ptext8 1500                  __ptext9 1350  
                _pow$846 0060                  _pow$847 0063             __size_of_exp 01E8  
           __size_of_log 011E             __size_of_pow 0180               ??_dectobin 005A  
             ??_high_isr 0073           __pintcode_body 1818     end_of_initialization 1AD0  
                exp@sign 0051                  int_func 1818                  pow@sign 0066  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
           ??_ConfigInit 0081                _TRISBbits 000F93              ___ftdiv@exp 0016  
     __end_of_ConfigInit 1A7A              ___ftmul@exp 0016           __end_of___ftge 1794  
         __end_of___wmul 1AA0               floor@expon 0047      start_initialization 1AC4  
             eval_poly@d 002B               eval_poly@n 002D               eval_poly@x 0028  
             ldexp@value 0034              __end_of_exp 0C38              __end_of_log 1082  
            __end_of_pow 0F64               frexp@value 0001                 ??___ftge 0007  
               ??___wmul 0005         __CFG_LPT1OSC$OFF 000000        __size_of___altoft 0078  
      __size_of___awtoft 0038        __size_of___ftpack 00AE        __size_of___lltoft 005C  
          __pcstackBANK0 0060        __size_of_dectobin 0214        __size_of_high_isr 188C  
              __pintcode 0008                 ?___awdiv 0001                 ?___ftadd 001C  
               ?___ftdiv 0009                 ?___ftneg 0001                 ?___ftmul 000D  
               ?___ftsub 0028                 ?___fttol 0028              __smallconst 0800  
              _eval_poly 142E           __size_of_boton 006E           __size_of_floor 00DE  
         __size_of_ldexp 00C6           __size_of_frexp 0090                dectobin@i 0071  
         ___wmul@product 0005                 _LATBbits 000F8A                 i2u141_40 10CC  
               i2u141_45 10C4                 i2u163_40 1538                 i2u148_40 16C4  
               i2u163_48 153A                 i2u148_48 16C6                 i2u173_40 0AE0  
               i2u174_40 0AE2                 i2u182_40 0E90                 i2u190_40 085E  
               i2u159_40 1398                 i2u194_40 1952                 i2u195_48 1954  
               i2u197_47 196A         __CFG_WDTPS$32768 000000        ___wmul@multiplier 0001  
             ?_eval_poly 0028              _INTCON2bits 000FF1                frexp@eptr 0004  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
       __size_of___awdiv 0084         __size_of___ftadd 01AC         __size_of___ftdiv 00E6  
       __size_of___ftneg 0024                 ___altoft 1894         __size_of___ftmul 00F4  
       __size_of___ftsub 0040         __size_of___fttol 00F4                 ___awtoft 1A16  
               ___ftpack 15C6                 ___lltoft 197A                 _dectobin 083C  
               __ptext10 1674                 __ptext11 1082                 __ptext20 126A  
               __ptext12 1704                 __ptext21 1A16                 __ptext13 1894  
               __ptext22 197A                 __ptext14 142E                 __ptext23 15C6  
               __ptext15 1A7A                 __ptext24 1794                 __ptext16 1176  
               __ptext17 19D6                 __ptext18 0C38                 __ptext19 1AA0  
               _high_isr 0008            __size_of_main 0006                 int$flags 005E  
  __CFG_CPUDIV$OSC1_PLL2 000000                 exp@coeff 0801                 log@coeff 081F  
            ??_eval_poly 002F                 intlevel2 0000           dectobin@numero 0058  
     __CFG_FOSC$HSPLL_HS 000000  
