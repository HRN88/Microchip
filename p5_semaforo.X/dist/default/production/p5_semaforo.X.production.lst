

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Aug 21 19:43:12 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.42
    19                           ; Generated 13/04/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  000156                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _estado
    58  000156  30                 	db	48
    59  0000                     _TMR0	set	4054
    60  0000                     _PORTB	set	3969
    61  0000                     _INTCONbits	set	4082
    62  0000                     _T0CON	set	4053
    63  0000                     _LATB	set	3978
    64  0000                     _TRISB	set	3987
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  000116                     __pcinit:
    70                           	opt stack 0
    71  000116                     start_initialization:
    72                           	opt stack 0
    73  000116                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Initialize objects allocated to COMRAM (1 bytes)
    77                           ; load TBLPTR registers with __pidataCOMRAM
    78  000116  0E56               	movlw	low __pidataCOMRAM
    79  000118  6EF6               	movwf	tblptrl,c
    80  00011A  0E01               	movlw	high __pidataCOMRAM
    81  00011C  6EF7               	movwf	tblptrh,c
    82  00011E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    83  000120  6EF8               	movwf	tblptru,c
    84  000122  0009               	tblrd		*+	;fetch initializer
    85  000124  CFF5 F011          	movff	tablat,__pdataCOMRAM
    86                           
    87                           ; Clear objects allocated to COMRAM (2 bytes)
    88  000128  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
    89  00012A  6A0F               	clrf	__pbssCOMRAM& (0+255),c
    90  00012C                     end_of_initialization:
    91                           	opt stack 0
    92  00012C                     __end_of__initialization:
    93                           	opt stack 0
    94  00012C  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    95  00012E  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    96  000130  0E00               	movlw	low (__Lmediumconst shr (0+16))
    97  000132  6EF8               	movwf	tblptru,c
    98  000134  0100               	movlb	0
    99  000136  EF72  F000         	goto	_main	;jump to C main() function
   100                           tblptru	equ	0xFF8
   101                           tblptrh	equ	0xFF7
   102                           tblptrl	equ	0xFF6
   103                           tablat	equ	0xFF5
   104                           
   105                           	psect	bssCOMRAM
   106  00000F                     __pbssCOMRAM:
   107                           	opt stack 0
   108  00000F                     _contador:
   109                           	opt stack 0
   110  00000F                     	ds	2
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           tblptrl	equ	0xFF6
   114                           tablat	equ	0xFF5
   115                           
   116                           	psect	dataCOMRAM
   117  000011                     __pdataCOMRAM:
   118                           	opt stack 0
   119  000011                     _estado:
   120                           	opt stack 0
   121  000011                     	ds	1
   122                           tblptru	equ	0xFF8
   123                           tblptrh	equ	0xFF7
   124                           tblptrl	equ	0xFF6
   125                           tablat	equ	0xFF5
   126                           
   127                           	psect	cstackCOMRAM
   128  000001                     __pcstackCOMRAM:
   129                           	opt stack 0
   130  000001                     ??_RutinaISR:
   131  000001                     
   132                           ; 1 bytes @ 0x0
   133  000001                     	ds	14
   134  00000F                     tblptru	equ	0xFF8
   135                           tblptrh	equ	0xFF7
   136                           tblptrl	equ	0xFF6
   137                           tablat	equ	0xFF5
   138                           
   139                           ; 1 bytes @ 0xE
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 70 in file "p5_semaforo.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;		None
   150 ;; Return value:  Size  Location     Type
   151 ;;                  1    wreg      void 
   152 ;; Registers used:
   153 ;;		wreg, status,2, status,0, cstack
   154 ;; Tracked objects:
   155 ;;		On entry : 0/0
   156 ;;		On exit  : 0/0
   157 ;;		Unchanged: 0/0
   158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   159 ;;      Params:         0       0       0       0       0       0       0       0       0
   160 ;;      Locals:         0       0       0       0       0       0       0       0       0
   161 ;;      Temps:          0       0       0       0       0       0       0       0       0
   162 ;;      Totals:         0       0       0       0       0       0       0       0       0
   163 ;;Total ram usage:        0 bytes
   164 ;; Hardware stack levels required when called:    2
   165 ;; This function calls:
   166 ;;		_ConfigInit
   167 ;; This function is called by:
   168 ;;		Startup code after reset
   169 ;; This function uses a non-reentrant model
   170 ;;
   171                           
   172                           	psect	text0
   173  0000E4                     __ptext0:
   174                           	opt stack 0
   175  0000E4                     _main:
   176                           	opt stack 29
   177                           
   178                           ;p5_semaforo.c: 71: ConfigInit();
   179                           
   180                           ;incstack = 0
   181  0000E4  EC9D  F000         	call	_ConfigInit	;wreg free
   182                           
   183                           ;p5_semaforo.c: 74: switch(estado){
   184                           
   185                           ;p5_semaforo.c: 72: while(1){
   186  0000E8  D008               	goto	l706
   187  0000EA                     l696:
   188                           
   189                           ;p5_semaforo.c: 76: PORTB = 0x00;
   190  0000EA  0E00               	movlw	0
   191  0000EC  D005               	goto	L3
   192  0000EE                     l698:
   193                           
   194                           ;p5_semaforo.c: 79: PORTB = 0x01;
   195  0000EE  0E01               	movlw	1
   196  0000F0  D003               	goto	L3
   197  0000F2                     l700:
   198                           
   199                           ;p5_semaforo.c: 82: PORTB = 0x02;
   200  0000F2  0E02               	movlw	2
   201  0000F4  D001               	goto	L3
   202  0000F6                     l702:
   203                           
   204                           ;p5_semaforo.c: 85: PORTB = 0x04;
   205  0000F6  0E04               	movlw	4
   206  0000F8                     L3:
   207  0000F8  6E81               	movwf	3969,c	;volatile
   208  0000FA                     l706:
   209  0000FA  5011               	movf	_estado,w,c
   210                           
   211                           ; Switch size 1, requested type "space"
   212                           ; Number of cases is 4, Range of values is 48 to 51
   213                           ; switch strategies available:
   214                           ; Name         Instructions Cycles
   215                           ; simple_byte           13     7 (average)
   216                           ;	Chosen strategy is simple_byte
   217  0000FC  0A30               	xorlw	48	; case 48
   218  0000FE  B4D8               	btfsc	status,2,c
   219  000100  D7F4               	goto	l696
   220  000102  0A01               	xorlw	1	; case 49
   221  000104  B4D8               	btfsc	status,2,c
   222  000106  D7F3               	goto	l698
   223  000108  0A03               	xorlw	3	; case 50
   224  00010A  B4D8               	btfsc	status,2,c
   225  00010C  D7F2               	goto	l700
   226  00010E  0A01               	xorlw	1	; case 51
   227  000110  B4D8               	btfsc	status,2,c
   228  000112  D7F1               	goto	l702
   229  000114  D7F2               	goto	l706
   230  000116                     __end_of_main:
   231                           	opt stack 0
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           status	equ	0xFD8
   237                           
   238 ;; *************** function _ConfigInit *****************
   239 ;; Defined at:
   240 ;;		line 27 in file "p5_semaforo.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0       0       0
   257 ;;      Totals:         0       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        0 bytes
   259 ;; Hardware stack levels used:    1
   260 ;; Hardware stack levels required when called:    1
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269  00013A                     __ptext1:
   270                           	opt stack 0
   271  00013A                     _ConfigInit:
   272                           	opt stack 29
   273                           
   274                           ;p5_semaforo.c: 31: TRISB = 0;
   275                           
   276                           ;incstack = 0
   277  00013A  0E00               	movlw	0
   278  00013C  6E93               	movwf	3987,c	;volatile
   279                           
   280                           ;p5_semaforo.c: 32: LATB = 0;
   281  00013E  0E00               	movlw	0
   282  000140  6E8A               	movwf	3978,c	;volatile
   283                           
   284                           ;p5_semaforo.c: 38: T0CON = 0b11000101;
   285  000142  0EC5               	movlw	197
   286  000144  6ED5               	movwf	4053,c	;volatile
   287                           
   288                           ;p5_semaforo.c: 40: TMR0 = 68;
   289  000146  0E00               	movlw	0
   290  000148  6ED7               	movwf	4055,c	;volatile
   291  00014A  0E44               	movlw	68
   292  00014C  6ED6               	movwf	4054,c	;volatile
   293                           
   294                           ;p5_semaforo.c: 42: INTCONbits.T0IF = 0;
   295  00014E  94F2               	bcf	intcon,2,c	;volatile
   296                           
   297                           ;p5_semaforo.c: 48: INTCONbits.GIE = 1;
   298  000150  8EF2               	bsf	intcon,7,c	;volatile
   299                           
   300                           ;p5_semaforo.c: 50: INTCONbits.TMR0IE = 1;
   301  000152  8AF2               	bsf	intcon,5,c	;volatile
   302  000154  0012               	return		;funcret
   303  000156                     __end_of_ConfigInit:
   304                           	opt stack 0
   305                           tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           intcon	equ	0xFF2
   310                           status	equ	0xFD8
   311                           
   312 ;; *************** function _RutinaISR *****************
   313 ;; Defined at:
   314 ;;		line 54 in file "p5_semaforo.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;                  1    wreg      void 
   321 ;; Registers used:
   322 ;;		wreg, status,2, status,0
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   328 ;;      Params:         0       0       0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0       0       0
   330 ;;      Temps:         14       0       0       0       0       0       0       0       0
   331 ;;      Totals:        14       0       0       0       0       0       0       0       0
   332 ;;Total ram usage:       14 bytes
   333 ;; Hardware stack levels used:    1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		Interrupt level 2
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	intcode
   342  000008                     __pintcode:
   343                           	opt stack 0
   344  000008                     _RutinaISR:
   345                           	opt stack 29
   346                           
   347                           ;incstack = 0
   348  000008  8212               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   349  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           tblptrl	equ	0xFF6
   353                           tablat	equ	0xFF5
   354                           intcon	equ	0xFF2
   355                           status	equ	0xFD8
   356                           
   357                           	psect	intcode_body
   358  000012                     __pintcode_body:
   359                           	opt stack 29
   360  000012                     int_func:
   361                           	opt stack 29
   362  000012  0006               	pop		; remove dummy address from shadow register refresh
   363  000014  CFFA F001          	movff	pclath,??_RutinaISR
   364  000018  CFFB F002          	movff	pclatu,??_RutinaISR+1
   365  00001C  CFE9 F003          	movff	fsr0l,??_RutinaISR+2
   366  000020  CFEA F004          	movff	fsr0h,??_RutinaISR+3
   367  000024  CFE1 F005          	movff	fsr1l,??_RutinaISR+4
   368  000028  CFE2 F006          	movff	fsr1h,??_RutinaISR+5
   369  00002C  CFD9 F007          	movff	fsr2l,??_RutinaISR+6
   370  000030  CFDA F008          	movff	fsr2h,??_RutinaISR+7
   371  000034  CFF3 F009          	movff	prodl,??_RutinaISR+8
   372  000038  CFF4 F00A          	movff	prodh,??_RutinaISR+9
   373  00003C  CFF6 F00B          	movff	tblptrl,??_RutinaISR+10
   374  000040  CFF7 F00C          	movff	tblptrh,??_RutinaISR+11
   375  000044  CFF8 F00D          	movff	tblptru,??_RutinaISR+12
   376  000048  CFF5 F00E          	movff	tablat,??_RutinaISR+13
   377                           
   378                           ;p5_semaforo.c: 56: contador ++;
   379  00004C  4A0F               	infsnz	_contador,f,c
   380  00004E  2A10               	incf	_contador+1,f,c
   381                           
   382                           ;p5_semaforo.c: 57: TMR0 = 68;
   383  000050  0E00               	movlw	0
   384  000052  6ED7               	movwf	4055,c	;volatile
   385  000054  0E44               	movlw	68
   386  000056  6ED6               	movwf	4054,c	;volatile
   387                           
   388                           ;p5_semaforo.c: 58: INTCONbits.TMR0IF = 0;
   389  000058  94F2               	bcf	intcon,2,c	;volatile
   390                           
   391                           ;p5_semaforo.c: 60: if(contador == 500) estado = '1';
   392  00005A  0EF4               	movlw	244
   393  00005C  180F               	xorwf	_contador,w,c
   394  00005E  E105               	bnz	i2l682
   395  000060  0410               	decf	_contador+1,w,c
   396  000062  A4D8               	btfss	status,2,c
   397  000064  D002               	goto	i2l682
   398  000066  0E31               	movlw	49
   399  000068  6E11               	movwf	_estado,c
   400  00006A                     i2l682:
   401                           
   402                           ;p5_semaforo.c: 61: if(contador == 3500) estado = '2';
   403  00006A  0EAC               	movlw	172
   404  00006C  180F               	xorwf	_contador,w,c
   405  00006E  E106               	bnz	i2l686
   406  000070  0E0D               	movlw	13
   407  000072  1810               	xorwf	_contador+1,w,c
   408  000074  A4D8               	btfss	status,2,c
   409  000076  D002               	goto	i2l686
   410  000078  0E32               	movlw	50
   411  00007A  6E11               	movwf	_estado,c
   412  00007C                     i2l686:
   413                           
   414                           ;p5_semaforo.c: 62: if(contador == 4500) estado = '3';
   415  00007C  0E94               	movlw	148
   416  00007E  180F               	xorwf	_contador,w,c
   417  000080  E106               	bnz	i2l690
   418  000082  0E11               	movlw	17
   419  000084  1810               	xorwf	_contador+1,w,c
   420  000086  A4D8               	btfss	status,2,c
   421  000088  D002               	goto	i2l690
   422  00008A  0E33               	movlw	51
   423  00008C  6E11               	movwf	_estado,c
   424  00008E                     i2l690:
   425                           
   426                           ;p5_semaforo.c: 63: if(contador == 7500){
   427  00008E  0E4C               	movlw	76
   428  000090  180F               	xorwf	_contador,w,c
   429  000092  E10A               	bnz	i2l28
   430  000094  0E1D               	movlw	29
   431  000096  1810               	xorwf	_contador+1,w,c
   432  000098  A4D8               	btfss	status,2,c
   433  00009A  D006               	goto	i2l28
   434                           
   435                           ;p5_semaforo.c: 64: contador = 0;
   436  00009C  0E00               	movlw	0
   437  00009E  6E10               	movwf	_contador+1,c
   438  0000A0  0E00               	movlw	0
   439  0000A2  6E0F               	movwf	_contador,c
   440                           
   441                           ;p5_semaforo.c: 65: estado = '0';
   442  0000A4  0E30               	movlw	48
   443  0000A6  6E11               	movwf	_estado,c
   444  0000A8                     i2l28:
   445  0000A8  C00E  FFF5         	movff	??_RutinaISR+13,tablat
   446  0000AC  C00D  FFF8         	movff	??_RutinaISR+12,tblptru
   447  0000B0  C00C  FFF7         	movff	??_RutinaISR+11,tblptrh
   448  0000B4  C00B  FFF6         	movff	??_RutinaISR+10,tblptrl
   449  0000B8  C00A  FFF4         	movff	??_RutinaISR+9,prodh
   450  0000BC  C009  FFF3         	movff	??_RutinaISR+8,prodl
   451  0000C0  C008  FFDA         	movff	??_RutinaISR+7,fsr2h
   452  0000C4  C007  FFD9         	movff	??_RutinaISR+6,fsr2l
   453  0000C8  C006  FFE2         	movff	??_RutinaISR+5,fsr1h
   454  0000CC  C005  FFE1         	movff	??_RutinaISR+4,fsr1l
   455  0000D0  C004  FFEA         	movff	??_RutinaISR+3,fsr0h
   456  0000D4  C003  FFE9         	movff	??_RutinaISR+2,fsr0l
   457  0000D8  C002  FFFB         	movff	??_RutinaISR+1,pclatu
   458  0000DC  C001  FFFA         	movff	??_RutinaISR,pclath
   459  0000E0  9212               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   460  0000E2  0011               	retfie		f
   461  0000E4                     __end_of_RutinaISR:
   462                           	opt stack 0
   463  0000                     pclatu	equ	0xFFB
   464                           pclath	equ	0xFFA
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           prodh	equ	0xFF4
   470                           prodl	equ	0xFF3
   471                           intcon	equ	0xFF2
   472                           fsr0h	equ	0xFEA
   473                           fsr0l	equ	0xFE9
   474                           fsr1h	equ	0xFE2
   475                           fsr1l	equ	0xFE1
   476                           fsr2h	equ	0xFDA
   477                           fsr2l	equ	0xFD9
   478                           status	equ	0xFD8
   479                           pclatu	equ	0xFFB
   480                           pclath	equ	0xFFA
   481                           tblptru	equ	0xFF8
   482                           tblptrh	equ	0xFF7
   483                           tblptrl	equ	0xFF6
   484                           tablat	equ	0xFF5
   485                           prodh	equ	0xFF4
   486                           prodl	equ	0xFF3
   487                           intcon	equ	0xFF2
   488                           fsr0h	equ	0xFEA
   489                           fsr0l	equ	0xFE9
   490                           fsr1h	equ	0xFE2
   491                           fsr1l	equ	0xFE1
   492                           fsr2h	equ	0xFDA
   493                           fsr2l	equ	0xFD9
   494                           status	equ	0xFD8
   495                           
   496                           	psect	rparam
   497  0000                     pclatu	equ	0xFFB
   498                           pclath	equ	0xFFA
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           prodh	equ	0xFF4
   504                           prodl	equ	0xFF3
   505                           intcon	equ	0xFF2
   506                           fsr0h	equ	0xFEA
   507                           fsr0l	equ	0xFE9
   508                           fsr1h	equ	0xFE2
   509                           fsr1l	equ	0xFE1
   510                           fsr2h	equ	0xFDA
   511                           fsr2l	equ	0xFD9
   512                           status	equ	0xFD8
   513                           
   514                           	psect	temp
   515  000012                     btemp:
   516                           	opt stack 0
   517  000012                     	ds	1
   518  0000                     int$flags	set	btemp
   519                           pclatu	equ	0xFFB
   520                           pclath	equ	0xFFA
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           prodh	equ	0xFF4
   526                           prodl	equ	0xFF3
   527                           intcon	equ	0xFF2
   528                           fsr0h	equ	0xFEA
   529                           fsr0l	equ	0xFE9
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           fsr2h	equ	0xFDA
   533                           fsr2l	equ	0xFD9
   534                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _RutinaISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _RutinaISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RutinaISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RutinaISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RutinaISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RutinaISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RutinaISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RutinaISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RutinaISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _ConfigInit
 ---------------------------------------------------------------------------------
 (1) _ConfigInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _RutinaISR                                           14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInit

 _RutinaISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      11       1       18.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      20        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Aug 21 19:43:12 2017

                    l700 00F2                      l702 00F6                      l706 00FA  
                    l696 00EA                      l698 00EE                     _LATB 000F8A  
                   i2l28 00A8                     _TMR0 000FD6                     _main 00E4  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0012                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___param_bank 000000  
          __CFG_PLLDIV$5 000000                    ?_main 0001                    _T0CON 000FD5  
                  i2l690 008E                    i2l682 006A                    i2l686 007C  
             _ConfigInit 013A                    _PORTB 000F81                    _TRISB 000F93  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 0116             __end_of_main 0116  
                 ??_main 000F            __activetblptr 000002                   _estado 0011  
            ?_ConfigInit 0001             __pdataCOMRAM 0011                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8       __size_of_RutinaISR 00DC  
             __accesstop 0060  __end_of__initialization 012C            ___rparam_used 000001  
         __pcstackCOMRAM 0001      __size_of_ConfigInit 001C        __end_of_RutinaISR 00E4  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0116  
                __ramtop 0800                  __ptext0 00E4                  __ptext1 013A  
         __pintcode_body 0012     end_of_initialization 012C            __Lmediumconst 0000  
                int_func 0012             ??_ConfigInit 000F       __end_of_ConfigInit 0156  
          __pidataCOMRAM 0156      start_initialization 0116              __pbssCOMRAM 000F  
              _RutinaISR 0008                __pintcode 0008               ?_RutinaISR 0001  
               __Hrparam 0000                 __Lrparam 0000              ??_RutinaISR 0001  
               _contador 000F            __size_of_main 0032                 int$flags 0012  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
     __CFG_FOSC$HSPLL_HS 000000  
