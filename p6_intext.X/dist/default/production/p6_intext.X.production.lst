

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Tue Aug 22 09:49:07 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _INTCON2bits	set	4081
    50  0000                     _INTCONbits	set	4082
    51  0000                     _ADCON1	set	4033
    52  0000                     _LATBbits	set	3978
    53  0000                     _TRISBbits	set	3987
    54  0000                     _INT0IF	set	32657
    55                           
    56                           ; #config settings
    57  0000                     
    58                           	psect	cinit
    59  0000D2                     __pcinit:
    60                           	opt stack 0
    61  0000D2                     start_initialization:
    62                           	opt stack 0
    63  0000D2                     __initialization:
    64                           	opt stack 0
    65  0000D2                     end_of_initialization:
    66                           	opt stack 0
    67  0000D2                     __end_of__initialization:
    68                           	opt stack 0
    69  0000D2  9011               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    70  0000D4  9211               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    71  0000D6  0100               	movlb	0
    72  0000D8  EF6E  F000         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	opt stack 0
    77  000001                     ??_ISR_INT0:
    78  000001                     
    79                           ; 1 bytes @ 0x0
    80  000001                     	ds	16
    81  000011                     
    82                           ; 1 bytes @ 0x10
    83 ;;
    84 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    85 ;;
    86 ;; *************** function _main *****************
    87 ;; Defined at:
    88 ;;		line 55 in file "p6_intext.c"
    89 ;; Parameters:    Size  Location     Type
    90 ;;		None
    91 ;; Auto vars:     Size  Location     Type
    92 ;;		None
    93 ;; Return value:  Size  Location     Type
    94 ;;                  1    wreg      void 
    95 ;; Registers used:
    96 ;;		wreg, status,2, status,0, cstack
    97 ;; Tracked objects:
    98 ;;		On entry : 0/0
    99 ;;		On exit  : 0/0
   100 ;;		Unchanged: 0/0
   101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   102 ;;      Params:         0       0       0       0       0       0       0       0       0
   103 ;;      Locals:         0       0       0       0       0       0       0       0       0
   104 ;;      Temps:          0       0       0       0       0       0       0       0       0
   105 ;;      Totals:         0       0       0       0       0       0       0       0       0
   106 ;;Total ram usage:        0 bytes
   107 ;; Hardware stack levels required when called:    2
   108 ;; This function calls:
   109 ;;		_ConfigInit
   110 ;; This function is called by:
   111 ;;		Startup code after reset
   112 ;; This function uses a non-reentrant model
   113 ;;
   114                           
   115                           	psect	text0
   116  0000DC                     __ptext0:
   117                           	opt stack 0
   118  0000DC                     _main:
   119                           	opt stack 29
   120                           
   121                           ;p6_intext.c: 56: ConfigInit();
   122                           
   123                           ;incstack = 0
   124  0000DC  EC5E  F000         	call	_ConfigInit	;wreg free
   125  0000E0                     l28:
   126  0000E0  D7FF               	goto	l28
   127  0000E2                     __end_of_main:
   128                           	opt stack 0
   129                           
   130 ;; *************** function _ConfigInit *****************
   131 ;; Defined at:
   132 ;;		line 19 in file "p6_intext.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;		None
   137 ;; Return value:  Size  Location     Type
   138 ;;                  1    wreg      void 
   139 ;; Registers used:
   140 ;;		wreg, status,2, status,0
   141 ;; Tracked objects:
   142 ;;		On entry : 0/0
   143 ;;		On exit  : 0/0
   144 ;;		Unchanged: 0/0
   145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   146 ;;      Params:         0       0       0       0       0       0       0       0       0
   147 ;;      Locals:         0       0       0       0       0       0       0       0       0
   148 ;;      Temps:          0       0       0       0       0       0       0       0       0
   149 ;;      Totals:         0       0       0       0       0       0       0       0       0
   150 ;;Total ram usage:        0 bytes
   151 ;; Hardware stack levels used:    1
   152 ;; Hardware stack levels required when called:    1
   153 ;; This function calls:
   154 ;;		Nothing
   155 ;; This function is called by:
   156 ;;		_main
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text1
   161  0000BC                     __ptext1:
   162                           	opt stack 0
   163  0000BC                     _ConfigInit:
   164                           	opt stack 29
   165                           
   166                           ;p6_intext.c: 23: TRISBbits.RB0 = 1;
   167                           
   168                           ;incstack = 0
   169  0000BC  8093               	bsf	3987,0,c	;volatile
   170                           
   171                           ;p6_intext.c: 24: TRISBbits.RB1 = 0;
   172  0000BE  9293               	bcf	3987,1,c	;volatile
   173                           
   174                           ;p6_intext.c: 25: LATBbits.LB1 = 0;
   175  0000C0  928A               	bcf	3978,1,c	;volatile
   176                           
   177                           ;p6_intext.c: 27: ADCON1 |= 0x0F;
   178  0000C2  0E0F               	movlw	15
   179  0000C4  12C1               	iorwf	4033,f,c	;volatile
   180                           
   181                           ;p6_intext.c: 34: INTCONbits.GIE = 1;
   182  0000C6  8EF2               	bsf	intcon,7,c	;volatile
   183                           
   184                           ;p6_intext.c: 36: INTCONbits.PEIE = 1;
   185  0000C8  8CF2               	bsf	intcon,6,c	;volatile
   186                           
   187                           ;p6_intext.c: 38: INTCONbits.INT0IE = 1;
   188  0000CA  88F2               	bsf	intcon,4,c	;volatile
   189                           
   190                           ;p6_intext.c: 40: INTCONbits.INT0IF = 0;
   191  0000CC  92F2               	bcf	intcon,1,c	;volatile
   192                           
   193                           ;p6_intext.c: 42: INTCON2bits.INTEDG0 = 1;
   194  0000CE  8CF1               	bsf	intcon2,6,c	;volatile
   195  0000D0  0012               	return		;funcret
   196  0000D2                     __end_of_ConfigInit:
   197                           	opt stack 0
   198                           intcon	equ	0xFF2
   199                           intcon2	equ	0xFF1
   200                           
   201 ;; *************** function _ISR_INT0 *****************
   202 ;; Defined at:
   203 ;;		line 45 in file "p6_intext.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         0       0       0       0       0       0       0       0       0
   219 ;;      Temps:         16       0       0       0       0       0       0       0       0
   220 ;;      Totals:        16       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:       16 bytes
   222 ;; Hardware stack levels used:    1
   223 ;; This function calls:
   224 ;;		Nothing
   225 ;; This function is called by:
   226 ;;		Interrupt level 2
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	intcode
   231  000008                     __pintcode:
   232                           	opt stack 0
   233  000008                     _ISR_INT0:
   234                           	opt stack 29
   235                           
   236                           ;incstack = 0
   237  000008  8211               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   238  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   239                           intcon	equ	0xFF2
   240                           intcon2	equ	0xFF1
   241                           
   242                           	psect	intcode_body
   243  000012                     __pintcode_body:
   244                           	opt stack 29
   245  000012                     int_func:
   246                           	opt stack 29
   247  000012  0006               	pop		; remove dummy address from shadow register refresh
   248  000014  CFFA F003          	movff	pclath,??_ISR_INT0+2
   249  000018  CFFB F004          	movff	pclatu,??_ISR_INT0+3
   250  00001C  CFE9 F005          	movff	fsr0l,??_ISR_INT0+4
   251  000020  CFEA F006          	movff	fsr0h,??_ISR_INT0+5
   252  000024  CFE1 F007          	movff	fsr1l,??_ISR_INT0+6
   253  000028  CFE2 F008          	movff	fsr1h,??_ISR_INT0+7
   254  00002C  CFD9 F009          	movff	fsr2l,??_ISR_INT0+8
   255  000030  CFDA F00A          	movff	fsr2h,??_ISR_INT0+9
   256  000034  CFF3 F00B          	movff	prodl,??_ISR_INT0+10
   257  000038  CFF4 F00C          	movff	prodh,??_ISR_INT0+11
   258  00003C  CFF6 F00D          	movff	tblptrl,??_ISR_INT0+12
   259  000040  CFF7 F00E          	movff	tblptrh,??_ISR_INT0+13
   260  000044  CFF8 F00F          	movff	tblptru,??_ISR_INT0+14
   261  000048  CFF5 F010          	movff	tablat,??_ISR_INT0+15
   262                           
   263                           ;p6_intext.c: 46: if(INT0IF){
   264  00004C  A2F2               	btfss	intcon,1,c	;volatile
   265  00004E  D018               	goto	i2l23
   266                           
   267                           ;p6_intext.c: 48: LATBbits.LB1 =! LATBbits.LB1;
   268  000050  B28A               	btfsc	3978,1,c	;volatile
   269  000052  D003               	goto	i2u2_40
   270  000054  6A01               	clrf	??_ISR_INT0& (0+255),c
   271  000056  2A01               	incf	??_ISR_INT0& (0+255),f,c
   272  000058  D001               	goto	i2u3_48
   273  00005A                     i2u2_40:
   274  00005A  6A01               	clrf	??_ISR_INT0& (0+255),c
   275  00005C                     i2u3_48:
   276  00005C  4601               	rlncf	??_ISR_INT0,f,c
   277  00005E  508A               	movf	3978,w,c	;volatile
   278  000060  1801               	xorwf	??_ISR_INT0,w,c
   279  000062  0BFD               	andlw	-3
   280  000064  1801               	xorwf	??_ISR_INT0,w,c
   281  000066  6E8A               	movwf	3978,c	;volatile
   282                           
   283                           ;p6_intext.c: 49: _delay((unsigned long)((250)*(48000000/4000.0)));
   284  000068  0E10               	movlw	16
   285  00006A  6E02               	movwf	(??_ISR_INT0+1)& (0+255),c
   286  00006C  0E39               	movlw	57
   287  00006E  6E01               	movwf	??_ISR_INT0& (0+255),c
   288  000070  0E0E               	movlw	14
   289  000072                     i2u4_47:
   290  000072  2EE8               	decfsz	wreg,f,c
   291  000074  D7FE               	bra	i2u4_47
   292  000076  2E01               	decfsz	??_ISR_INT0& (0+255),f,c
   293  000078  D7FC               	bra	i2u4_47
   294  00007A  2E02               	decfsz	(??_ISR_INT0+1)& (0+255),f,c
   295  00007C  D7FA               	bra	i2u4_47
   296                           
   297                           ;p6_intext.c: 50: INTCONbits.INT0IF = 0;
   298  00007E  92F2               	bcf	intcon,1,c	;volatile
   299  000080                     i2l23:
   300  000080  C010  FFF5         	movff	??_ISR_INT0+15,tablat
   301  000084  C00F  FFF8         	movff	??_ISR_INT0+14,tblptru
   302  000088  C00E  FFF7         	movff	??_ISR_INT0+13,tblptrh
   303  00008C  C00D  FFF6         	movff	??_ISR_INT0+12,tblptrl
   304  000090  C00C  FFF4         	movff	??_ISR_INT0+11,prodh
   305  000094  C00B  FFF3         	movff	??_ISR_INT0+10,prodl
   306  000098  C00A  FFDA         	movff	??_ISR_INT0+9,fsr2h
   307  00009C  C009  FFD9         	movff	??_ISR_INT0+8,fsr2l
   308  0000A0  C008  FFE2         	movff	??_ISR_INT0+7,fsr1h
   309  0000A4  C007  FFE1         	movff	??_ISR_INT0+6,fsr1l
   310  0000A8  C006  FFEA         	movff	??_ISR_INT0+5,fsr0h
   311  0000AC  C005  FFE9         	movff	??_ISR_INT0+4,fsr0l
   312  0000B0  C004  FFFB         	movff	??_ISR_INT0+3,pclatu
   313  0000B4  C003  FFFA         	movff	??_ISR_INT0+2,pclath
   314  0000B8  9211               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   315  0000BA  0011               	retfie		f
   316  0000BC                     __end_of_ISR_INT0:
   317                           	opt stack 0
   318  0000                     pclatu	equ	0xFFB
   319                           pclath	equ	0xFFA
   320                           tblptru	equ	0xFF8
   321                           tblptrh	equ	0xFF7
   322                           tblptrl	equ	0xFF6
   323                           tablat	equ	0xFF5
   324                           prodh	equ	0xFF4
   325                           prodl	equ	0xFF3
   326                           intcon	equ	0xFF2
   327                           intcon2	equ	0xFF1
   328                           fsr0h	equ	0xFEA
   329                           fsr0l	equ	0xFE9
   330                           wreg	equ	0xFE8
   331                           fsr1h	equ	0xFE2
   332                           fsr1l	equ	0xFE1
   333                           fsr2h	equ	0xFDA
   334                           fsr2l	equ	0xFD9
   335                           pclatu	equ	0xFFB
   336                           pclath	equ	0xFFA
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           prodh	equ	0xFF4
   342                           prodl	equ	0xFF3
   343                           intcon	equ	0xFF2
   344                           intcon2	equ	0xFF1
   345                           fsr0h	equ	0xFEA
   346                           fsr0l	equ	0xFE9
   347                           wreg	equ	0xFE8
   348                           fsr1h	equ	0xFE2
   349                           fsr1l	equ	0xFE1
   350                           fsr2h	equ	0xFDA
   351                           fsr2l	equ	0xFD9
   352                           
   353                           	psect	rparam
   354  0000                     pclatu	equ	0xFFB
   355                           pclath	equ	0xFFA
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           prodh	equ	0xFF4
   361                           prodl	equ	0xFF3
   362                           intcon	equ	0xFF2
   363                           intcon2	equ	0xFF1
   364                           fsr0h	equ	0xFEA
   365                           fsr0l	equ	0xFE9
   366                           wreg	equ	0xFE8
   367                           fsr1h	equ	0xFE2
   368                           fsr1l	equ	0xFE1
   369                           fsr2h	equ	0xFDA
   370                           fsr2l	equ	0xFD9
   371                           
   372                           	psect	temp
   373  000011                     btemp:
   374                           	opt stack 0
   375  000011                     	ds	1
   376  0000                     int$flags	set	btemp
   377                           pclatu	equ	0xFFB
   378                           pclath	equ	0xFFA
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           prodh	equ	0xFF4
   384                           prodl	equ	0xFF3
   385                           intcon	equ	0xFF2
   386                           intcon2	equ	0xFF1
   387                           fsr0h	equ	0xFEA
   388                           fsr0l	equ	0xFE9
   389                           wreg	equ	0xFE8
   390                           fsr1h	equ	0xFE2
   391                           fsr1l	equ	0xFE1
   392                           fsr2h	equ	0xFDA
   393                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_INT0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_INT0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_INT0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_INT0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_INT0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_INT0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_INT0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_INT0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_INT0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _ConfigInit
 ---------------------------------------------------------------------------------
 (1) _ConfigInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_INT0                                            16    16      0       0
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInit

 _ISR_INT0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     10      10       1       17.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Tue Aug 22 09:49:07 2017

                     l28 00E0                      wreg 000FE8                     i2l23 0080  
                   _main 00DC                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0011                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
           ___param_bank 000000            __CFG_PLLDIV$5 000000                    ?_main 0001  
             _ConfigInit 00BC         __end_of_ISR_INT0 00BC                    pclath 000FFA  
                  tablat 000FF5           __CFG_MCLRE$OFF 000000          __initialization 00D2  
           __end_of_main 00E2                   ??_main 0011            __activetblptr 000000  
                 _ADCON1 000FC1                   _INT0IF 007F91                   i2u2_40 005A  
                 i2u3_48 005C                   i2u4_47 0072              ?_ConfigInit 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 00D2            ___rparam_used 000001  
              ?_ISR_INT0 0001           __pcstackCOMRAM 0001      __size_of_ConfigInit 0016  
             ??_ISR_INT0 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00D2                  __ramtop 0800                  __ptext0 00DC  
                __ptext1 00BC           __pintcode_body 0012     end_of_initialization 00D2  
                int_func 0012             ??_ConfigInit 0011                _TRISBbits 000F93  
     __end_of_ConfigInit 00D2        __size_of_ISR_INT0 00B4      start_initialization 00D2  
              __pintcode 0008                 _LATBbits 000F8A                 _ISR_INT0 0008  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0006                 int$flags 0011    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2                 intlevel2 0000       __CFG_FOSC$HSPLL_HS 000000  
