

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Aug 21 21:43:45 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _LATBbits	set	3978
    50  0000                     _TRISBbits	set	3987
    51  0000                     _INTCON2bits	set	4081
    52  0000                     _INTCONbits	set	4082
    53  0000                     _INT0IF	set	32657
    54                           
    55                           ; #config settings
    56  0000                     
    57                           	psect	cinit
    58  0000A2                     __pcinit:
    59                           	opt stack 0
    60  0000A2                     start_initialization:
    61                           	opt stack 0
    62  0000A2                     __initialization:
    63                           	opt stack 0
    64  0000A2                     end_of_initialization:
    65                           	opt stack 0
    66  0000A2                     __end_of__initialization:
    67                           	opt stack 0
    68  0000A2  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    69  0000A4  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    70  0000A6  0100               	movlb	0
    71  0000A8  EF56  F000         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74  000001                     __pcstackCOMRAM:
    75                           	opt stack 0
    76  000001                     ??_ISR_INT0:
    77  000001                     
    78                           ; 1 bytes @ 0x0
    79  000001                     	ds	14
    80  00000F                     
    81                           ; 1 bytes @ 0xE
    82 ;;
    83 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    84 ;;
    85 ;; *************** function _main *****************
    86 ;; Defined at:
    87 ;;		line 48 in file "p6_intext.c"
    88 ;; Parameters:    Size  Location     Type
    89 ;;		None
    90 ;; Auto vars:     Size  Location     Type
    91 ;;		None
    92 ;; Return value:  Size  Location     Type
    93 ;;                  1    wreg      void 
    94 ;; Registers used:
    95 ;;		cstack
    96 ;; Tracked objects:
    97 ;;		On entry : 0/0
    98 ;;		On exit  : 0/0
    99 ;;		Unchanged: 0/0
   100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   101 ;;      Params:         0       0       0       0       0       0       0       0       0
   102 ;;      Locals:         0       0       0       0       0       0       0       0       0
   103 ;;      Temps:          0       0       0       0       0       0       0       0       0
   104 ;;      Totals:         0       0       0       0       0       0       0       0       0
   105 ;;Total ram usage:        0 bytes
   106 ;; Hardware stack levels required when called:    2
   107 ;; This function calls:
   108 ;;		_ConfigInit
   109 ;; This function is called by:
   110 ;;		Startup code after reset
   111 ;; This function uses a non-reentrant model
   112 ;;
   113                           
   114                           	psect	text0
   115  0000AC                     __ptext0:
   116                           	opt stack 0
   117  0000AC                     _main:
   118                           	opt stack 29
   119                           
   120                           ;p6_intext.c: 49: ConfigInit();
   121                           
   122                           ;incstack = 0
   123  0000AC  EC49  F000         	call	_ConfigInit	;wreg free
   124  0000B0                     l24:
   125  0000B0  D7FF               	goto	l24
   126  0000B2                     __end_of_main:
   127                           	opt stack 0
   128                           
   129 ;; *************** function _ConfigInit *****************
   130 ;; Defined at:
   131 ;;		line 19 in file "p6_intext.c"
   132 ;; Parameters:    Size  Location     Type
   133 ;;		None
   134 ;; Auto vars:     Size  Location     Type
   135 ;;		None
   136 ;; Return value:  Size  Location     Type
   137 ;;                  1    wreg      void 
   138 ;; Registers used:
   139 ;;		None
   140 ;; Tracked objects:
   141 ;;		On entry : 0/0
   142 ;;		On exit  : 0/0
   143 ;;		Unchanged: 0/0
   144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   145 ;;      Params:         0       0       0       0       0       0       0       0       0
   146 ;;      Locals:         0       0       0       0       0       0       0       0       0
   147 ;;      Temps:          0       0       0       0       0       0       0       0       0
   148 ;;      Totals:         0       0       0       0       0       0       0       0       0
   149 ;;Total ram usage:        0 bytes
   150 ;; Hardware stack levels used:    1
   151 ;; Hardware stack levels required when called:    1
   152 ;; This function calls:
   153 ;;		Nothing
   154 ;; This function is called by:
   155 ;;		_main
   156 ;; This function uses a non-reentrant model
   157 ;;
   158                           
   159                           	psect	text1
   160  000092                     __ptext1:
   161                           	opt stack 0
   162  000092                     _ConfigInit:
   163                           	opt stack 29
   164                           
   165                           ;p6_intext.c: 23: TRISBbits.RB0 = 1;
   166                           
   167                           ;incstack = 0
   168  000092  8093               	bsf	3987,0,c	;volatile
   169                           
   170                           ;p6_intext.c: 24: TRISBbits.RB1 = 0;
   171  000094  9293               	bcf	3987,1,c	;volatile
   172                           
   173                           ;p6_intext.c: 25: LATBbits.LB1 = 0;
   174  000096  928A               	bcf	3978,1,c	;volatile
   175                           
   176                           ;p6_intext.c: 31: INTCONbits.GIE = 1;
   177  000098  8EF2               	bsf	intcon,7,c	;volatile
   178                           
   179                           ;p6_intext.c: 33: INTCONbits.INT0IE = 1;
   180  00009A  88F2               	bsf	intcon,4,c	;volatile
   181                           
   182                           ;p6_intext.c: 35: INTCONbits.INT0IF = 0;
   183  00009C  92F2               	bcf	intcon,1,c	;volatile
   184                           
   185                           ;p6_intext.c: 37: INTCON2bits.INTEDG0 = 0;
   186  00009E  9CF1               	bcf	intcon2,6,c	;volatile
   187  0000A0  0012               	return		;funcret
   188  0000A2                     __end_of_ConfigInit:
   189                           	opt stack 0
   190                           intcon	equ	0xFF2
   191                           intcon2	equ	0xFF1
   192                           
   193 ;; *************** function _ISR_INT0 *****************
   194 ;; Defined at:
   195 ;;		line 40 in file "p6_intext.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		None
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   209 ;;      Params:         0       0       0       0       0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0       0       0       0       0
   211 ;;      Temps:         14       0       0       0       0       0       0       0       0
   212 ;;      Totals:        14       0       0       0       0       0       0       0       0
   213 ;;Total ram usage:       14 bytes
   214 ;; Hardware stack levels used:    1
   215 ;; This function calls:
   216 ;;		Nothing
   217 ;; This function is called by:
   218 ;;		Interrupt level 2
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           	psect	intcode
   223  000008                     __pintcode:
   224                           	opt stack 0
   225  000008                     _ISR_INT0:
   226                           	opt stack 29
   227                           
   228                           ;incstack = 0
   229  000008  820F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   230  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   231                           intcon	equ	0xFF2
   232                           intcon2	equ	0xFF1
   233                           
   234                           	psect	intcode_body
   235  000012                     __pintcode_body:
   236                           	opt stack 29
   237  000012                     int_func:
   238                           	opt stack 29
   239  000012  0006               	pop		; remove dummy address from shadow register refresh
   240  000014  CFFA F001          	movff	pclath,??_ISR_INT0
   241  000018  CFFB F002          	movff	pclatu,??_ISR_INT0+1
   242  00001C  CFE9 F003          	movff	fsr0l,??_ISR_INT0+2
   243  000020  CFEA F004          	movff	fsr0h,??_ISR_INT0+3
   244  000024  CFE1 F005          	movff	fsr1l,??_ISR_INT0+4
   245  000028  CFE2 F006          	movff	fsr1h,??_ISR_INT0+5
   246  00002C  CFD9 F007          	movff	fsr2l,??_ISR_INT0+6
   247  000030  CFDA F008          	movff	fsr2h,??_ISR_INT0+7
   248  000034  CFF3 F009          	movff	prodl,??_ISR_INT0+8
   249  000038  CFF4 F00A          	movff	prodh,??_ISR_INT0+9
   250  00003C  CFF6 F00B          	movff	tblptrl,??_ISR_INT0+10
   251  000040  CFF7 F00C          	movff	tblptrh,??_ISR_INT0+11
   252  000044  CFF8 F00D          	movff	tblptru,??_ISR_INT0+12
   253  000048  CFF5 F00E          	movff	tablat,??_ISR_INT0+13
   254                           
   255                           ;p6_intext.c: 41: if(INT0IF){
   256  00004C  A2F2               	btfss	intcon,1,c	;volatile
   257  00004E  D003               	goto	i2l19
   258                           
   259                           ;p6_intext.c: 42: INTCONbits.INT0IF = 0;
   260  000050  92F2               	bcf	intcon,1,c	;volatile
   261                           
   262                           ;p6_intext.c: 43: LATBbits.LATB1 = 1;
   263  000052  828A               	bsf	3978,1,c	;volatile
   264                           
   265                           ;p6_intext.c: 44: INT0IF = 0;
   266  000054  92F2               	bcf	intcon,1,c	;volatile
   267  000056                     i2l19:
   268  000056  C00E  FFF5         	movff	??_ISR_INT0+13,tablat
   269  00005A  C00D  FFF8         	movff	??_ISR_INT0+12,tblptru
   270  00005E  C00C  FFF7         	movff	??_ISR_INT0+11,tblptrh
   271  000062  C00B  FFF6         	movff	??_ISR_INT0+10,tblptrl
   272  000066  C00A  FFF4         	movff	??_ISR_INT0+9,prodh
   273  00006A  C009  FFF3         	movff	??_ISR_INT0+8,prodl
   274  00006E  C008  FFDA         	movff	??_ISR_INT0+7,fsr2h
   275  000072  C007  FFD9         	movff	??_ISR_INT0+6,fsr2l
   276  000076  C006  FFE2         	movff	??_ISR_INT0+5,fsr1h
   277  00007A  C005  FFE1         	movff	??_ISR_INT0+4,fsr1l
   278  00007E  C004  FFEA         	movff	??_ISR_INT0+3,fsr0h
   279  000082  C003  FFE9         	movff	??_ISR_INT0+2,fsr0l
   280  000086  C002  FFFB         	movff	??_ISR_INT0+1,pclatu
   281  00008A  C001  FFFA         	movff	??_ISR_INT0,pclath
   282  00008E  920F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   283  000090  0011               	retfie		f
   284  000092                     __end_of_ISR_INT0:
   285                           	opt stack 0
   286  0000                     pclatu	equ	0xFFB
   287                           pclath	equ	0xFFA
   288                           tblptru	equ	0xFF8
   289                           tblptrh	equ	0xFF7
   290                           tblptrl	equ	0xFF6
   291                           tablat	equ	0xFF5
   292                           prodh	equ	0xFF4
   293                           prodl	equ	0xFF3
   294                           intcon	equ	0xFF2
   295                           intcon2	equ	0xFF1
   296                           fsr0h	equ	0xFEA
   297                           fsr0l	equ	0xFE9
   298                           fsr1h	equ	0xFE2
   299                           fsr1l	equ	0xFE1
   300                           fsr2h	equ	0xFDA
   301                           fsr2l	equ	0xFD9
   302                           pclatu	equ	0xFFB
   303                           pclath	equ	0xFFA
   304                           tblptru	equ	0xFF8
   305                           tblptrh	equ	0xFF7
   306                           tblptrl	equ	0xFF6
   307                           tablat	equ	0xFF5
   308                           prodh	equ	0xFF4
   309                           prodl	equ	0xFF3
   310                           intcon	equ	0xFF2
   311                           intcon2	equ	0xFF1
   312                           fsr0h	equ	0xFEA
   313                           fsr0l	equ	0xFE9
   314                           fsr1h	equ	0xFE2
   315                           fsr1l	equ	0xFE1
   316                           fsr2h	equ	0xFDA
   317                           fsr2l	equ	0xFD9
   318                           
   319                           	psect	rparam
   320  0000                     pclatu	equ	0xFFB
   321                           pclath	equ	0xFFA
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           prodh	equ	0xFF4
   327                           prodl	equ	0xFF3
   328                           intcon	equ	0xFF2
   329                           intcon2	equ	0xFF1
   330                           fsr0h	equ	0xFEA
   331                           fsr0l	equ	0xFE9
   332                           fsr1h	equ	0xFE2
   333                           fsr1l	equ	0xFE1
   334                           fsr2h	equ	0xFDA
   335                           fsr2l	equ	0xFD9
   336                           
   337                           	psect	temp
   338  00000F                     btemp:
   339                           	opt stack 0
   340  00000F                     	ds	1
   341  0000                     int$flags	set	btemp
   342                           pclatu	equ	0xFFB
   343                           pclath	equ	0xFFA
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           prodh	equ	0xFF4
   349                           prodl	equ	0xFF3
   350                           intcon	equ	0xFF2
   351                           intcon2	equ	0xFF1
   352                           fsr0h	equ	0xFEA
   353                           fsr0l	equ	0xFE9
   354                           fsr1h	equ	0xFE2
   355                           fsr1l	equ	0xFE1
   356                           fsr2h	equ	0xFDA
   357                           fsr2l	equ	0xFD9


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_INT0 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_INT0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_INT0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_INT0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_INT0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_INT0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_INT0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_INT0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_INT0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _ConfigInit
 ---------------------------------------------------------------------------------
 (1) _ConfigInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_INT0                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigInit

 _ISR_INT0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      E       E       1       14.9%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3            F4      0       0      11        0.0%
BANK3               F4      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3F3      0       0      22        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Aug 21 21:43:45 2017

                     l24 00B0                     i2l19 0056                     _main 00AC  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 000F                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___param_bank 000000  
          __CFG_PLLDIV$5 000000                    ?_main 0001               _ConfigInit 0092  
       __end_of_ISR_INT0 0092                    pclath 000FFA                    tablat 000FF5  
         __CFG_MCLRE$OFF 000000          __initialization 00A2             __end_of_main 00B2  
                 ??_main 000F            __activetblptr 000000                   _INT0IF 007F91  
            ?_ConfigInit 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 00A2  
          ___rparam_used 000001                ?_ISR_INT0 0001           __pcstackCOMRAM 0001  
    __size_of_ConfigInit 0010               ??_ISR_INT0 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00A2                  __ramtop 0800  
                __ptext0 00AC                  __ptext1 0092           __pintcode_body 0012  
   end_of_initialization 00A2                  int_func 0012             ??_ConfigInit 000F  
              _TRISBbits 000F93       __end_of_ConfigInit 00A2        __size_of_ISR_INT0 008A  
    start_initialization 00A2                __pintcode 0008                 _LATBbits 000F8A  
               _ISR_INT0 0008              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0006                 int$flags 000F  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
     __CFG_FOSC$HSPLL_HS 000000  
