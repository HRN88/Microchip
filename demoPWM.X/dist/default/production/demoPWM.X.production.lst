

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 01 17:26:49 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.42
    16                           ; Generated 13/04/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _TMR0	set	4054
    50  0000                     _CCP2CONbits	set	4026
    51  0000                     _T2CONbits	set	4042
    52  0000                     _T2CON	set	4042
    53  0000                     _LATC	set	3979
    54  0000                     _TRISC	set	3988
    55  0000                     _CCP2CON	set	4026
    56  0000                     _CCPR2L	set	4027
    57  0000                     _PR2	set	4043
    58  0000                     _TMR0L	set	4054
    59  0000                     _TMR0H	set	4055
    60  0000                     _T0CONbits	set	4053
    61  0000                     _TXREG	set	4013
    62  0000                     _SPBRGH	set	4016
    63  0000                     _SPBRG	set	4015
    64  0000                     _BAUDCONbits	set	4024
    65  0000                     _INTCONbits	set	4082
    66  0000                     _PIE1bits	set	3997
    67  0000                     _TRISCbits	set	3988
    68  0000                     _RCSTAbits	set	4011
    69  0000                     _TXSTAbits	set	4012
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  007D8A                     __pcinit:
    75                           	opt stack 0
    76  007D8A                     start_initialization:
    77                           	opt stack 0
    78  007D8A                     __initialization:
    79                           	opt stack 0
    80  007D8A                     end_of_initialization:
    81                           	opt stack 0
    82  007D8A                     __end_of__initialization:
    83                           	opt stack 0
    84  007D8A  0100               	movlb	0
    85  007D8C  EFFF  F03E         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	cstackCOMRAM
    88  000001                     __pcstackCOMRAM:
    89                           	opt stack 0
    90  000001                     ?___lmul:
    91                           	opt stack 0
    92  000001                     ___lmul@multiplier:
    93                           	opt stack 0
    94                           
    95                           ; 4 bytes @ 0x0
    96  000001                     	ds	4
    97  000005                     ___lmul@multiplicand:
    98                           	opt stack 0
    99                           
   100                           ; 4 bytes @ 0x4
   101  000005                     	ds	4
   102  000009                     ___lmul@product:
   103                           	opt stack 0
   104                           
   105                           ; 4 bytes @ 0x8
   106  000009                     	ds	4
   107  00000D                     ?___aldiv:
   108                           	opt stack 0
   109  00000D                     ___aldiv@dividend:
   110                           	opt stack 0
   111                           
   112                           ; 4 bytes @ 0xC
   113  00000D                     	ds	4
   114  000011                     ___aldiv@divisor:
   115                           	opt stack 0
   116                           
   117                           ; 4 bytes @ 0x10
   118  000011                     	ds	4
   119  000015                     ___aldiv@counter:
   120                           	opt stack 0
   121                           
   122                           ; 1 bytes @ 0x14
   123  000015                     	ds	1
   124  000016                     ___aldiv@sign:
   125                           	opt stack 0
   126                           
   127                           ; 1 bytes @ 0x15
   128  000016                     	ds	1
   129  000017                     ___aldiv@quotient:
   130                           	opt stack 0
   131                           
   132                           ; 4 bytes @ 0x16
   133  000017                     	ds	4
   134  00001B                     dc_PWM@n:
   135                           	opt stack 0
   136                           
   137                           ; 4 bytes @ 0x1A
   138  00001B                     	ds	4
   139  00001F                     ??_dc_PWM:
   140                           
   141                           ; 1 bytes @ 0x1E
   142  00001F                     	ds	5
   143  000024                     dc_PWM@dc:
   144                           	opt stack 0
   145                           
   146                           ; 4 bytes @ 0x23
   147  000024                     	ds	4
   148  000028                     ??_main:
   149                           
   150                           ; 1 bytes @ 0x27
   151  000028                     	ds	1
   152  000029                     main@i_493:
   153                           	opt stack 0
   154                           
   155                           ; 2 bytes @ 0x28
   156  000029                     	ds	2
   157                           
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 99 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;  i               2   40[COMRAM] int 
   168 ;;  i               2    0        int 
   169 ;; Return value:  Size  Location     Type
   170 ;;                  1    wreg      void 
   171 ;; Registers used:
   172 ;;		wreg, status,2, status,0, cstack
   173 ;; Tracked objects:
   174 ;;		On entry : 0/0
   175 ;;		On exit  : 0/0
   176 ;;		Unchanged: 0/0
   177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   178 ;;      Params:         0       0       0       0       0       0       0       0       0
   179 ;;      Locals:         2       0       0       0       0       0       0       0       0
   180 ;;      Temps:          1       0       0       0       0       0       0       0       0
   181 ;;      Totals:         3       0       0       0       0       0       0       0       0
   182 ;;Total ram usage:        3 bytes
   183 ;; Hardware stack levels required when called:    2
   184 ;; This function calls:
   185 ;;		_PWM_config
   186 ;;		_dc_PWM
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           	psect	text0
   193  007DFE                     __ptext0:
   194                           	opt stack 0
   195  007DFE                     _main:
   196                           	opt stack 29
   197                           
   198                           ;main.c: 100: PWM_config();
   199                           
   200                           ;incstack = 0
   201  007DFE  ECC8  F03E         	call	_PWM_config	;wreg free
   202  007E02                     l958:
   203                           
   204                           ;main.c: 104: for( int i = 0 ; i<=99; i+=1){
   205  007E02  0E00               	movlw	0
   206  007E04  6E2A               	movwf	main@i_493+1,c
   207  007E06  0E00               	movlw	0
   208  007E08  6E29               	movwf	main@i_493,c
   209  007E0A                     l960:
   210  007E0A  BE2A               	btfsc	main@i_493+1,7,c
   211  007E0C  D006               	goto	l964
   212  007E0E  502A               	movf	main@i_493+1,w,c
   213  007E10  E1F8               	bnz	l958
   214  007E12  0E64               	movlw	100
   215  007E14  5C29               	subwf	main@i_493,w,c
   216  007E16  B0D8               	btfsc	status,0,c
   217  007E18  D7F4               	goto	l958
   218  007E1A                     l964:
   219                           
   220                           ;main.c: 105: dc_PWM(i);
   221  007E1A  C029  F01B         	movff	main@i_493,dc_PWM@n
   222  007E1E  C02A  F01C         	movff	main@i_493+1,dc_PWM@n+1
   223  007E22  0E00               	movlw	0
   224  007E24  BE1C               	btfsc	dc_PWM@n+1,7,c
   225  007E26  0EFF               	movlw	-1
   226  007E28  6E1D               	movwf	dc_PWM@n+2,c
   227  007E2A  6E1E               	movwf	dc_PWM@n+3,c
   228  007E2C  EC45  F03F         	call	_dc_PWM	;wreg free
   229                           
   230                           ;main.c: 106: _delay((unsigned long)((5)*(24000000/4000.0)));
   231  007E30  0E27               	movlw	39
   232  007E32  6E28               	movwf	??_main& (0+255),c
   233  007E34  0EF5               	movlw	245
   234  007E36                     u377:
   235  007E36  2EE8               	decfsz	wreg,f,c
   236  007E38  D7FE               	bra	u377
   237  007E3A  2E28               	decfsz	??_main& (0+255),f,c
   238  007E3C  D7FC               	bra	u377
   239  007E3E  F000               	nop	
   240                           
   241                           ;main.c: 107: if(i == 99){
   242  007E40  0E63               	movlw	99
   243  007E42  1829               	xorwf	main@i_493,w,c
   244  007E44  102A               	iorwf	main@i_493+1,w,c
   245  007E46  A4D8               	btfss	status,2,c
   246  007E48  D01D               	goto	l984
   247                           
   248                           ;main.c: 108: for(i = 99; i>=0; i--){
   249  007E4A  0E00               	movlw	0
   250  007E4C  6E2A               	movwf	main@i_493+1,c
   251  007E4E  0E63               	movlw	99
   252  007E50  6E29               	movwf	main@i_493,c
   253  007E52                     l972:
   254  007E52  BE2A               	btfsc	main@i_493+1,7,c
   255  007E54  D017               	goto	l984
   256                           
   257                           ;main.c: 109: dc_PWM(i);
   258  007E56  C029  F01B         	movff	main@i_493,dc_PWM@n
   259  007E5A  C02A  F01C         	movff	main@i_493+1,dc_PWM@n+1
   260  007E5E  0E00               	movlw	0
   261  007E60  BE1C               	btfsc	dc_PWM@n+1,7,c
   262  007E62  0EFF               	movlw	-1
   263  007E64  6E1D               	movwf	dc_PWM@n+2,c
   264  007E66  6E1E               	movwf	dc_PWM@n+3,c
   265  007E68  EC45  F03F         	call	_dc_PWM	;wreg free
   266                           
   267                           ;main.c: 110: _delay((unsigned long)((5)*(24000000/4000.0)));
   268  007E6C  0E27               	movlw	39
   269  007E6E  6E28               	movwf	??_main& (0+255),c
   270  007E70  0EF5               	movlw	245
   271  007E72                     u387:
   272  007E72  2EE8               	decfsz	wreg,f,c
   273  007E74  D7FE               	bra	u387
   274  007E76  2E28               	decfsz	??_main& (0+255),f,c
   275  007E78  D7FC               	bra	u387
   276  007E7A  F000               	nop	
   277  007E7C  0629               	decf	main@i_493,f,c
   278  007E7E  A0D8               	btfss	status,0,c
   279  007E80  062A               	decf	main@i_493+1,f,c
   280  007E82  D7E7               	goto	l972
   281  007E84                     l984:
   282  007E84  4A29               	infsnz	main@i_493,f,c
   283  007E86  2A2A               	incf	main@i_493+1,f,c
   284  007E88  D7C0               	goto	l960
   285  007E8A                     __end_of_main:
   286                           	opt stack 0
   287                           wreg	equ	0xFE8
   288                           status	equ	0xFD8
   289                           
   290 ;; *************** function _dc_PWM *****************
   291 ;; Defined at:
   292 ;;		line 91 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;  n               4   26[COMRAM] long 
   295 ;; Auto vars:     Size  Location     Type
   296 ;;  dc              4   35[COMRAM] long 
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   306 ;;      Params:         4       0       0       0       0       0       0       0       0
   307 ;;      Locals:         4       0       0       0       0       0       0       0       0
   308 ;;      Temps:          5       0       0       0       0       0       0       0       0
   309 ;;      Totals:        13       0       0       0       0       0       0       0       0
   310 ;;Total ram usage:       13 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; Hardware stack levels required when called:    1
   313 ;; This function calls:
   314 ;;		___aldiv
   315 ;;		___lmul
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text1
   322  007E8A                     __ptext1:
   323                           	opt stack 0
   324  007E8A                     _dc_PWM:
   325                           	opt stack 29
   326                           
   327                           ;main.c: 92: long dc = 0;
   328                           
   329                           ;incstack = 0
   330  007E8A  0E00               	movlw	0
   331  007E8C  6E24               	movwf	dc_PWM@dc,c
   332  007E8E  0E00               	movlw	0
   333  007E90  6E25               	movwf	dc_PWM@dc+1,c
   334  007E92  0E00               	movlw	0
   335  007E94  6E26               	movwf	dc_PWM@dc+2,c
   336  007E96  0E00               	movlw	0
   337  007E98  6E27               	movwf	dc_PWM@dc+3,c
   338                           
   339                           ;main.c: 93: dc = (long)n*1023/100;
   340  007E9A  C01B  F001         	movff	dc_PWM@n,___lmul@multiplier
   341  007E9E  C01C  F002         	movff	dc_PWM@n+1,___lmul@multiplier+1
   342  007EA2  C01D  F003         	movff	dc_PWM@n+2,___lmul@multiplier+2
   343  007EA6  C01E  F004         	movff	dc_PWM@n+3,___lmul@multiplier+3
   344  007EAA  0EFF               	movlw	255
   345  007EAC  6E05               	movwf	___lmul@multiplicand,c
   346  007EAE  0E03               	movlw	3
   347  007EB0  6E06               	movwf	___lmul@multiplicand+1,c
   348  007EB2  0E00               	movlw	0
   349  007EB4  6E07               	movwf	___lmul@multiplicand+2,c
   350  007EB6  0E00               	movlw	0
   351  007EB8  6E08               	movwf	___lmul@multiplicand+3,c
   352  007EBA  ECD4  F03E         	call	___lmul	;wreg free
   353  007EBE  C001  F00D         	movff	?___lmul,___aldiv@dividend
   354  007EC2  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
   355  007EC6  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
   356  007ECA  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
   357  007ECE  0E64               	movlw	100
   358  007ED0  6E11               	movwf	___aldiv@divisor,c
   359  007ED2  0E00               	movlw	0
   360  007ED4  6E12               	movwf	___aldiv@divisor+1,c
   361  007ED6  0E00               	movlw	0
   362  007ED8  6E13               	movwf	___aldiv@divisor+2,c
   363  007EDA  0E00               	movlw	0
   364  007EDC  6E14               	movwf	___aldiv@divisor+3,c
   365  007EDE  EC9A  F03F         	call	___aldiv	;wreg free
   366  007EE2  C00D  F024         	movff	?___aldiv,dc_PWM@dc
   367  007EE6  C00E  F025         	movff	?___aldiv+1,dc_PWM@dc+1
   368  007EEA  C00F  F026         	movff	?___aldiv+2,dc_PWM@dc+2
   369  007EEE  C010  F027         	movff	?___aldiv+3,dc_PWM@dc+3
   370                           
   371                           ;main.c: 94: CCPR2L = dc >> 2;
   372  007EF2  0E02               	movlw	2
   373  007EF4  6E1F               	movwf	??_dc_PWM& (0+255),c
   374  007EF6  C024  F020         	movff	dc_PWM@dc,??_dc_PWM+1
   375  007EFA  C025  F021         	movff	dc_PWM@dc+1,??_dc_PWM+2
   376  007EFE  C026  F022         	movff	dc_PWM@dc+2,??_dc_PWM+3
   377  007F02  C027  F023         	movff	dc_PWM@dc+3,??_dc_PWM+4
   378  007F06                     u295:
   379  007F06  661F               	tstfsz	??_dc_PWM,c
   380  007F08  D001               	goto	u296
   381  007F0A  D007               	goto	u297
   382  007F0C                     u296:
   383  007F0C  3423               	rlcf	??_dc_PWM+4,w,c
   384  007F0E  3223               	rrcf	??_dc_PWM+4,f,c
   385  007F10  3222               	rrcf	??_dc_PWM+3,f,c
   386  007F12  3221               	rrcf	??_dc_PWM+2,f,c
   387  007F14  3220               	rrcf	??_dc_PWM+1,f,c
   388  007F16  2E1F               	decfsz	??_dc_PWM,f,c
   389  007F18  D7F6               	goto	u295
   390  007F1A                     u297:
   391  007F1A  5020               	movf	??_dc_PWM+1,w,c
   392  007F1C  6EBB               	movwf	4027,c	;volatile
   393                           
   394                           ;main.c: 95: CCP2CONbits.DC2B = ((dc & 0x03));
   395  007F1E  C024  F01F         	movff	dc_PWM@dc,??_dc_PWM
   396  007F22  0E03               	movlw	3
   397  007F24  161F               	andwf	??_dc_PWM,f,c
   398  007F26  3A1F               	swapf	??_dc_PWM,f,c
   399  007F28  50BA               	movf	4026,w,c	;volatile
   400  007F2A  181F               	xorwf	??_dc_PWM,w,c
   401  007F2C  0BCF               	andlw	-49
   402  007F2E  181F               	xorwf	??_dc_PWM,w,c
   403  007F30  6EBA               	movwf	4026,c	;volatile
   404  007F32  0012               	return		;funcret
   405  007F34                     __end_of_dc_PWM:
   406                           	opt stack 0
   407                           wreg	equ	0xFE8
   408                           status	equ	0xFD8
   409                           
   410 ;; *************** function ___lmul *****************
   411 ;; Defined at:
   412 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul32.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  multiplier      4    0[COMRAM] unsigned long 
   415 ;;  multiplicand    4    4[COMRAM] unsigned long 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  product         4    8[COMRAM] unsigned long 
   418 ;; Return value:  Size  Location     Type
   419 ;;                  4    0[COMRAM] unsigned long 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   427 ;;      Params:         8       0       0       0       0       0       0       0       0
   428 ;;      Locals:         4       0       0       0       0       0       0       0       0
   429 ;;      Temps:          0       0       0       0       0       0       0       0       0
   430 ;;      Totals:        12       0       0       0       0       0       0       0       0
   431 ;;Total ram usage:       12 bytes
   432 ;; Hardware stack levels used:    1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_dc_PWM
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	text2
   441  007DA8                     __ptext2:
   442                           	opt stack 0
   443  007DA8                     ___lmul:
   444                           	opt stack 29
   445                           
   446                           ;incstack = 0
   447  007DA8  0E00               	movlw	0
   448  007DAA  6E09               	movwf	___lmul@product,c
   449  007DAC  0E00               	movlw	0
   450  007DAE  6E0A               	movwf	___lmul@product+1,c
   451  007DB0  0E00               	movlw	0
   452  007DB2  6E0B               	movwf	___lmul@product+2,c
   453  007DB4  0E00               	movlw	0
   454  007DB6  6E0C               	movwf	___lmul@product+3,c
   455  007DB8                     l878:
   456  007DB8  A001               	btfss	___lmul@multiplier,0,c
   457  007DBA  D008               	goto	l882
   458  007DBC  5005               	movf	___lmul@multiplicand,w,c
   459  007DBE  2609               	addwf	___lmul@product,f,c
   460  007DC0  5006               	movf	___lmul@multiplicand+1,w,c
   461  007DC2  220A               	addwfc	___lmul@product+1,f,c
   462  007DC4  5007               	movf	___lmul@multiplicand+2,w,c
   463  007DC6  220B               	addwfc	___lmul@product+2,f,c
   464  007DC8  5008               	movf	___lmul@multiplicand+3,w,c
   465  007DCA  220C               	addwfc	___lmul@product+3,f,c
   466  007DCC                     l882:
   467  007DCC  90D8               	bcf	status,0,c
   468  007DCE  3605               	rlcf	___lmul@multiplicand,f,c
   469  007DD0  3606               	rlcf	___lmul@multiplicand+1,f,c
   470  007DD2  3607               	rlcf	___lmul@multiplicand+2,f,c
   471  007DD4  3608               	rlcf	___lmul@multiplicand+3,f,c
   472  007DD6  90D8               	bcf	status,0,c
   473  007DD8  3204               	rrcf	___lmul@multiplier+3,f,c
   474  007DDA  3203               	rrcf	___lmul@multiplier+2,f,c
   475  007DDC  3202               	rrcf	___lmul@multiplier+1,f,c
   476  007DDE  3201               	rrcf	___lmul@multiplier,f,c
   477  007DE0  5001               	movf	___lmul@multiplier,w,c
   478  007DE2  1002               	iorwf	___lmul@multiplier+1,w,c
   479  007DE4  1003               	iorwf	___lmul@multiplier+2,w,c
   480  007DE6  1004               	iorwf	___lmul@multiplier+3,w,c
   481  007DE8  A4D8               	btfss	status,2,c
   482  007DEA  D7E6               	goto	l878
   483  007DEC  C009  F001         	movff	___lmul@product,?___lmul
   484  007DF0  C00A  F002         	movff	___lmul@product+1,?___lmul+1
   485  007DF4  C00B  F003         	movff	___lmul@product+2,?___lmul+2
   486  007DF8  C00C  F004         	movff	___lmul@product+3,?___lmul+3
   487  007DFC  0012               	return		;funcret
   488  007DFE                     __end_of___lmul:
   489                           	opt stack 0
   490                           wreg	equ	0xFE8
   491                           status	equ	0xFD8
   492                           
   493 ;; *************** function ___aldiv *****************
   494 ;; Defined at:
   495 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\aldiv.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;  dividend        4   12[COMRAM] long 
   498 ;;  divisor         4   16[COMRAM] long 
   499 ;; Auto vars:     Size  Location     Type
   500 ;;  quotient        4   22[COMRAM] long 
   501 ;;  sign            1   21[COMRAM] unsigned char 
   502 ;;  counter         1   20[COMRAM] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  4   12[COMRAM] long 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         8       0       0       0       0       0       0       0       0
   513 ;;      Locals:         6       0       0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0
   515 ;;      Totals:        14       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:       14 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_dc_PWM
   522 ;;		_startSerial
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text3
   527  007F34                     __ptext3:
   528                           	opt stack 0
   529  007F34                     ___aldiv:
   530                           	opt stack 29
   531                           
   532                           ;incstack = 0
   533  007F34  0E00               	movlw	0
   534  007F36  6E16               	movwf	___aldiv@sign,c
   535  007F38  AE14               	btfss	___aldiv@divisor+3,7,c
   536  007F3A  D00A               	goto	l894
   537  007F3C  1E14               	comf	___aldiv@divisor+3,f,c
   538  007F3E  1E13               	comf	___aldiv@divisor+2,f,c
   539  007F40  1E12               	comf	___aldiv@divisor+1,f,c
   540  007F42  6C11               	negf	___aldiv@divisor,c
   541  007F44  0E00               	movlw	0
   542  007F46  2212               	addwfc	___aldiv@divisor+1,f,c
   543  007F48  2213               	addwfc	___aldiv@divisor+2,f,c
   544  007F4A  2214               	addwfc	___aldiv@divisor+3,f,c
   545  007F4C  0E01               	movlw	1
   546  007F4E  6E16               	movwf	___aldiv@sign,c
   547  007F50                     l894:
   548  007F50  AE10               	btfss	___aldiv@dividend+3,7,c
   549  007F52  D00A               	goto	l900
   550  007F54  1E10               	comf	___aldiv@dividend+3,f,c
   551  007F56  1E0F               	comf	___aldiv@dividend+2,f,c
   552  007F58  1E0E               	comf	___aldiv@dividend+1,f,c
   553  007F5A  6C0D               	negf	___aldiv@dividend,c
   554  007F5C  0E00               	movlw	0
   555  007F5E  220E               	addwfc	___aldiv@dividend+1,f,c
   556  007F60  220F               	addwfc	___aldiv@dividend+2,f,c
   557  007F62  2210               	addwfc	___aldiv@dividend+3,f,c
   558  007F64  0E01               	movlw	1
   559  007F66  1A16               	xorwf	___aldiv@sign,f,c
   560  007F68                     l900:
   561  007F68  0E00               	movlw	0
   562  007F6A  6E17               	movwf	___aldiv@quotient,c
   563  007F6C  0E00               	movlw	0
   564  007F6E  6E18               	movwf	___aldiv@quotient+1,c
   565  007F70  0E00               	movlw	0
   566  007F72  6E19               	movwf	___aldiv@quotient+2,c
   567  007F74  0E00               	movlw	0
   568  007F76  6E1A               	movwf	___aldiv@quotient+3,c
   569  007F78  5011               	movf	___aldiv@divisor,w,c
   570  007F7A  1012               	iorwf	___aldiv@divisor+1,w,c
   571  007F7C  1013               	iorwf	___aldiv@divisor+2,w,c
   572  007F7E  1014               	iorwf	___aldiv@divisor+3,w,c
   573  007F80  B4D8               	btfsc	status,2,c
   574  007F82  D02A               	goto	l922
   575  007F84  0E01               	movlw	1
   576  007F86  6E15               	movwf	___aldiv@counter,c
   577  007F88  D006               	goto	l908
   578  007F8A                     l906:
   579  007F8A  90D8               	bcf	status,0,c
   580  007F8C  3611               	rlcf	___aldiv@divisor,f,c
   581  007F8E  3612               	rlcf	___aldiv@divisor+1,f,c
   582  007F90  3613               	rlcf	___aldiv@divisor+2,f,c
   583  007F92  3614               	rlcf	___aldiv@divisor+3,f,c
   584  007F94  2A15               	incf	___aldiv@counter,f,c
   585  007F96                     l908:
   586  007F96  AE14               	btfss	___aldiv@divisor+3,7,c
   587  007F98  D7F8               	goto	l906
   588  007F9A                     l910:
   589  007F9A  90D8               	bcf	status,0,c
   590  007F9C  3617               	rlcf	___aldiv@quotient,f,c
   591  007F9E  3618               	rlcf	___aldiv@quotient+1,f,c
   592  007FA0  3619               	rlcf	___aldiv@quotient+2,f,c
   593  007FA2  361A               	rlcf	___aldiv@quotient+3,f,c
   594  007FA4  5011               	movf	___aldiv@divisor,w,c
   595  007FA6  5C0D               	subwf	___aldiv@dividend,w,c
   596  007FA8  5012               	movf	___aldiv@divisor+1,w,c
   597  007FAA  580E               	subwfb	___aldiv@dividend+1,w,c
   598  007FAC  5013               	movf	___aldiv@divisor+2,w,c
   599  007FAE  580F               	subwfb	___aldiv@dividend+2,w,c
   600  007FB0  5014               	movf	___aldiv@divisor+3,w,c
   601  007FB2  5810               	subwfb	___aldiv@dividend+3,w,c
   602  007FB4  A0D8               	btfss	status,0,c
   603  007FB6  D009               	goto	l918
   604  007FB8  5011               	movf	___aldiv@divisor,w,c
   605  007FBA  5E0D               	subwf	___aldiv@dividend,f,c
   606  007FBC  5012               	movf	___aldiv@divisor+1,w,c
   607  007FBE  5A0E               	subwfb	___aldiv@dividend+1,f,c
   608  007FC0  5013               	movf	___aldiv@divisor+2,w,c
   609  007FC2  5A0F               	subwfb	___aldiv@dividend+2,f,c
   610  007FC4  5014               	movf	___aldiv@divisor+3,w,c
   611  007FC6  5A10               	subwfb	___aldiv@dividend+3,f,c
   612  007FC8  8017               	bsf	___aldiv@quotient,0,c
   613  007FCA                     l918:
   614  007FCA  90D8               	bcf	status,0,c
   615  007FCC  3214               	rrcf	___aldiv@divisor+3,f,c
   616  007FCE  3213               	rrcf	___aldiv@divisor+2,f,c
   617  007FD0  3212               	rrcf	___aldiv@divisor+1,f,c
   618  007FD2  3211               	rrcf	___aldiv@divisor,f,c
   619  007FD4  2E15               	decfsz	___aldiv@counter,f,c
   620  007FD6  D7E1               	goto	l910
   621  007FD8                     l922:
   622  007FD8  5016               	movf	___aldiv@sign,w,c
   623  007FDA  B4D8               	btfsc	status,2,c
   624  007FDC  D008               	goto	l926
   625  007FDE  1E1A               	comf	___aldiv@quotient+3,f,c
   626  007FE0  1E19               	comf	___aldiv@quotient+2,f,c
   627  007FE2  1E18               	comf	___aldiv@quotient+1,f,c
   628  007FE4  6C17               	negf	___aldiv@quotient,c
   629  007FE6  0E00               	movlw	0
   630  007FE8  2218               	addwfc	___aldiv@quotient+1,f,c
   631  007FEA  2219               	addwfc	___aldiv@quotient+2,f,c
   632  007FEC  221A               	addwfc	___aldiv@quotient+3,f,c
   633  007FEE                     l926:
   634  007FEE  C017  F00D         	movff	___aldiv@quotient,?___aldiv
   635  007FF2  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
   636  007FF6  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
   637  007FFA  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
   638  007FFE  0012               	return	
   639  008000                     __end_of___aldiv:
   640                           	opt stack 0
   641                           wreg	equ	0xFE8
   642                           status	equ	0xFD8
   643                           
   644 ;; *************** function _PWM_config *****************
   645 ;; Defined at:
   646 ;;		line 81 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   660 ;;      Params:         0       0       0       0       0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text4
   674  007D90                     __ptext4:
   675                           	opt stack 0
   676  007D90                     _PWM_config:
   677                           	opt stack 30
   678                           
   679                           ;main.c: 82: PR2 = 255;
   680                           
   681                           ;incstack = 0
   682  007D90  68CB               	setf	4043,c	;volatile
   683                           
   684                           ;main.c: 83: CCPR2L = 0b01111111;
   685  007D92  0E7F               	movlw	127
   686  007D94  6EBB               	movwf	4027,c	;volatile
   687                           
   688                           ;main.c: 84: CCP2CON = 0b00111100;
   689  007D96  0E3C               	movlw	60
   690  007D98  6EBA               	movwf	4026,c	;volatile
   691                           
   692                           ;main.c: 85: TRISC = 0;
   693  007D9A  0E00               	movlw	0
   694  007D9C  6E94               	movwf	3988,c	;volatile
   695                           
   696                           ;main.c: 86: LATC = 0;
   697  007D9E  0E00               	movlw	0
   698  007DA0  6E8B               	movwf	3979,c	;volatile
   699                           
   700                           ;main.c: 87: T2CON |= 0b01;
   701  007DA2  80CA               	bsf	4042,0,c	;volatile
   702                           
   703                           ;main.c: 88: T2CONbits.TMR2ON = 1;
   704  007DA4  84CA               	bsf	4042,2,c	;volatile
   705  007DA6  0012               	return		;funcret
   706  007DA8                     __end_of_PWM_config:
   707                           	opt stack 0
   708  0000                     wreg	equ	0xFE8
   709                           status	equ	0xFD8
   710                           wreg	equ	0xFE8
   711                           status	equ	0xFD8
   712                           
   713                           	psect	rparam
   714  0000                     wreg	equ	0xFE8
   715                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     42      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_dc_PWM
    _dc_PWM->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1808
                                             39 COMRAM     3     3      0
                         _PWM_config
                             _dc_PWM
 ---------------------------------------------------------------------------------
 (1) _dc_PWM                                              13     9      4    1650
                                             26 COMRAM    13     9      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1060
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_config
   _dc_PWM
     ___aldiv
       ___lmul (ARG)
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     2A      2A       1       44.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 01 17:26:49 2018

            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l900 7F68                      l910 7F9A  
                    l906 7F8A                      l922 7FD8                      l908 7F96  
                    l926 7FEE                      l918 7FCA                      l960 7E0A  
                    l882 7DCC                      l972 7E52                      l964 7E1A  
                    l894 7F50                      l878 7DB8                      l958 7E02  
                    l984 7E84             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      u295 7F06                      u296 7F0C  
                    u297 7F1A                      u377 7E36                      u387 7E72  
             _PWM_config 7D90                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   _LATC 000F8B                     _TMR0 000FD6                     _main 7DFE  
                   start 0000            __CFG_IESO$OFF 000000             ___param_bank 000000  
          __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000          __end_of___aldiv 8000  
                  ?_main 0001                    _T2CON 000FCA                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF            __CFG_USBDIV$1 000000  
                  _TRISC 000F94                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0005            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000           __CFG_MCLRE$OFF 000000  
        __initialization 7D8A             __end_of_main 7E8A                   ??_main 0028  
          __activetblptr 000000              ?_PWM_config 0001                   _CCPR2L 000FBB  
                 _SPBRGH 000FB0           __CFG_XINST$OFF 000000                   _dc_PWM 7E8A  
                 ___lmul 7DA8                ??___aldiv 0015           __CFG_STVREN$ON 000000  
             __accesstop 0060  __end_of__initialization 7D8A            ___rparam_used 000001  
    __size_of_PWM_config 0018           __pcstackCOMRAM 0001                  ?_dc_PWM 001B  
                ?___lmul 0001                  _CCP2CON 000FBA           ___lmul@product 0009  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 7F34          __size_of_dc_PWM 00AA          __size_of___lmul 0056  
                dc_PWM@n 001B                  __pcinit 7D8A                  __ramtop 0800  
                __ptext0 7DFE                  __ptext1 7E8A                  __ptext2 7DA8  
                __ptext3 7F34                  __ptext4 7D90                _T0CONbits 000FD5  
           ??_PWM_config 0001                _T2CONbits 000FCA         ___aldiv@dividend 000D  
   end_of_initialization 7D8A       __end_of_PWM_config 7DA8                _RCSTAbits 000FAB  
       ___aldiv@quotient 0017                _TRISCbits 000F94              _CCP2CONbits 000FBA  
              _TXSTAbits 000FAC           __end_of_dc_PWM 7F34           __end_of___lmul 7DFE  
            _BAUDCONbits 000FB8      start_initialization 7D8A                 ??_dc_PWM 001F  
               ??___lmul 0009         __CFG_LPT1OSC$OFF 000000                 ?___aldiv 000D  
        ___aldiv@divisor 0011          ___aldiv@counter 0015                 _PIE1bits 000F9D  
       __CFG_WDTPS$32768 000000                main@i_493 0029        ___lmul@multiplier 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 00CC  
               dc_PWM@dc 0024            __size_of_main 008C    __CFG_CPUDIV$OSC3_PLL4 000000  
             _INTCONbits 000FF2             ___aldiv@sign 0016       __CFG_FOSC$HSPLL_HS 000000  
